<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
                           http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd                           
                           http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
                           http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<context:annotation-config />
	<context:spring-configured />
	<task:annotation-driven />
	<context:component-scan base-package="com.bosch.tmp.integration.serviceReference.cia" />
    <context:component-scan base-package="com.bosch.tmp.integration.persistence" />
    <context:component-scan base-package="com.bosch.tmp.integration.dao" />
    <context:component-scan base-package="com.bosch.tmp.integration.creation" />
    <context:component-scan base-package="com.bosch.tmp.integration.creation.results" />
    
 	<bean id="resultProcessor" class="com.bosch.tmp.integration.process.results.PatientResultsProcessor" scope="prototype"/>
 	<bean id="resultWorkflowHandler" class="com.bosch.tmp.integration.process.results.ResultsWorkflowHandler" scope="prototype"/>
 
	<!-- Initialization of JAXBContext and its (un)marshaller to improve performance. -->
	<bean id="jaxbContext" class="javax.xml.bind.JAXBContext"
		factory-method="newInstance">
		<constructor-arg type="java.lang.String" value="org.hl7.v2xml" />
	</bean>
	<!-- Pool (un)marshallers to improve performance -->
	<bean id="marshallerTarget" class="javax.xml.bind.Marshaller"
		factory-bean="jaxbContext" factory-method="createMarshaller" scope="prototype">
	</bean>
	<bean id="unmarshallerTarget" class="javax.xml.bind.Unmarshaller"
		factory-bean="jaxbContext" factory-method="createUnmarshaller" scope="prototype">
	</bean>
	<bean id="poolTargetSource" class="org.springframework.aop.target.CommonsPoolTargetSource">
		<property name="targetBeanName" value="marshallerTarget" />
		<property name="maxSize" value="25" />
	</bean>
	<bean id="unmarshallerPoolTargetSource" class="org.springframework.aop.target.CommonsPoolTargetSource">
		<property name="targetBeanName" value="unmarshallerTarget" />
		<property name="maxSize" value="25" />
	</bean>
	<bean id="marshaller" class="org.springframework.aop.framework.ProxyFactoryBean">
		<qualifier value="marshaller" />
		<property name="targetSource" ref="poolTargetSource" />
	</bean>
	<bean id="unmarshaller" class="org.springframework.aop.framework.ProxyFactoryBean">
		<qualifier value="unmarshaller" />
		<property name="targetSource" ref="unmarshallerPoolTargetSource" />
	</bean>

	<!-- The following configuration is needed for persistence. -->
	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<tx:jta-transaction-manager id="transactionManager" />

	<!-- 'aspectj' mode has to be used, since 'spring-configured' is used. -->
	<tx:annotation-driven transaction-manager="transactionManager"
		mode="aspectj" />

</beans>
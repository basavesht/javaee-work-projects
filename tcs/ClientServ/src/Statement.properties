#This property file will be used to map the query to a key
###############################################################################
#.Query will have the query to be executed
###############################################################################
#.TOColumnMap will have the mappings between Table Columns and the TO Variables
#.InputType will specify the inputType to be supplied to the where clause 
#incase of Select, Update and Delete query statements
#and values clause incase of Insert Query statement

###############################################################################
#.OutputType will specify the outputType expected after the execution 
#of query specially framed for Select Query Statements
###############################################################################

###Bulk Import File
getImpfiletypesInfo.Query=select (bfafiletype||''||ssmappingid) as serviceId ,bfafiletype from ds_bulkimp_fileaccess
getImpfiletypesInfo.TOColumnMap={serviceId=serviceId,bfafiletype=bfafiletype}
getImpfiletypesInfo.OutputType=java.util.Vector

############# JAAS Login Query  #############
#getAuthenticationDetails.Query=select a.usrgrpid as usrgrpid,a.usruserid as usruserid,a.usrusername as usrusername,a.custid as custid, b.cmtlongname1 as usrlongname,(select t.createddate from ds_domains t where t.dmndomain='D_Date') as createdDate,a.usrsigntype from DS_USER a, DS_CUST_MASTER b where a.custid = b.cmtqlcustid and a.usruserid=#usruserid:varchar#

#getAuthenticationDetails.TOColumnMap={usrgrpid=usrgrpid,usruserid=usruserid,usrusername=usrusername,custid=custid,usrlongname=usrlongname,createdDate=createdDate,usrsigntype=usrsigntype}
#getAuthenticationDetails.OutputType=java.util.ArrayList

getAuthenticationDetails.Query=select a.usruserid as usruserid,a.usrusername as usrusername,a.usrgrpid as usrgrpid,char(a.custid) as custid, b.cmtlongname1 as usrlongname,(select t.createddate from ds_domains t where t.dmndomain='D_Date') as createdDate,a.signtype from DS_USER a, DS_CUST_MASTER b where a.custid = b.cmtqlcustid and a.usruserid=#usruserid:varchar#

getAuthenticationDetails.TOColumnMap={usruserid=usruserid,usrusername=usrusername,usrgrpid=usrgrpid,custid=custid,usrlongname=usrlongname,createdDate=createdDate,signtype=signtype}
getAuthenticationDetails.OutputType=java.util.ArrayList

##Authorisation Query

paymentAuthorizationList.Query=select paytrxkey, paybatchref, paypayref, paycustref, paytypecode, \
	       paypymtdate, paydebitamtbce, paypayeenamebo, paycurrcode, paydebitamt \
			FROM   ds_pay_txns where paydebitaccnum in ( \
			 SELECT  DISTINCT udafieldvalue BULK \
		                 FROM    ds_dap_acct_cd acctcd \
	                 WHERE   UPPER(acctcd.deleteflag) = 'N' \
		                 AND    udafieldname =  'Acct Initiation' \
		                 AND    udadapid     IN (   SELECT distinct ufddapid \
                                        FROM    ds_user_fap_dap_link link \
                                        WHERE   UPPER(link.deleteflag) = 'N' \
                                        AND     ufdgrpid  = 'WDCEXT' AND ufduserid = 'WDCUSER') \
                 	AND    udagrpid     =  'WDCEXT') and deleteflag='N' \
	                 and paytrxkey in (select distinct psttrxkey from ds_pay_statuses where \
	                 pststatuscode != 18) \
	                 order by paypayref, paytrxkey

paymentAuthorizationList.Query=PAYTRXKEY=PAYTRXKEY,PAYBATCHREF=PAYBATCHREF,PAYPAYREF=PAYPAYREF,PAYCUSTREF=PAYCUSTREF,PAYTYPECODE=PAYTYPECODE,PAYPYMTDATE=PAYPYMTDATE,PAYDEBITAMTBCE=PAYDEBITAMTBCE,PAYPAYEENAMEBO=PAYPAYEENAMEBO,PAYCURRCODE=PAYCURRCODE,PAYDEBITAMT=PAYDEBITAMT
paymentAuthorizationList.OutputType=java.util.ArrayList 


dapCheck.Query=SELECT  DISTINCT udafieldvalue \
                 FROM    ds_dap_acct_cd acctcd \
                 WHERE   UPPER(acctcd.deleteflag) = 'N' \
                 AND    udafieldname =  #dapField:varchar# \
                 AND    udafieldvalue = #dapValue:varchar# \
                 AND    udadapid     IN (   SELECT distinct ufddapid \
                                            FROM    ds_user_fap_dap_link link \
                                            WHERE   UPPER(link.deleteflag) = 'N' \
                                            AND     ufdgrpid  = #groupID:varchar# \
                                            AND     ufduserid = #userID:varchar# \
                                        ) \
                 AND    udagrpid     =  #groupID:varchar# 
dapCheck.StmtType=Statement
dapCheck.TOColumnMap={udafieldvalue=udafieldvalue}
dapCheck.OutputType=java.util.ArrayList

matrixCheck.Query=SELECT mdlmatrixcomb \
		from ds_matrix_dtl \
		where mdlgrpid =  #groupID:varchar# \
		and mdlmatrixnum = (select TAMMATRIXNUM \
			FROM DS_TI_ACC_MASTER \
			WHERE TAMACCNUM = #accountNo:varchar# \
			AND TAMGRPID=	#groupID:varchar#) \
		and mdlsignlimit >= #txnAmount:numeric# and deleteflag='N'
matrixCheck.StmtType=Statement
matrixCheck.TOColumnMap={mdlmatrixcomb=mdlmatrixcomb}
matrixCheck.OutputType=java.util.ArrayList

checkPaymentBatchAuthorization.Query=SELECT BATAUTHBY1, BATAUTHBY2, BATAUTHBY3 \
		FROM ds_batch \
		WHERE BATGRPID =  #groupID:varchar# \
		AND BATBATCHREF = #batchID:varchar#
checkPaymentBatchAuthorization.StmtType=Statement
checkPaymentBatchAuthorization.TOColumnMap={BATAUTHBY1=BATAUTHBY1,BATAUTHBY2=BATAUTHBY2,BATAUTHBY3=BATAUTHBY3}
checkPaymentBatchAuthorization.OutputType=java.util.ArrayList

updatePaymentBatchAuthorization.Query=UPDATE ds_batch SET BATAUTHBY1 = #Authoriser1:varchar#, BATAUTHBY2 = #Authoriser2:varchar#, BATAUTHBY3 = #Authoriser3:varchar# ,BATSTATUS=#Status:varchar# WHERE BATGRPID =  #GroupID:varchar# AND BATBATCHREF = #BatchID:varchar# 
updatePaymentBatchAuthorization.StmtType=Statement

updatePaymentTxnsAuthorization.Query=UPDATE ds_pay_txns SET PAYCCSSTATUSCODE=#Status:varchar# WHERE PAYGROUPID =  #GroupID:varchar# AND PAYBATCHREF = #BatchID:varchar# and PAYCCSSTATUSCODE='6'
updatePaymentTxnsAuthorization.StmtType=Statement

authorisedUserMatrix.Query=SELECT SIGNTYPE \
		FROM ds_user \
		WHERE USRGRPID =  #GroupID:varchar# \
		AND USRUSERID = #UserID:varchar#
authorisedUserMatrix.StmtType=Statement
authorisedUserMatrix.TOColumnMap={SIGNTYPE=SIGNTYPE}
authorisedUserMatrix.OutputType=java.util.ArrayList

####

#getFapInfo.Query = select  distinct UFAPGMID as programid, \
#       	   UFAPGMACTION as actionid \
#		   from    DS_FAP_PGM_ACTION fap,\
#          	   DS_USER_FAP_DAP_LINK lnk,\
#        	   DS_PROGRAMS pgm \
#		   where   UFAGRPID = #usrgrpid:varchar# \
#		   and     UFDGRPID= UFAGRPID \
#		   and     UFDUSERID = #usruserid:varchar# \
#		   and     UFAFAPID = UFDFAPID \
#		   and     UPGPROGRAMID = UFAPGMID \
#		   and     lnk.deleteflag='N' \
#		   and     fap.deleteflag='N' \
#		   and     pgm.deleteflag='N'


getFapInfo.Query =select * from (select distinct upaprogram_id as programid,upaprogramaction as actionid from DS_PROGRAM_ACTION where defaultflag='Y'  and upaprogapplarea='Payments'  Union all \
			select  distinct UFAPGMID as programid, \
        	   UFAPGMACTION as actionid \
 		   from    DS_FAP_PGM_ACTION fap,\
          	   DS_USER_FAP_DAP_LINK lnk,\
        	   DS_PROGRAMS pgm \
		   where   UFAGRPID = #usrgrpid:varchar# \
		   and     UFDGRPID= UFAGRPID \
		   and     UFDUSERID = #usruserid:varchar# \
		   and     UFAFAPID = UFDFAPID \
		   and     UPGPROGRAMID = UFAPGMID \
		   and     lnk.deleteflag='N' \
		   and     fap.deleteflag='N' \
		   and     pgm.deleteflag='N' ) order by programid,actionid

getFapInfo.TOColumnMap ={UFDUSERID=usruserid,UFAGRPID=usrgrpid}
getFapInfo.OutputType= java.util.HashMap

getMenuFapInfo.Query = select  distinct UPGPROGRAMID, upgprogramname || '~' || \
				appl.dmndomainvaldesc || '~' || \
		 		modl.dmndomainvaldesc || '~' || upgparams ||  '~' || screentype, \
				pgm.upgapplid, pgm.upgmoduleid , pgm.upgmenuid \
 		   from     DS_FAP_PGM_ACTION fap, \
          	   DS_USER_FAP_DAP_LINK lnk, \
        	   DS_PROGRAMS pgm,  \
		           DS_DOMAINS appl, \
		           DS_DOMAINS modl \
		   where   UFAGRPID = #usrgrpid:varchar# \
		   and     UFDGRPID= UFAGRPID  \
		   and     UFDUSERID = #usruserid:varchar# \
		   and     UFAFAPID = UFDFAPID \
		   and     UPGPROGRAMID = UFAPGMID \
		   and     lnk.deleteflag='N' \
		   and     fap.deleteflag='N' \
		   and     pgm.deleteflag='N' \
       		   and     upgmenuid is not null \
		   AND 	   appl.DMNdomain = 'D_ApplicationArea' \
		   AND 	   appl.dmndomainval = upgprogapplarea \
		   AND 	   modl.DMNdomain = 'D_Module' \
		   AND 	   modl.dmndomainval = upgmoduleid \
       order by pgm.upgapplid, pgm.upgmoduleid , pgm.upgmenuid 
getMenuFapInfo.TOColumnMap ={UFDUSERID=usruserid,UFAGRPID=usrgrpid}
getMenuFapInfo.OutputType= java.util.LinkedHashMap
getMenuFapInfo.StmtType=Statement

setExtFapPrograms.Query=insert into  ds_fap_pgm_action (UFAGRPID,UFAFAPID,UFAPGMID,UFAPGMACTION,CREATEDBY,CREATEDDATE,MODIFIEDBY,MODIFIEDDATE,DELETEFLAG,VERSIONNUM,ROLEID,LEVELTYPE) (select distinct UFdGRPID,ufdfapid,upgprogramid,upaprogramaction,#usruserid:varchar#,sysdate,#usruserid:varchar#,sysdate,'N',1,UPAPROGROLEID,ds_program_action.LEVELTYPE as leveltype from ds_programs,ds_program_action, ds_user_fap_dap_link where ds_user_fap_dap_link.UFDFAPID in ( select ufdfapid from ds_user_fap_dap_link where UFDGRPID=#usrgrpid:varchar# and UFDUSERID=#usruserid:varchar# and ufdfapid not like 'Dummy FAP') and UPAPROGRAMACTIONDESC in (#usrprgdesc:varchar#) and PROGRAMGROUP in (#usrprggrps:varchar#) and UPAPROGAPPLAREA='Payments' and upaprogram_id=upgprogramid and ufdgrpid=#usrgrpid:varchar#)
setExtFapPrograms.TOColumnMap ={usruserid=usruserid,usrgrpid=usrgrpid,usrprgdesc=usrprgdesc,usrprggrps=usrprggrps}
setExtFapPrograms.StmtType=Statement

#getDapInfo.Query = SELECT DISTINCT udafieldname, udafieldvalue \
 #                FROM    ds_dap_acct_cd acctcd \
 #                WHERE   UPPER(acctcd.deleteflag) = 'N' \
  #               AND    udafieldname =  'Customer ID' \
  #               AND    udadapid     IN (   SELECT distinct ufddapid \
  #                                          FROM    ds_user_fap_dap_link link \
  #                                          WHERE   UPPER(link.deleteflag) = 'N' \
     #                                       AND     ufdgrpid  = #usrgrpid:varchar# \
    #                                        AND     ufduserid = #usruserid:varchar# ) \
   #              AND    udagrpid     =  #usrgrpid:varchar#

getDapInfo.Query = SELECT DISTINCT udafieldname, udafieldvalue \
                 FROM    ds_dap_acct_cd acctcd \
                 WHERE   UPPER(acctcd.deleteflag) = 'N' \
                 AND    udafieldname =  'Customer ID' \
                 AND    udadapid     IN (   SELECT distinct ufddapid \
                                            FROM    ds_user_fap_dap_link link \
                                            WHERE   UPPER(link.deleteflag) = 'N' \
                                            AND     ufdgrpid  = #usrgrpid:varchar# \
                                            AND     ufduserid = #usruserid:varchar# ) \
                 AND    udagrpid     =  #usrgrpid:varchar#

getDapInfo.TOColumnMap ={UFDUSERID=usruserid,UFAGRPID=usrgrpid}
getDapInfo.OutputType= java.util.HashMap


### Transaction Password Service
validateTransPwd.Query=select count(*) from ds_user where usruserid=#usruserid:varchar# and usrtranspwd=#usrtranspwd:varchar#
validateTransPwd.TOColumnMap ={count(*)=count(*)}
validateTransPwd.OutputType= java.util.ArrayList 

###Template Queries##

searchTemplateName.Query=SELECT TPTTEMPLATENAME,TPTTEMPLATENAME \
			FROM IDC_TEMPLATE \
			WHERE TPTTEMPLATENAME=#tptTemplateName:varchar#
searchTemplateName.TOColumnMap ={TPTTEMPLATENAME=TPTTEMPLATENAME}
searchTemplateName.OutputType= java.util.Vector

#insertTemplate.Query=INSERT INTO IDC_TEMPLATE(TPTUSERID,TPTGROUPID,TPTTEMPLATENAME,TPTTEMPLATE,TPTQLTASK,TPTSCREENTYPE,TPTPUBLICFLAG) \
	VALUES(	#tptUserID:varchar#,#tptGropuID:varchar#,#tptTemplateName:varchar#,#tptTemplate:varchar#,#tptQlTask:varchar#,#tptScreenType:varchar#,#tptPublicFlag:varchar#)
#insertTemplate.StmtType=PreparedStatement

insertTemplate.Query=INSERT INTO IDC_TEMPLATE(TPTUSERID,TPTGROUPID,TPTTEMPLATENAME,TPTTEMPLATE,TPTQLTASK,TPTSCREENTYPE,TPTPUBLICFLAG,TPTSCREENSTATE) VALUES(#tptUserID:varchar#,#tptGropuID:varchar#,#tptTemplateName:varchar#,#tptTemplate:varchar#,#tptQlTask:varchar#,#tptScreenType:varchar#,#tptPublicFlag:varchar#,#tptScreenstate:varchar#)
insertTemplate.StmtType=Statement

getTemplate.Query=SELECT TPTTEMPLATE FROM IDC_TEMPLATE WHERE \ TPTTEMPLATENAME=#tptTemplateName:varchar#
getTemplate.TOColumnMap ={TPTTEMPLATE=TPTTEMPLATE}
getTemplate.OutputType=java.util.ArrayList
getTemplate.StmtType=Statement


getTemplateNames.Query=SELECT TPTTEMPLATENAME,TPTTEMPLATENAME FROM IDC_TEMPLATE WHERE (TPTUSERID=#USERID:varchar# OR TPTPUBLICFLAG='Y') AND TPTQLTASK=#SCREENNAME:varchar#
getTemplateNames.TOColumnMap ={TPTTEMPLATENAME=TPTTEMPLATENAME}
getTemplateNames.OutputType= java.util.Vector


## Internationalisation Service

getLanguageInfo.Query=select code,countrycode from ds_languages lang,ds_user_profile profile where lang.language=profile.language and profile.customerid=#custid:varchar#
getLanguageInfo.TOColumnMap ={code=code,countrycode=countrycode}
getLanguageInfo.OutputType= java.util.ArrayList

getDsDapCount.Query=select udpgrpid from ds_dap where deleteflag='N' and udpgrpid=#udpgrpid:varchar#
getDsDapCount.TOColumnMap={udpgrpid=udpgrpid}
getDsDapCount.OutputType=com.tcs.ebw.sysadmin.transferobject.DsCustGrpRefNDBTO

getDsFapCount.Query=select ufpgrpid from ds_fap where deleteflag='N' and ufpgrpid=#ufpgrpid:varchar#
getDsFapCount.TOColumnMap={ufpgrpid=ufpgrpid}
getDsFapCount.OutputType=com.tcs.ebw.sysadmin.transferobject.DsCustGrpRefNDBTO

getDsUserCount.Query=select usrgrpid from ds_user where deleteflag='N' and usrgrpid=#usrgrpid:varchar#
getDsUserCount.TOColumnMap={usrgrpid=usrgrpid}
getDsUserCount.OutputType=com.tcs.ebw.sysadmin.transferobject.DsCustGrpRefNDBTO

getGroupReportCount.Query=select crtgrpid from DS_CUST_RPT_REF where deleteflag='N' and crtgrpid=#crtgrpid:varchar#
getGroupReportCount.TOColumnMap={crtgrpid=crtgrpid}
getGroupReportCount.OutputType=com.tcs.ebw.sysadmin.transferobject.DsCustGrpRefNDBTO

getGroupLinkCount.Query=select cglqlpcustidgrpid from DS_CUST_GRP_LINK where deleteflag='N' and cglqlpcustidgrpid=#cglqlpcustidgrpid:varchar#
getGroupLinkCount.TOColumnMap={cglqlpcustidgrpid=cglqlpcustidgrpid}
getGroupLinkCount.OutputType=com.tcs.ebw.sysadmin.transferobject.DsCustGrpRefNDBTO

getGroupMappingCount.Query=select cmpgrpid from DS_CUSTID_MAP where deleteflag='N' and cmpgrpid=#cmpgrpid:varchar#
getGroupMappingCount.TOColumnMap={cmpgrpid=cmpgrpid}
getGroupMappingCount.OutputType=com.tcs.ebw.sysadmin.transferobject.DsCustGrpRefNDBTO 



getCurrencyInfo.Query= select * from DS_CURR_REF
getCurrencyInfo.TOColumnMap ={CURCURRCODE=cURCURRCODE,CURCURRMAJOR=cURCURRMAJOR,CURSYMBOL=cURSYMBOL,CURDECPLACE=cURDECPLACE,CURCURRMINOR=cURCURRMINOR,CREATEDBY=cREATEDBY,CREATEDDATE=cREATEDDATE,MODIFIEDBY=mODIFIEDBY,MODIFIEDDATE=mODIFIEDDATE,DELETEFLAG=dELETEFLAG,VERSIONNUM=vERSIONNUM,CURCLSCURRENCYFLAG=cURCLSCURRENCYFLAG,AUTHORISEDBY=aUTHORISEDBY,AUTHORISEDDATE=aUTHORISEDDATE,FIRSTAUTHORISEDBY=fIRSTAUTHORISEDBY,FIRSTAUTHORISEDDATE=fIRSTAUTHORISEDDATE}
getCurrencyInfo.OutputType=com.tcs.ebw.transferobject.DsCurrRefTO[]
 
  
getEmpInfo.Query=select EmpNo, Designation, Department From Employee where EmpNo=#empNo:varchar#
getEmpInfo.TOColumnMap={EmpNo=empNo,Designation=designation,Department=department}
getEmpInfo.OutputType=Object[]
 

setSellOrder.Query=Insert into SellOrder values(#sellOrderId:varchar#,#sellOrderDt:varchar#,#exchangeCurrency:varchar#,#exchangeRate:varchar#,#baseCurrency:varchar#,#itemDescription:varchar#)

getSellOrderInfo.Query=select SellOrderId, OrderDt, ExchangeCurrency,ExchangeRate, BaseCurrency, ItemDescription From SellOrder where SellOrderId=#sellOrderId:varchar#
getSellOrderInfo.TOColumnMap={SellOrderId=sellOrderId,OrderDt=sellOrderDt,ExchangeCurrency=exchangeCurrency,ExchangeRate=exchangeRate,BaseCurrency=baseCurrency,ItemDescription=itemDescription}
getSellOrderInfo.OutputType=com.tcs.ebw.transferobject.SellOrderTO[]


setGroupNewRef.Query=Insert into DS_CUST_GRP_REF(cgrgrpid,cgrshortname,cgrgrptype,cgrgrpname1,cgrgrpname2,cgrgrpcontname,cgremailid,cgraddr1,cgraddr2,cgraddr3,cgraddr4,cgraddr5,cgrtelnum,cgrcountrycode,cgrcurrcode,cgradtrtnperiod,cgrdefaultdbacc,cgrmarketsegment) values(#cgrgrpid:varchar#,#cgrshortname:varchar#,#cgrgrptype:varchar#,#cgrgrpname1:varchar#,#cgrgrpname2:varchar#,#cgrgrpcontname:varchar#,#cgremailid:varchar#,#cgraddr1:varchar#,#cgraddr2:varchar#,#cgraddr3:varchar#,#cgraddr4:varchar#,#cgraddr5:varchar#,#cgrtelnum:varchar#,#cgrcountrycode:varchar#,#cgrcurrcode:varchar#,#cgradtrtnperiod:numeric#,#cgrdefaultdbacc:varchar#,#cgrmarketsegment:varchar#) 
setGroupNewRef.StmtType=Statement

setGrpEditReport.Query=Insert into DS_CUST_RPT_REF(crtrptcode,crtgrpid,crtfreq,crtlchnltype,crtfilefmt,crtreppreptime,crtrefno) values(#cRTRPTCODE:varchar#,#cRTGRPID:varchar#,#cRTFREQ:varchar#,#cRTLCHNLTYPE:varchar#,#cRTFILEFMT:varchar#,#cRTREPPREPTIME:varchar#,#cRTREFNO:numeric#)
setGrpEditLink.Query=Insert into DS_CUST_GRP_LINK(cglqlpcustidgrpid,cglqlccustidgrpid) values(#cGLQLPCUSTIDGRPID:varchar#,#cGLQLCCUSTIDGRPID:varchar#)
setGrpEditMapping.Query=Insert into DS_CUSTID_MAP(cmpqlcustid,cmpcountrycode,cmpapplsys,cmpapplcustid,cmpchannelid,cmpgrpid,intstatus) values(#cMPQLCUSTID:numeric#,#cMPCOUNTRYCODE:varchar#,#cMPAPPLSYS:varchar#,#cMPAPPLCUSTID:varchar#,#cMPCHANNELID:varchar#,#cMPGRPID:varchar#,#iNTSTATUS:char#)
setCustomerId.Query = Insert into DS_CUSTID_MAP(cmpqlcustid,cmpcountrycode,cmpgrpid) values(#cmpqlcustid:numeric#,#cmpcountrycode:varchar#,#cmpgrpid:varchar#)

#updateGroupNewRef.Query=Update DS_CUST_GRP_REF set cgrgrpname1=#cgrgrpname1:varchar#,cgrgrpname2=#cgrgrpname2:varchar#,cgrqlcustid=#cgrqlcustid:numeric#,cgrgrptype=#cgrgrptype:varchar#,cgrshortname=#cgrshortname:varchar#,cgrgrpcontname=#cgrgrpcontname:varchar#,cgraddr1=#cgraddr1:varchar#,cgraddr2=#cgraddr2:varchar#,cgraddr3=#cgraddr3:varchar# ,cgremailid=#cgremailid:varchar# where cgrgrpid=#cgrgrpid:varchar#
updateGrpEditReport.Query=Update DS_CUST_RPT_REF set crtgrpid=#crtgrpid:varchar#,crtbatchcriteria=#crtbatchcriteria:numeric# ,crtlastgenerate=#crtlastgenerate:date# where crtgrpid=#crtgrpid:varchar#
updateGrpEditReport.StmtType=PreparedStatement

#updateGrpEditReportNew.Query=Update DS_CUST_RPT_REF set crtgrpid=#crtgrpid:varchar#,crtapplarea=#crtapplarea:varchar#, crtrptcode=#crtrptcode:varchar#, crtfilefmt=#crtfilefmt:varchar#, crtlchnltype=#crtlchnltype:varchar#, crtreppreptime=to_date(#crtreppreptime:date#,'mm/dd/yyyy'),crtfreq=#crtfreq:varchar#,crtlastgenerate=to_date(#crtlastgenerate:date#,'mm/dd/yyyy'),crtbatchcriteria=#crtbatchcriteria:numeric# where crtgrpid=#crtgrpid:varchar#

updateGrpEditReportNew.Query=Update DS_CUST_RPT_REF set crtgrpid=#crtgrpid:varchar#,crtapplarea=#crtapplarea:varchar#,crtrptcode=#crtrptcode:varchar#,crtfilefmt=#crtfilefmt:varchar#,crtlchnltype=#crtlchnltype:varchar#,crtreppreptime=#crtreppreptime:date#,crtfreq=#crtfreq:varchar#,crtlastgenerate=#crtlastgenerate:date#,crtbatchcriteria=#crtbatchcriteria:numeric# where crtgrpid=#crtgrpid:varchar#
updateGrpEditReportNew.StmtType=PreparedStatement


updateLinkCustomerId.Query=Update DS_CUST_GRP_LINK set cglqlccustidgrpid=#cglqlccustidgrpid:varchar# where cglqlpcustidgrpid=#cglqlpcustidgrpid:varchar#
updateGrpEditMapping.Query=Update DS_CUSTID_MAP set cmpcountrycode=#cmpcountrycode:varchar#,cmpapplsys=#cmpapplsys:varchar#,cmpapplcustid=#cmpapplcustid:varchar# where cmpgrpid=#cmpgrpid:varchar#
updateGroupNewRef.Query=Update DS_CUST_GRP_REF set cgrgrpname1=#cgrgrpname1:varchar#,cgrgrpname2=#cgrgrpname2:varchar#,cgrgrptype=#cgrgrptype:varchar#,cgrshortname=#cgrshortname:varchar#,cgrgrpcontname=#cgrgrpcontname:varchar#,cgraddr1=#cgraddr1:varchar#,cgraddr2=#cgraddr2:varchar#,cgraddr3=#cgraddr3:varchar#,cgraddr4=#cgraddr4:varchar#,cgraddr5=#cgraddr5:varchar#,cgrcurrcode=#cgrcurrcode:varchar#,cgrcountrycode=#cgrcountrycode:varchar# ,cgradtrtnperiod=#cgradtrtnperiod:numeric#,cgrdefaultdbacc=#cgrdefaultdbacc:varchar#,cgrmarketsegment=#cgrmarketsegment:varchar#, cgremailid=#cgremailid:varchar# where cgrgrpid=#cgrgrpid:varchar#

#updateLinkCustomerId.Query=Update DS_CUST_GRP_LINK set cglqlccustidgrpid=#cglqlccustidgrpid:varchar# where cglqlpcustidgrpid=#cglqlpcustidgrpid:varchar#

deleteGroupNewRef.Query=Update DS_CUST_GRP_REF set deleteflag='Y' where cgrgrpid=#cgrgrpid:varchar#
deleteGroupNewRef.StmtType=Statement
deleteGroupReport.Query=Update DS_CUST_RPT_REF set deleteflag='Y' where crtgrpid=#crtgrpid:varchar#
deleteGroupReport.StmtType=Statement
deleteGroupLink.Query=Update DS_CUST_GRP_LINK set deleteflag='Y' where cglqlpcustidgrpid=#cglqlpcustidgrpid:varchar#
deleteGroupLink.StmtType=Statement
deleteGrpEditMapping.Query=Update DS_CUSTID_MAP set deleteflag='Y' where cmpcountrycode=#cmpcountrycode:varchar# AND  cmpapplsys=#cmpapplsys:varchar# AND cmpapplcustid=#cmpapplcustid:varchar# AND cmpgrpid=#cmpgrpid:varchar#
deleteGroupNewRef.StmtType=Statement

getGroupNewRef.Query= select a.cgrgrpid,a.cgrgrpname1,a.cgrgrpname2,a.cgrgrptype,a.cgrshortname,a.cgrgrpcontname,a.cgraddr1,a.cgraddr2,a.cgraddr3,a.cgraddr4,a.cgraddr5,a.cgrtelnum,a.cgremailid,a.cgrcurrcode,a.cgrcountrycode,a.cgradtrtnperiod,a.cgrdefaultdbacc,a.cgrmarketsegment,a.cgrstatus ,b.ctyctryname,c.curcurrmajor from DS_CUST_GRP_REF a , DS_CTRY_REF  b ,DS_CURR_REF c where a.cgrgrpid=#cgrgrpid:varchar# AND b.ctyctryname IN (select ctyctryname from DS_CTRY_REF  b where a.cgrcountrycode=b.ctyctrycode) AND  c.curcurrmajor IN (select curcurrmajor from DS_CURR_REF c where a.cgrcurrcode=c.curcurrcode) 
getGroupNewRef.TOColumnMap ={cgrgrpid=cgrgrpid,cgrgrpname1=cgrgrpname1,cgrgrpname2=cgrgrpname2,cgrgrptype=cgrgrptype,cgrshortname=cgrshortname,cgrgrpcontname=cgrgrpcontname,cgraddr1=cgraddr1,cgraddr2=cgraddr2,cgraddr3=cgraddr3,cgraddr4=cgraddr4,cgraddr5=cgraddr5,cgrtelnum=cgrtelnum,cgremailid=cgremailid,cgrcurrcode=cgrcurrcode,cgrcountrycode=cgrcountrycode,cgradtrtnperiod=cgradtrtnperiod,cgrdefaultdbacc=cgrdefaultdbacc,cgrmarketsegment=cgrmarketsegment,cgrstatus=cgrstatus,ctyctryname=ctyctryname,curcurrmajor=curcurrmajor}
getGroupNewRef.OutputType=com.tcs.ebw.sysadmin.transferobject.DsCustGrpRefNDBTO[]


getGroupNewRefEdit.Query= select a.cgrgrpid,a.cgrgrpname1,a.cgrgrpname2,a.cgrgrptype,a.cgrshortname,a.cgrgrpcontname,a.cgraddr1,a.cgraddr2,a.cgraddr3,a.cgraddr4,a.cgraddr5,a.cgrtelnum,a.cgremailid,a.cgrcurrcode,c.curcurrmajor,a.cgrcountrycode,b.ctyctryname,a.cgradtrtnperiod,a.cgrdefaultdbacc,a.cgrmarketsegment,a.cgrstatus  from DS_CUST_GRP_REF a , DS_CTRY_REF  b ,DS_CURR_REF c where a.cgrgrpid=#cgrgrpid:varchar# AND b.ctyctryname IN (select ctyctryname from DS_CTRY_REF  b where a.cgrcountrycode=b.ctyctrycode) AND c.curcurrmajor IN (select curcurrmajor from DS_CURR_REF c where a.cgrcurrcode=c.curcurrcode) 
getGroupNewRefEdit.TOColumnMap ={cgrgrpid=cgrgrpid,cgrgrpname1=cgrgrpname1,cgrgrpname2=cgrgrpname2,cgrgrptype=cgrgrptype,cgrshortname=cgrshortname,cgrgrpcontname=cgrgrpcontname,cgraddr1=cgraddr1,cgraddr2=cgraddr2,cgraddr3=cgraddr3,cgraddr4=cgraddr4,cgraddr5=cgraddr5,cgrtelnum=cgrtelnum,cgremailid=cgremailid,cgrcurrcode=cgrcurrcode,cgrcountrycode=cgrcountrycode,cgradtrtnperiod=cgradtrtnperiod,cgrdefaultdbacc=cgrdefaultdbacc,cgrmarketsegment=cgrmarketsegment,cgrstatus=cgrstatus,ctyctryname=ctyctryname,curcurrmajor=curcurrmajor}
getGroupNewRefEdit.OutputType=com.tcs.ebw.sysadmin.transferobject.DsCustGrpRefNDBTO[]
 

getGrpEditReport.Query= select b.cgrshortname,a.crtgrpid,a.crtapplarea,a.crtrptcode,a.crtfilefmt,a.crtlchnltype,a.crtreppreptime , a.crtfreq , a.crtbatchcriteria, a.crtlastgenerate from DS_CUST_RPT_REF a, DS_CUST_GRP_REF b where a.crtgrpid=#crtgrpid:varchar# AND a.crtgrpid=b.cgrgrpid
getGrpEditReport.TOColumnMap ={cgrshortname=cgrshortname,crtgrpid=crtgrpid,crtapplarea=crtapplarea,crtrptcode=crtrptcode,crtfilefmt=crtfilefmt,crtlchnltype=crtlchnltype,crtreppreptime=crtreppreptime,crtfreq=crtfreq,crtbatchcriteria=crtbatchcriteria,crtlastgenerate=crtlastgenerate}
getGrpEditReport.OutputType=com.tcs.ebw.sysadmin.transferobject.DsCustRptRefNDBTO[]


getGrpEditLink.Query= select a.cglqlpcustidgrpid,a.cglqlccustidgrpid,b.cgrshortname from DS_CUST_GRP_LINK a , DS_CUST_GRP_REF b where cglqlpcustidgrpid=#cglqlpcustidgrpid:varchar# AND a.cglqlpcustidgrpid=b.cgrgrpid
getGrpEditLink.TOColumnMap ={cglqlpcustidgrpid=cglqlpcustidgrpid,cglqlccustidgrpid=cglqlccustidgrpid,cgrshortname=cgrshortname}
getGrpEditLink.OutputType=com.tcs.ebw.sysadmin.transferobject.DsCustGrpLinkNDBTO[]


getGrpEditNewLink.Query= select a.cglqlpcustidgrpid,a.cglqlccustidgrpid,b.cgrshortname from DS_CUST_GRP_LINK a , DS_CUST_GRP_REF b where cglqlpcustidgrpid=#cglqlpcustidgrpid:varchar# AND a.cglqlpcustidgrpid=b.cgrgrpid
getGrpEditNewLink.TOColumnMap ={cglqlpcustidgrpid=cglqlpcustidgrpid,cglqlccustidgrpid=cglqlccustidgrpid,cgrshortname=cgrshortname}
getGrpEditNewLink.OutputType=com.tcs.ebw.sysadmin.transferobject.DsCustGrpLinkNDBTO[]

#getGrpEditNewLink.Query= select a.cglqlpcustidgrpid,b.cgrshortname from DS_CUST_GRP_LINK a , DS_CUST_GRP_REF b where cglqlpcustidgrpid=#cglqlpcustidgrpid:varchar# AND a.cglqlpcustidgrpid=b.cgrgrpid
#getGrpEditNewLink.TOColumnMap ={cglqlpcustidgrpid=cglqlpcustidgrpid,cgrshortname=cgrshortname}
#getGrpEditNewLink.OutputType=com.tcs.ebw.sysadmin.transferobject.DsCustGrpLinkNDBTO[]


getGrpEditViewLink.Query= select a.cglqlccustidgrpid,b.cmtlongname1 ,b.cmtshortname from DS_CUST_GRP_LINK a , DS_CUST_MASTER b ,DS_CUST_GRP_REF c where a.deleteflag='N' AND c.cgrgrpid=#cgrgrpid:varchar# and a.cglqlpcustidgrpid=c.cgrgrpid AND a.cglqlccustidgrpid=b.cmtqlcustid
getGrpEditViewLink.TOColumnMap ={cglqlccustidgrpid=cglqlccustidgrpid,cmtlongname1=cmtlongname1,cmtshortname=cmtshortname}
getGrpEditViewLink.OutputType=java.util.ArrayList


getGrpEditMapping.Query= select b.cgrshortname,a.cmpgrpid  from DS_CUSTID_MAP a,DS_CUST_GRP_REF b where a.cmpgrpid=#cmpgrpid:varchar# AND a.cmpgrpid=b.cgrgrpid
getGrpEditMapping.TOColumnMap ={cgrshortname=cgrshortname,cmpgrpid=cmpgrpid}
getGrpEditMapping.OutputType=com.tcs.ebw.sysadmin.transferobject.DsCustidMapNDBTO[]

getGroupDetails.Query= select cgrgrpid,cgrgrpname1,cgrqlcustid,cgrgrptype,cgrshortname,cgrgrpcontname,cgraddr1,cgrtelnum,cgremailid,cgrcurrcode,cgrcountrycode,cgradtrtnperiod,cgrdefaultdbacc,cgrmarketsegment,cgrstatus from DS_CUST_GRP_REF
getGroupDetails.TOColumnMap ={cgrgrpid=cGRGRPID,cgrgrpname1=cGRGRPNAME1,cgrqlcustid=cGRQLCUSTID,cgrgrptype=cGRGRPTYPE,cgrshortname=cGRSHORTNAME,cgrgrpcontname=cGRGRPCONTNAME,cgraddr1=cGRADDR1,cgrtelnum=cGRTELNUM,cgremailid=cGREMAILID,cgrcurrcode=cGRCURRCODE,cgrcountrycode=cGRCOUNTRYCODE,cgradtrtnperiod=cGRADTRTNPERIOD,cgrdefaultdbacc=cGRDEFAULTDBACC,cgrmarketsegment=cGRMARKETSEGMENT,cgrstatus=cGRSTATUS}
getGroupDetails.OutputType=com.tcs.ebw.sysadmin.transferobject.DsCustGrpRefTO[]

getGrpDetailsReport.Query= select DS_CUST_RPT_REF.crtgrpid,DS_CUST_RPT_REF.crtapplarea,DS_CUST_RPT_REF.crtrefno,DS_CUST_RPT_REF.crtrptcode,DS_CUST_RPT_REF.crtfilefmt,DS_CUST_RPT_REF.crtlchnltype,DS_CUST_RPT_REF.crtreppreptime,DS_CUST_RPT_REF.crtfreq,DS_CUST_RPT_REF.crtlastgenerate,DS_CUST_RPT_REF.crtbatchcriteria ,DS_CUST_GRP_REF.cgrshortname from DS_CUST_RPT_REF JOIN DS_CUST_GRP_REF ON DS_CUST_RPT_REF.crtgrpid=DS_CUST_GRP_REF.cgrgrpid
getGrpDetailsReport.TOColumnMap ={crtrptcode=cRTRPTCODE,crtgrpid=cRTGRPID,crtfreq=cRTFREQ,crtbatchcriteria=cRTBATCHCRITERIA,crtlastgenerate=cRTLASTGENERATE,crtlchnltype=cRTLCHNLTYPE,crtfilefmt=cRTFILEFMT,crtapplarea=cRTAPPLAREA,crtreppreptime=cRTREPPREPTIME,crtrefno=cRTREFNO}
getGrpDetailsReport.OutputType=com.tcs.ebw.sysadmin.transferobject.DsCustRptRefTO[]

getGrpDetailsLink.Query= select DS_CUST_GRP_LINK.cglqlpcustidgrpid,DS_CUST_GRP_LINK.cglqlccustidgrpid ,DS_CUST_GRP_REF.cgrshortname from DS_CUST_GRP_LINK JOIN DS_CUST_GRP_REF ON DS_CUST_GRP_LINK.cglqlpcustidgrpid=DS_CUST_GRP_REF.cgrgrpid
getGrpDetailsLink.TOColumnMap ={cglqlpcustidgrpid=cGLQLPCUSTIDGRPID,cglqlccustidgrpid=cGLQLCCUSTIDGRPID}
getGrpDetailsLink.OutputType=com.tcs.ebw.sysadmin.transferobject.DsCustGrpLinkTO[]

getGrpDetaiMapping.Query= select c.ctyctryname,b.cgrshortname,a.cmpgrpid ,a.cmpcountrycode ,a.cmpapplsys,a.cmpapplcustid from DS_CUSTID_MAP a,DS_CUST_GRP_REF b ,DS_CTRY_REF c where a.cmpgrpid=#cmpgrpid:varchar# AND a.cmpgrpid=b.cgrgrpid and a.cmpcountrycode=c.ctyctrycode
getGrpDetaiMapping.TOColumnMap ={ctyctryname=ctyctryname,cgrshortname=cgrshortname,cmpgrpid=cmpgrpid,cmpcountrycode=cmpcountrycode,cmpapplsys=cmpapplsys,cmpapplcustid=cmpapplcustid}
getGrpDetaiMapping.OutputType=com.tcs.ebw.sysadmin.transferobject.DsCustidMapNDBTO[]


getGroupNewCountryCode.Query= select cgrcountrycode from DS_CUST_GRP_REF 
getGroupNewCountryCode.TOColumnMap ={cgrcountrycode=cgrcountrycode}
getGroupNewCountryCode.OutputType=com.tcs.ebw.sysadmin.transferobject.DsCustGrpRefTO[]

getCtryCombo.Query=select distinct ctyctrycode ,ctyctryname from DS_CTRY_REF   
getCtryCombo.TOColumnMap={ctyctrycode=ctyctrycode,ctyctryname=ctyctryname}
getCtryCombo.OutputType=java.util.Vector

getComboData.Query=select ctyctryname from DS_CTRY_REF  where ctyctrycode=#ctyctrycode:varchar#
getComboData.TOColumnMap ={ctyctryname=ctyctryname}
getComboData.OutputType=com.tcs.ebw.sysadmin.transferobject.DsCustGrpRefNDBTO[]

#getTableData.Query=select cgrgrpid,cgrgrpname1,cgrgrpname2,cgrgrptype,cgrqlcustid from DS_CUST_GRP_REF where cgrgrpid=#cgrgrpid:varchar#  and deleteflag='N'
#getTableData.TOColumnMap={cgrgrpid=cgrgrpid,cgrgrpname1=cgrgrpname1,cgrgrpname2=cgrgrpname2,cgrgrptype=cgrgrptype,cgrqlcustid=cgrqlcustid}
#getTableData.OutputType=java.util.ArrayList

getTableData.Query=select cgrgrpid,cgrgrpname1,cgrgrpname2,cgrgrptype,cgrqlcustid from DS_CUST_GRP_REF where deleteflag='N' AND (cgrgrpid like #cgrgrpid:varchar# or cgrgrpid is null ) AND (cgrstatus like #cgrstatus:varchar# or cgrstatus is null )  AND (cgrcountrycode like #cgrcountrycode:varchar# or cgrcountrycode  is null  )  AND (cgrgrpname1 like #cgrgrpname1:varchar# or cgrgrpname1 is null)
getTableData.TOColumnMap={cgrgrpid=cgrgrpid,cgrgrpname1=cgrgrpname1,cgrgrpname2=cgrgrpname2,cgrgrptype=cgrgrptype,cgrqlcustid=cgrqlcustid}
getTableData.OutputType=java.util.ArrayList


getCurrComboData.Query=select curcurrmajor from DS_CURR_REF  where curcurrcode=#curcurrcode:varchar#
getCurrComboData.TOColumnMap ={curcurrmajor=curcurrmajor}
getCurrComboData.OutputType=com.tcs.ebw.sysadmin.transferobject.DsCustGrpRefNDBTO[]


getGroupLinkTable.Query= select a.cglqlpcustidgrpid,a.cglqlccustidgrpid,b.cgrshortname from DS_CUST_GRP_LINK a , DS_CUST_GRP_REF b where a.deleteflag='N' AND b.cgrgrpid=#cgrgrpid:varchar# AND a.cglqlpcustidgrpid=b.cgrgrpid
getGroupLinkTable.TOColumnMap ={cglqlpcustidgrpid=cglqlpcustidgrpid,cglqlccustidgrpid=cglqlccustidgrpid,cgrshortname=cgrshortname}
getGroupLinkTable.OutputType=java.util.ArrayList
 

getGroupMapTable.Query= select a.cmpcountrycode ,a.cmpapplsys,a.cmpapplcustid , c.ctyctryname From DS_CUSTID_MAP a,DS_CUST_GRP_REF b , DS_CTRY_REF c where b.cgrgrpid=#cgrgrpid:varchar# AND a.cmpgrpid=b.cgrgrpid AND a.cmpcountrycode=c.ctyctrycode 
getGroupMapTable.TOColumnMap ={cmpcountrycode=cmpcountrycode,cmpapplsys=cmpapplsys,cmpapplcustid=cmpapplcustid,ctyctryname=ctyctryname}
getGroupMapTable.OutputType=java.util.ArrayList


#getMapCountryCombo.Query=select ctyctryname from DS_CTRY_REF  where ctyctrycode=#ctyctrycode:varchar#
#getMapCountryCombo.TOColumnMap ={ctyctryname=ctyctryname}
#getMapCountryCombo.OutputType=com.tcs.ebw.sysadmin.transferobject.DsCustidMapNDBTO[]

getMapCountryCombo.Query=select (ctyctrycode ||'~'||ctyctryname ) as ctyctryname, ctyctrycode from DS_CTRY_REF  where ctyctrycode=#ctyctrycode:varchar#
getMapCountryCombo.TOColumnMap ={ctyctryname=ctyctryname,ctyctrycode=ctyctrycode}
getMapCountryCombo.OutputType=java.util.Vector

getGroupid.Query=select distinct cgrgrpid,cgrgrpid from DS_CUST_GRP_REF  where deleteflag='N' order by cgrgrpid
getGroupid.TOColumnMap={cgrgrpid=cgrgrpid,cgrgrpid=cgrgrpid}
getGroupid.OutputType=java.util.Vector

getGroupstatus.Query=select distinct cgrstatus ,cgrstatus from DS_CUST_GRP_REF  where length(trim(cgrstatus))>0 or  cgrstatus<> null
getGroupstatus.TOColumnMap={cgrstatus=cgrstatus,cgrstatus=cgrstatus}
getGroupstatus.OutputType=java.util.Vector

#getCountry.Query=select distinct a.cgrcountrycode,cgrcountrycode from DS_CUST_GRP_REF 
#getCountry.TOColumnMap={cgrcountrycode=cgrcountrycode,cgrcountrycode=cgrcountrycode}
#getCountry.OutputType=java.util.Vector

getCountry.Query=select distinct a.cgrcountrycode,b.ctyctryname from DS_CUST_GRP_REF a, DS_CTRY_REF b where a.cgrcountrycode=b.ctyctrycode
getCountry.TOColumnMap={cgrcountrycode=cgrcountrycode,ctyctryname=ctyctryname}
getCountry.OutputType=java.util.Vector

getReportViewTable.Query=select a.crtgrpid,b.cgrshortname,a.crtapplarea,a.crtrefno,a.crtrptcode,a.crtfilefmt,a.crtlchnltype,a.crtreppreptime,a.crtfreq,a.crtlastgenerate,a.crtbatchcriteria from DS_CUST_RPT_REF a, DS_CUST_GRP_REF b where a.deleteflag='N' AND b.cgrgrpid=#cgrgrpid:varchar# AND  b.cgrgrpid=a.crtgrpid
getReportViewTable.TOColumnMap={crtgrpid=crtgrpid,cgrshortname=cgrshortname,crtapplarea=crtapplarea,crtrefno=crtrefno,crtrptcode=crtrptcode,crtfilefmt=crtfilefmt,crtlchnltype=crtlchnltype,crtreppreptime=crtreppreptime,crtfreq=crtfreq,crtlastgenerate=crtlastgenerate,crtbatchcriteria=crtbatchcriteria}
getReportViewTable.OutputType=java.util.ArrayList


getReportEditTable.Query=select a.crtgrpid,b.cgrshortname,a.crtapplarea,a.crtrefno,a.crtrptcode,a.crtfilefmt,a.crtlchnltype,a.crtreppreptime,a.crtfreq,a.crtlastgenerate,a.crtbatchcriteria from DS_CUST_RPT_REF a, DS_CUST_GRP_REF b where a.deleteflag='N' AND b.cgrgrpid=#cgrgrpid:varchar# AND  b.cgrgrpid=a.crtgrpid
getReportEditTable.TOColumnMap={crtgrpid=crtgrpid,cgrshortname=cgrshortname,crtapplarea=crtapplarea,crtrefno=crtrefno,crtrptcode=crtrptcode,crtfilefmt=crtfilefmt,crtlchnltype=crtlchnltype,crtreppreptime=crtreppreptime,crtfreq=crtfreq,crtlastgenerate=crtlastgenerate,crtbatchcriteria=crtbatchcriteria}
getReportEditTable.OutputType=java.util.ArrayList

getGroupType.Query=select distinct cgrgrptype,cgrgrptype from DS_CUST_GRP_REF  where length(trim(cgrgrptype))>0 or  cgrgrptype<> null
getGroupType.TOColumnMap={cgrgrptype=cgrgrptype,cgrgrptype=cgrgrptype}
getGroupType.OutputType=java.util.Vector


getDebitacc.Query=select distinct cgrdefaultdbacc,cgrdefaultdbacc from DS_CUST_GRP_REF  
getDebitacc.TOColumnMap={cgrdefaultdbacc=cgrdefaultdbacc,cgrdefaultdbacc=cgrdefaultdbacc}
getDebitacc.OutputType=java.util.Vector

getMarketsegment.Query=select distinct cgrmarketsegment,cgrmarketsegment from DS_CUST_GRP_REF  
getMarketsegment.TOColumnMap={cgrmarketsegment=cgrmarketsegment,cgrmarketsegment=cgrmarketsegment}
getMarketsegment.OutputType=java.util.Vector

getCountryRef.Query=select distinct ctyctrycode ,ctyctryname  from DS_CTRY_REF where length(trim(ctyctrycode))>0 or  ctyctrycode<> null
getCountryRef.TOColumnMap={ctyctryname=ctyctryname,ctyctrycode=ctyctrycode}
getCountryRef.OutputType=java.util.Vector

#getCountryRef.Query=select distinct (ctyctrycode ||'~'||ctyctryname ) as ctyctryname, ctyctrycode   from DS_CTRY_REF where length(trim(ctyctrycode))>0 or  ctyctrycode<> null
#getCountryRef.TOColumnMap={ctyctryname=ctyctryname,ctyctrycode=ctyctrycode}
#getCountryRef.OutputType=java.util.Vector


getCurrencycodeRef.Query=select distinct curcurrcode , curcurrmajor  from DS_CURR_REF where length(trim(curcurrcode))>0 or  curcurrcode<> null
getCurrencycodeRef.TOColumnMap={curcurrmajor=curcurrmajor,curcurrcode=curcurrcode}
getCurrencycodeRef.OutputType=java.util.Vector




getMapCountry.Query=select distinct b.ctyctryname ,a.cmpcountrycode from DS_CUSTID_MAP a, DS_CTRY_REF b where a.cmpcountrycode=b.ctyctrycode 
getMapCountry.TOColumnMap={cmpcountrycode=cmpcountrycode,ctyctryname=ctyctryname}
getMapCountry.OutputType=java.util.Vector


getApplicationSystem.Query=select distinct cmpapplsys ,cmpapplsys from DS_CUSTID_MAP 
getApplicationSystem..TOColumnMap={cmpapplsys=cmpapplsys,cmpapplsys=cmpapplsys}
getApplicationSystem.OutputType=java.util.Vector


getGroupMapSearchTable.Query=select a.cmpcountrycode,b.ctyctryname ,a.cmpapplsys,a.cmpapplcustid from DS_CUSTID_MAP a,DS_CTRY_REF b ,DS_CUST_GRP_REF c where a.cmpcountrycode= b.ctyctrycode and a.cmpgrpid=#cmpgrpid:varachar#   and a.cmpcountrycode=#cmpcountrycode:varachar# and a.cmpapplsys=#cmpapplsys:varchar# 
getGroupMapSearchTable.TOColumnMap={cmpcountrycode=cmpcountrycode,ctyctryname=ctyctryname,cmpapplsys=cmpapplsys,cmpapplcustid=cmpapplcustid}
getGroupMapSearchTable.OutputType=java.util.ArrayList

getGrpNewCustid.Query=select cglqlccustidgrpid from DS_CUST_GRP_LINK where cglqlpcustidgrpid=#cglqlpcustidgrpid:varchar# 
getGrpNewCustid.TOColumnMap={cglqlccustidgrpid=cglqlccustidgrpid}
getGrpNewCustid.OutputType=java.util.ArrayList


getGroupReportNew.Query=select b.cgrshortname,a.crtgrpid from DS_CUST_RPT_REF a, DS_CUST_GRP_REF b where a.crtgrpid=#crtgrpid:varchar# AND a.crtgrpid=b.cgrgrpid
getGroupReportNew.TOColumnMap={crtgrpid=crtgrpid,cgrshortname=cgrshortname}
getGroupReportNew.OutputType=com.tcs.ebw.sysadmin.transferobject.DsCustRptRefNDBTO[]


getFrequency.Query=select distinct dmndomainval ,dmndomainval from DS_DOMAINS where dmndomain='D_ReportFreq'
getFrequency.TOColumnMap={dmndomainval=dmndomainval,dmndomainval=dmndomainval}
getFrequency.OutputType=java.util.Vector

getChannelType.Query=select distinct dmndomainval ,dmndomainval from DS_DOMAINS where dmndomain='D_ChannelId'
getChannelType.TOColumnMap={dmndomainval=dmndomainval,dmndomainval=dmndomainval}
getChannelType.OutputType=java.util.Vector

getBatchCriteria.Query=select distinct dmndomainval ,dmndomainval from DS_DOMAINS where dmndomain='D_BatchCriteria'
getBatchCriteria.TOColumnMap={dmndomainval=dmndomainval,dmndomainval=dmndomainval}
getBatchCriteria.OutputType=java.util.Vector

getApplicationArea.Query=select distinct upgprogapplarea ,upgprogapplarea from DS_PROGRAMS
getApplicationArea.TOColumnMap={upgprogapplarea=upgprogapplarea,upgprogapplarea=upgprogapplarea}
getApplicationArea.OutputType=java.util.Vector



getFileFormat.Query=select distinct dmndomainval ,dmndomainval from DS_DOMAINS where dmndomain='D_Fileformat'
getFileFormat.TOColumnMap={dmndomainval=dmndomainval,dmndomainval=dmndomainval}
getFileFormat.OutputType=java.util.Vector



getReportCode.Query=select distinct (upgprogramid ||'~'|| upgprogramname) as upgprogramname,upgprogramid  as upgprogramname from DS_PROGRAMS where upgprogapplarea=#upgprogapplarea:varchar#
#getReportCode.Query=select distinct upgprogramname,upgprogramid  from DS_PROGRAMS where upgprogapplarea='WDC Reports'
getReportCode.TOColumnMap={upgprogramid=upgprogramid,upgprogramname=upgprogramname}
getReportCode.OutputType=java.util.Vector


getAuditColumns.Query=select createdby,createddate,modifiedby,modifieddate from DS_CUST_GRP_REF where cgrgrpid=#cgrgrpid:varchar# AND deleteflag='N'
getAuditColumns.TOColumnMap={createdby=createdby,createddate=createddate,modifiedby=modifiedby,modifieddate=modifieddate}
getAuditColumns.OutputType=com.tcs.ebw.sysadmin.transferobject.DsCustGrpRefTO[]

getCustidAuditColumns.Query=select createdby,createddate,modifiedby,modifieddate from DS_CUSTID_MAP where cmpgrpid=#cmpgrpid:varchar# AND cmpapplsys=#cmpapplsys:varchar# AND cmpapplcustid=#cmpapplcustid:varchar# AND deleteflag='N'
getCustidAuditColumns.TOColumnMap={createdby=createdby,createddate=createddate,modifiedby=modifiedby,modifieddate=modifieddate}
getCustidAuditColumns.OutputType=com.tcs.ebw.sysadmin.transferobject.DsCustidMapTO[]


getReportAuditColumns.Query=select createdby,createddate,modifiedby,modifieddate from DS_CUST_RPT_REF where crtgrpid=#crtgrpid:varchar# AND crtrptcode=#crtrptcode:varchar# AND deleteflag='N'
getReportAuditColumns.TOColumnMap={createdby=createdby,createddate=createddate,modifiedby=modifiedby,modifieddate=modifieddate}
getReportAuditColumns.OutputType=com.tcs.ebw.sysadmin.transferobject.DsCustRptRefTO[]


getLinkAuditColumns.Query=select createdby,createddate,modifiedby,modifieddate from Ds_Cust_Grp_Link where cglqlpcustidgrpid=#cglqlpcustidgrpid:varchar# AND cglqlccustidgrpid=#cglqlccustidgrpid:varchar# AND deleteflag='N'
getLinkAuditColumns.TOColumnMap={createdby=createdby,createddate=createddate,modifiedby=modifiedby,modifieddate=modifieddate}
getLinkAuditColumns.OutputType=com.tcs.ebw.sysadmin.transferobject.DsCustGrpLinkTO[]

# Supraja' Queries

getInboxInfo.Query=select INBSENDGRPID,INBSENDUSRID,INBSUBJECT,to_char(INBCREATEDDATE,'DD/MM/YYYY HH24:MI:SS') as INBCREATEDDATE,INBMAILREFNO From wbfe_inbox_messages where inbrecpgrpid=#inbrecpgrpid:varchar# and inbrecpusrid=#inbrecpusrid:varchar# and deleteflag='N'
getInboxInfo.TOColumnMap={INBSENDGRPID=inbsendgrpid,INBSENDUSRID=inbsendusrid,INBSUBJECT=inbsubject,INBCREATEDDATE=inbcreateddate,INBMAILREFNO=inbmailrefno}
getInboxInfo.OutputType=java.util.ArrayList
getInboxInfo.StmtType=Statement

getViewInboxInfo.Query=select INBSENDGRPID,INBSENDUSRID,INBSUBJECT,INBCREATEDDATE,INBNEWMESSAGE from wbfe_inbox_messages where INBMAILREFNO=#inbmailrefno:varchar#
getViewInboxInfo.TOColumnMap={INBSENDGRPID=inbsendgrpid,INBSENDUSRID=inbsendusrid,INBSUBJECT=inbsubject,INBCREATEDDATE=inbcreateddate,INBNEWMESSAGE=inbnewmessage}
getViewInboxInfo.OutputType=com.tcs.ebw.sysadmin.transferobject.WbfeInboxMessagesTO[]
getViewInboxInfo.StmtType=Statement
#(select INBMAILREFNO from wbfe_inbox_messages where INBSENDGRPID=#inbsendgrpid:varchar# and INBSENDUSRID=#inbsendusrid:varchar# and INBSUBJECT=#inbsubject:varchar# and INBCREATEDDATE=to_date(#inbcreateddate:date#,'YYYY-MM-DD HH24:MI:SS'))

getOutboxInfo.Query=select OUTRECPGRPID,OUTRECPUSRID,OUTSUBJECT,to_char(OUTCREATEDDATE,'DD/MM/YYYY HH24:MI:SS') as OUTCREATEDDATE,OUTMAILREFNO From wbfe_outbox_messages where outsendgrpid=#outsendgrpid:varchar# and outsendusrid=#outsendusrid:varchar# and deleteflag='N'
getOutboxInfo.TOColumnMap={OUTRECPGRPID=outrecpgrpid,OUTRECPUSRID=outrecpusrid,OUTSUBJECT=outsubject,OUTCREATEDDATE=outcreateddate,OUTMAILREFNO=outmailrefno}
getOutboxInfo.OutputType=java.util.ArrayList
getOutboxInfo.StmtType=Statement

#where OUTSENDUSRID=(select usruserid from ds_user where usruserid=#outsendusrid:varchar#)


getViewOutboxInfo.Query=select OUTRECPGRPID,OUTRECPUSRID,OUTSUBJECT,OUTCREATEDDATE,OUTNEWMESSAGE from wbfe_outbox_messages where OUTMAILREFNO=#outmailrefno:varchar#
getViewOutboxInfo.TOColumnMap={OUTRECPGRPID=outrecpgrpid,OUTRECPUSRID=outrecpusrid,OUTSUBJECT=outsubject,OUTCREATEDDATE=outcreateddate,OUTNEWMESSAGE=outnewmessage}
getViewOutboxInfo.OutputType=com.tcs.ebw.sysadmin.transferobject.WbfeOutboxMessagesTO[]
getViewOutboxInfo.StmtType=Statement

#(select OUTMAILREFNO from wbfe_outbox_messages where OUTRECPGRPID=#outrecpgrpid:varchar# and OUTRECPUSRID=#outrecpusrid:varchar# and OUTSUBJECT=#outsubject:varchar# and OUTCREATEDDATE=to_date(#outcreateddate:date#,'DD/MM/YYYY HH24:MI:SS'))

insertOutboxInfo.Query=Insert into wbfe_outbox_messages(outsendgrpid,outsendusrid,outrecpgrpid,outrecpusrid,outallrecpusrid,outsubject,outmailrefno,outattachflag,outnewmessage) values(#outsendgrpid:varchar#,#outsendusrid:varchar#,#outrecpgrpid:varchar#,#outrecpusrid:varchar#,#outallrecpusrid:varchar#,#outsubject:varchar#,#outmailrefno:varchar#,#outattachflag:varchar#,#outnewmessage:varchar#)
insertOutboxInfo.StmtType=Statement

insertInboxInfo.Query=Insert into wbfe_inbox_messages(inbsendgrpid,inbsendusrid,inbrecpgrpid,inbrecpusrid,inbsubject,inbmailrefno,inbattachflag,inbnewmessage) values(#inbsendgrpid:varchar#,#inbsendusrid:varchar#,#inbrecpgrpid:varchar#,#inbrecpusrid:varchar#,#inbsubject:varchar#,#inbmailrefno:varchar#,#inbattachflag:varchar#,#inbnewmessage:varchar#)
insertInboxInfo.StmtType=Statement

insertAttachInfo.Query=Insert into wbfe_msg_attachment(msgmailrefno,msgattachmentname) values(#msgmailrefno:varchar#,#msgattachmentname:varchar#)
insertAttachInfo.StmtType=Statement

updateDeleteInbox.Query=update wbfe_inbox_messages set DELETEFLAG='Y' where INBMAILREFNO=#inbmailrefno:varchar#

#(select INBMAILREFNO from wbfe_inbox_messages where INBSENDGRPID=#inbsendgrpid:varchar# and INBSENDUSRID=#inbsendusrid:varchar# and INBSUBJECT=#inbsubject:varchar#)

updateDeleteOutbox.Query=update wbfe_outbox_messages set DELETEFLAG='Y' where OUTMAILREFNO=#outmailrefno:varchar#
#(select OUTMAILREFNO from wbfe_outbox_messages where OUTRECPGRPID=#outrecpgrpid:varchar# and OUTRECPUSRID=#outrecpusrid:varchar# and OUTSUBJECT=#outsubject:varchar#)


getGroupInfo.Query=select cgrgrpid,cgrgrpid from ds_cust_grp_ref
getGroupInfo.TOColumnMap={cgrgrpid=cgrgrpid,cgrgrpid=cgrgrpid}
getGroupInfo.OutputType=java.util.Vector
getGroupInfo.StmtType=Statement

getUserInfo.Query=select (usruserid || '~' || usrgrpid),usruserid as usrgrpid from ds_user 
getUserInfo.TOColumnMap={usruserid=usruserid,usruserid=usruserid,usrgrpid=usrgrpid}
getUserInfo.OutputType=java.util.Vector
getUserInfo.StmtType=Statement


#where usrgrpid=#usrgrpid:varchar#


getOutAttachInfo.Query=select msgattachmentname from wbfe_msg_attachment where msgmailrefno=#outmailrefno:varchar#
getOutAttachInfo.TOColumnMap={MSGATTACHMENTNAME=msgattachmentname}
getOutAttachInfo.OutputType=java.util.ArrayList
getOutAttachInfo.StmtType=Statement

#(select OUTMAILREFNO from wbfe_outbox_messages where OUTRECPGRPID=#outrecpgrpid:varchar# and OUTRECPUSRID=#outrecpusrid:varchar# and OUTSUBJECT=#outsubject:varchar#)

getInAttachInfo.Query=select msgattachmentname from wbfe_msg_attachment where msgmailrefno=#inbmailrefno:varchar#
getInAttachInfo.TOColumnMap={MSGATTACHMENTNAME=msgattachmentname}
getInAttachInfo.OutputType=java.util.ArrayList
getInAttachInfo.StmtType=Statement

#(select INBMAILREFNO from wbfe_inbox_messages where INBSENDGRPID=#inbsendgrpid:varchar# and INBSENDUSRID=#inbsendusrid:varchar# and INBSUBJECT=#inbsubject:varchar#)



insertFileInfo.Query=insert into ds_bulkimp_filestatus(bfsfilereferenceno,bfsgroupid,bfsfiletype,createdby,modifiedby,versionnum,bfsorgfilename,bfsfilehash) values(#bfsfilereferenceno:varchar#,#bfsgroupid:varchar#,#bfsfiletype:varchar#,#createdby:varchar#,#modifiedby:varchar#,#versionnum:numeric#,#bfsorgfilename:varchar#,#bfsfilehash:varchar#)
insertFileInfo.StmtType=PreparedStatement





#insertFileInfo.Query=insert into ds_bulkimp_filestatus(bfsfilereferenceno,bfsgroupid) values(#bfsfilereferenceno:varchar#)
#insertFileInfo.StmtType=PreparedStatement


# Priyanka's Statements

&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

getCustomerData.Query=select a.cmtqlcustid,a.cmtcountrycode,b.camaccnum,a.cmtshortname,c.cmpapplsys,c.cmpapplcustid,c.cmpcountrycode,a.cmtstatus From DS_CUST_MASTER a,DS_ACC_MASTER b, DS_CUSTID_MAP c where a.cmtqlcustid like #cmtqlcustid:numeric# AND a.cmtcountrycode like #cmtcountrycode:varchar# AND a.cmtlongname1 like #cmtlongname1:varchar# AND b.camaccnum like #camaccnum:varchar# AND c.cmpapplsys like #cmpapplsys:varchar# AND c.cmpapplcustid like #cmpapplcustid:varchar# AND a.cmtstatus like #cmtstatus:varchar# AND a.cmtqlcustid=b.camqlcustid AND a.cmtqlcustid=c.cmpqlcustid AND a.deleteflag='N'
getCustomerData.TOColumnMap={cmtqlcustid=cmtqlcustid,cmtcountrycode=cmtcountrycode,camaccnum=camaaccnum,cmtshortname=cmtshortname,cmpapplsys=cmpapplsys,cmpapplcustid=cmpapplcustid,cmpcountrycode=cmpcountrycode,cmtstatus=cmtstatus}
getCustomerData.OutputType=java.util.ArrayList

getCtryData.Query=select distinct ctyctrycode,ctyctryname from DS_CTRY_REF   
getCtryData.TOColumnMap={ctyctrycode=ctyctrycode,ctyctryname=ctyctryname}
getCtryData.OutputType=java.util.Vector

getStatusCombo.Query=select distinct cmtstatus,cmtstatus from DS_CUST_MASTER where not cmtstatus='null'
getStatusCombo.TOColumnMap={cmtstatus=cMTSTATUS}
getStatusCombo.OutputType=java.util.Vector

getHqCountryCombo.Query=select distinct a.cmthqcountrycode,b.ctyctryname From DS_CUST_MASTER a,DS_CTRY_REF b where a.cmthqcountrycode=b.ctyctrycode 
getHqCountryCombo.TOColumnMap={cmthqcountrycode=cmthqcountrycode,ctyctryname=ctyctryname}
getHqCountryCombo.OutputType=java.util.Vector

getCountryData.Query=select distinct (ctyctrycode || '~' || ctyctryname) as ctyctryname,ctyctrycode from DS_CTRY_REF a,DS_CUST_MASTER b where a.ctyctrycode=#ctyctrycode:varchar# AND a.ctyctrycode=b.cmthqcountrycode  
getCountryData.TOColumnMap={ctyctrycode=ctyctrycode,ctyctryname=ctyctryname}
getCountryData.OutputType=java.util.Vector


getStateCombo.Query=select distinct (csrstatecode || '~' ||csrstatename) as csrstatename,csrstatecode from DS_STATE_REF where csrctrycode=#csrctrycode:varchar# 
getStateCombo.ColumnMap={csrstatecode=csrstatecode,csrstatename=csrstatename}
getStateCombo.OutputType=java.util.Vector

getCtryCityCombo.Query=select distinct (ccrcitycode||'~'||ccrcityname) as ccrcityname,ccrcitycode from DS_CITY_REF where ccrctrycode=#ccrctrycode:varchar# 
getCtryCityCombo.ColumnMap={ccrcitycode=ccrcitycode,ccrcityname=ccrcityname}
getCtryCityCombo.OutputType=java.util.Vector

getCityCombo.Query=select distinct (ccrcitycode || '~' ||ccrcityname ) as ccrcityname,ccrcitycode from DS_CITY_REF where ccrstatecode=#ccrstatecode:varchar# 
getCityCombo.ColumnMap={ccrcitycode=ccrcitycode,ccrcityname=ccrcityname}
getCityCombo.OutputType=java.util.Vector

getBaseCurrencyCombo.Query=select distinct (a.curcurrcode ||'~'|| a.curcurrmajor) as curcurrmajor,a.curcurrcode from DS_CURR_REF a, DS_CTRY_REF b where b.ctyctrycode=#ctyctrycode:varchar# AND b.ctycurrcode=a.curcurrcode
getBaseCurrencyCombo.TOColumnMap={curcurrmajor=curcurrmajor,curcurrcode=curcurrcode}
getBaseCurrencyCombo.OutputType=java.util.Vector


getBranchCombo.Query=select distinct (cbrbrcode || '~' ||cbrbrname) as cbrbcrname,cbrbrcode  from DS_BR_REF where cbrbankcode=#cbrbankcode:varchar#
getBranchCombo.TOColumnMap={cbrbrcode=cbrbrcode,cbrbrname=cbrbrname}
getBranchCombo.OutputType=java.util.Vector

getBankCombo.Query=select distinct bnkcode,bnkdes from DS_BANK_REF
getBankCombo.TOColumnMap={bnkcode=bnkcode,bnkdes=bnkdes}
getBankCombo.OutputType=java.util.Vector

getAccTypeCombo.Query=select distinct dmndomainval,dmndomainvaldesc from DS_DOMAINS where dmndomain='D_AccType'
getAccTypeCombo.TOColumnMap={dmndomainval=dmndomainval,dmndomaindesc=dmndomaindesc}
getAccTypeCombo.OutputType=java.util.Vector

getAddTypeCombo.Query=select distinct dmndomainval,dmndomainval from DS_DOMAINS where dmndomain='D_AddType'
getAddTypeCombo.TOColumnMap={dmndomainval=dmndomainval}
getAddTypeCombo.OutputType=java.util.Vector

getAccApplSysCombo.Query=select distinct cmpapplsys,cmpapplsys from DS_CUSTID_MAP where cmpqlcustid=#cmpqlcustid:varchar# 
getAccApplSysCombo.TOColumnMap={cmpapplsys=cmpapplsys}
getAccApplSysCombo.OutputType=java.util.Vector

getApplSysCombo.Query=select distinct dmndomainval,dmndomainval from DS_DOMAINS where dmndomain='D_ApplSystem'
getApplSysCombo.TOColumnMap={dmndomainval=dmndomainval}
getApplSysCombo.OutputType=java.util.Vector

getCurrencyCombo.Query=select distinct curcurrcode,curcurrmajor from DS_CURR_REF
getCurrencyCombo.TOColumnMap={curcurrcode,curcurrmajor}
getCurrencyCombo.OutputType=java.util.Vector

getCustomerMasterDetail.Query=select a.cmtqlcustid,a.cmtshortname,a.cmtlongname1,a.cmthqcountrycode,a.cmtcountrycode,a.cmtstatecode,a.cmtcitycode,a.cmtclsbasecurrency,a.cmtemail,a.cmtstatus,b.ctyctryname,c.csrstatename,d.ccrcityname from DS_CUST_MASTER a,DS_CTRY_REF b,DS_STATE_REF c,DS_CITY_REF d where a.cmtqlcustid=#cmtqlcustid:numeric# AND a.cmtcountrycode=b.ctyctrycode AND a.cmtstatecode=c.csrstatecode AND a.cmtcitycode=d.ccrcitycode
getCustomerMasterDetail.TOColumnMap={cmtqlcustid=cmtqlcustid,cmthqcountrycode=cmthqcountrycode,cmtcountrycode=cmtcountrycode,cmtstatecode=cmtstatecode,cmtcitycode=cmtcitycode,cmtclsbasecurrency=cmtclsbasecurrency,cmtemail=cmtemail,cmtshortname=cmtshortname,cmtlongname1=cmtlongname1,cmtstatus=cmtstatus,ctyctryname=ctyctryname,csrstatename=csrstatename,ccrcityname=ccrcityname}
getCustomerMasterDetail.OutputType=com.tcs.ebw.sysadmin.transferobject.DsCustMasterNDBTO[]

getCustomerMasterEdit.Query=select a.cmtqlcustid,a.cmtshortname,a.cmtlongname1,a.cmthqcountrycode,a.cmtcountrycode,a.cmtstatecode,a.cmtcitycode,a.cmtclsbasecurrency,a.cmtemail,a.cmtstatus,b.ctyctryname,c.csrstatename,d.ccrcityname from DS_CUST_MASTER a,DS_CTRY_REF b,DS_STATE_REF c,DS_CITY_REF d where a.cmtqlcustid=#cmtqlcustid:numeric# AND a.cmtcountrycode=b.ctyctrycode AND a.cmtstatecode=c.csrstatecode AND a.cmtcitycode=d.ccrcitycode
getCustomerMasterEdit.TOColumnMap={cmtqlcustid=cmtqlcustid,cmthqcountrycode=cmthqcountrycode,cmtcountrycode=cmtcountrycode,cmtstatecode=cmtstatecode,cmtcitycode=cmtcitycode,cmtclsbasecurrency=cmtclsbasecurrency,cmtemail=cmtemail,cmtshortname=cmtshortname,cmtlongname1=cmtlongname1,cmtstatus=cmtstatus,ctyctryname=ctyctryname,csrstatename=csrstatename,ccrcityname=ccrcityname}
getCustomerMasterEdit.OutputType=com.tcs.ebw.sysadmin.transferobject.DsCustMasterNDBTO[]

getAuditData.Query=select createdby,createddate,modifiedby,modifieddate from DS_CUST_MASTER where cmtqlcustid=#cmtqlcustid:numeric#
getAuditData.TOColumnMap={createdby=createdby,createddate=createddate,modifiedby=modifiedby,modifieddate=modifieddate}
getAuditData.OutputType=com.tcs.ebw.sysadmin.transferobject.DsCustMasterNDBTO[]

getAddressData.Query=select a.cmtlongname1,b.cadaddrtype,b.cadeffectivedate From DS_CUST_MASTER a,DS_CUST_ADDR b where b.cadqlcustid=#cadqlcustid:numeric# AND b.cadqlcustid=a.cmtqlcustid AND b.deleteflag='N'
getAddressData.TOColumnMap={cmtlongname1=cmtlongname1,cadaddrtype=cadaddrtype,cadeffectivedate=cadeffectivedate}
getAddressData.OutputType=java.util.ArrayList

getAddressEditData.Query=select a.cmtlongname1,b.cadaddrtype,b.cadeffectivedate From DS_CUST_MASTER a,DS_CUST_ADDR b where b.cadqlcustid=#cadqlcustid:numeric# AND b.cadqlcustid=a.cmtqlcustid AND b.deleteflag='N'
getAddressEditData.TOColumnMap={cmtlongname1=cmtlongname1,cadaddrtype=cadaddrtype,cadeffectivedate=cadeffectivedate}
getAddressEditData.OutputType=java.util.ArrayList

getAddAuditData.Query=select createdby,createddate,modifiedby,modifieddate from DS_CUST_ADDR where cadqlcustid=#cadqlcustid:numeric# AND cadaddrtype=#cadaddrtype:varchar# AND deleteflag='N'
getAddAuditData.TOColumnMap={createdby=createdby,createddate=createddate,modifiedby=modifiedby,modifieddate=modifieddate}
getAddAuditData.OutputType=com.tcs.ebw.sysadmin.transferobject.DsCustAddrTO[]

getAddDetail.Query=select cadaddrtype,cadeffectivedate,cadaddr1,cadaddr2,cadaddr3,cadaddr4,cadaddr5,cadpostcode,cadtelnum,cadfaxnum,cadtelexadd,rdcusrmobileno From DS_CUST_ADDR where cadqlcustid=#cadqlcustid:numeric# AND cadaddrtype=#cadaddrtype:varchar# AND deleteflag='N'  
getAddDetail.TOColumnMap={cadaddrtype=cadaddrtype,cadeffectivedate=cadeffectivedate,cadaddr1=cadaddr1,cadaddr2=cadaddr2,cadaddr3=cadaddr3,cadaddr4=cadaddr4,cadaddr5=cadaddr5,cadpostcode=cadpostcode,cadtelnum=cadtelnum,cadfaxnum=cadfaxnum,cadtelexadd=cadtelexadd,rdcusrmobileno=rdcusrmobileno}
getAddDetail.OutputType=com.tcs.ebw.sysadmin.transferobject.DsCustAddrNDBTO[]

getAddEdit.Query=select cadaddrtype,cadeffectivedate,cadaddr1,cadaddr2,cadaddr3,cadaddr4,cadaddr5,cadpostcode,cadtelnum,cadfaxnum,cadtelexadd,rdcusrmobileno From DS_CUST_ADDR where cadqlcustid=#cadqlcustid:numeric# AND cadaddrtype=#cadaddrtype:varchar# AND deleteflag='N'  
getAddEdit.TOColumnMap={cadaddrtype=cadaddrtype,cadeffectivedate=cadeffectivedate,cadaddr1=cadaddr1,cadaddr2=cadaddr2,cadaddr3=cadaddr3,cadaddr4=cadaddr4,cadaddr5=cadaddr5,cadpostcode=cadpostcode,cadtelnum=cadtelnum,cadfaxnum=cadfaxnum,cadtelexadd=cadtelexadd,rdcusrmobileno=rdcusrmobileno}
getAddEdit.OutputType=com.tcs.ebw.sysadmin.transferobject.DsCustAddrNDBTO[]

getMappingData.Query=select a.cmtlongname1,b.cmpapplsys,b.cmpapplcustid,b.cmpcountrycode,c.ctyctryname From DS_CUST_MASTER a,DS_CUSTID_MAP b,DS_CTRY_REF c where cmtqlcustid=#cmtqlcustid:numeric# AND a.cmtqlcustid=b.cmpqlcustid AND b.cmpcountrycode=c.ctyctrycode AND b.deleteflag='N'
getMappingData.TOColumnMap={cmtlongname1=cmtlongname1,cmpapplsys=cmpapplsys,cmpapplcustid=cmpapplcustid,cmpcountrycode=cmpcountrycode,ctyctryname=ctyctryname}
getMappingData.OutputType=java.util.ArrayList

getMappingEditData.Query=select a.cmtlongname1,b.cmpapplsys,b.cmpapplcustid,b.cmpcountrycode,c.ctyctryname From DS_CUST_MASTER a,DS_CUSTID_MAP b,DS_CTRY_REF c where cmtqlcustid=#cmtqlcustid:numeric# AND a.cmtqlcustid=b.cmpqlcustid AND b.cmpcountrycode=c.ctyctrycode AND b.deleteflag='N'
getMappingEditData.TOColumnMap={cmtlongname1=cmtlongname1,cmpapplsys=cmpapplsys,cmpapplcustid=cmpapplcustid,cmpcountrycode=cmpcountrycode,ctyctryname=ctyctryname}
getMappingEditData.OutputType=java.util.ArrayList

getMappingSearchData.Query=select a.cmtlongname1,b.cmpapplsys,b.cmpapplcustid,b.cmpcountrycode,c.ctyctryname From DS_CUST_MASTER a,DS_CUSTID_MAP b,DS_CTRY_REF c where a.cmtqlcustid=#cmtqlcustid:numeric# AND b.cmpapplsys=#cmpapplsys:varchar# AND a.cmtcountrycode=#cmtcountrycode:varchar# AND b.cmpapplcustid like #cmpapplcustid:varchar# AND a.cmtlongname1 like #cmtlongname1:varchar# AND a.cmtqlcustid=b.cmpqlcustid AND a.cmtcountrycode=c.ctyctrycode AND b.deleteflag='N'
getMappingSearchData.TOColumnMap={cmtlongname1=cmtlongname1,cmpapplsys=cmpapplsys,cmpapplcustid=cmpapplcustid,cmpcountrycode=cmpcountrycode,ctyctryname=ctyctryname}
getMappingSearchData.OutputType=java.util.ArrayList


getMappingAuditData.Query=select createdby,createddate,modifiedby,modifieddate from DS_CUSTID_MAP where cmpqlcustid=#cmpqlcustid:numeric# AND cmpapplsys=#cmpapplsys:varchar# AND cmpapplcustid=#cmpapplcustid:varchar# AND cmpcountrycode=#cmpcountrycode:varchar# AND deleteflag='N'
getMappingAuditData.TOColumnMap={createdby=createdby,createddate=createddate,modifiedby=modifiedby,modifieddate=modifieddate}
getMappingAuditData.OutputType=com.tcs.ebw.sysadmin.transferobject.DsCustidMapTO[]

getAccountData.Query=select camaccnum,camaccname,camacctype,camcurrcode From DS_ACC_MASTER where camqlcustid=#camqlcustid:numeric# AND deleteflag='N'
getAccountData.TOColumnMap={camaccnum=camaccnum,camaccname=camaccname,camacctype=camacctype,camcurrcode=camcurrcode}
getAccountData.OutputType=java.util.ArrayList

getAccountEditData.Query=select camaccnum,camaccname,camacctype,camcurrcode From DS_ACC_MASTER where camqlcustid=#camqlcustid:numeric# AND deleteflag='N'
getAccountEditData.TOColumnMap={camaccnum=camaccnum,camaccname=camaccname,camacctype=camacctype,camcurrcode=camcurrcode}
getAccountEditData.OutputType=java.util.ArrayList

getAccMappingData.Query=select camaccnum,camaccname,camacctype,camcurrcode From DS_ACC_MASTER where camqlcustid=#camqlcustid:numeric# AND camlegacysyscode=#camlegacysyscode:varchar# AND deleteflag='N'
getAccMappingData.TOColumnMap={camaccnum=camaccnum,camaccname=camaccname,camacctype=camacctype,camcurrcode=camcurrcode}
getAccMappingData.OutputType=java.util.ArrayList

getAccountDetail.Query=select a.camaccnum,a.camaccname,a.camacctype,a.camctrycode,a.camcitycode,a.cambankcode,a.cambrcode,a.camcurrcode,a.camaccstatus,a.camopendate,a.camclosedate,a.camlegacysyscode,c.ctyctryname,d.ccrcityname,e.curcurrmajor,f.bnkdes,g.cbrbrname From DS_ACC_MASTER a,DS_CTRY_REF c,DS_CITY_REF d,DS_CURR_REF e,DS_BANK_REF f,DS_BR_REF g where a.camqlcustid=#camqlcustid:numeric# AND a.camaccnum=#camaccnum:varchar# AND a.camctrycode=c.ctyctrycode AND a.camcitycode=d.ccrcitycode AND a.camcurrcode=e.curcurrcode AND a.cambankcode=f.bnkcode AND a.cambrcode=g.cbrbrcode
getAccountDetail.TOColumnMap={camaccnum=camaccnum,camaccname=camaccname,camacctype=camacctype,camctrycode=camctrycode,camcitycode=camcitycode,cambankcode=cambankcode,cambrcode=cambrcode,camcurrcode=camcurrcode,camaccstatus=camaccstatus,camopendate=camopendate,camclosedate=camclosedate,camlegacysyscode=camlegacysyscode,ctyctryname=ctyctryname,ccrcityname=ccrcityname,curcurrmajor=curcurrmajor,bnkdes=bnkdes,cbrbrname=cbrbrname}
getAccountDetail.OutputType=com.tcs.ebw.sysadmin.transferobject.DsAccMasterNDBTO[]

getAccEdit.Query=select a.camaccnum,a.camaccname,a.camacctype,a.camctrycode,a.camcitycode,a.cambankcode,a.cambrcode,a.camcurrcode,a.camaccstatus,a.camopendate,a.camclosedate,a.camlegacysyscode,c.ctyctryname,d.ccrcityname,e.curcurrmajor,f.bnkdes,g.cbrbrname From DS_ACC_MASTER a,DS_CTRY_REF c,DS_CITY_REF d,DS_CURR_REF e,DS_BANK_REF f,DS_BR_REF g where a.camqlcustid=#camqlcustid:numeric# AND a.camaccnum=#camaccnum:varchar# AND a.camctrycode=c.ctyctrycode AND a.camcitycode=d.ccrcitycode AND a.camcurrcode=e.curcurrcode AND a.cambankcode=f.bnkcode AND a.cambrcode=g.cbrbrcode
getAccEdit.TOColumnMap={camaccnum=camaccnum,camaccname=camaccname,camacctype=camacctype,camctrycode=camctrycode,camcitycode=camcitycode,cambankcode=cambankcode,cambrcode=cambrcode,camcurrcode=camcurrcode,camaccstatus=camaccstatus,camopendate=camopendate,camclosedate=camclosedate,camlegacysyscode=camlegacysyscode,ctyctryname=ctyctryname,ccrcityname=ccrcityname,curcurrmajor=curcurrmajor,bnkdes=bnkdes,cbrbrname=cbrbrname}
getAccEdit.OutputType=com.tcs.ebw.sysadmin.transferobject.DsAccMasterNDBTO[]

getAccAuditData.Query=select createdby,createddate,modifiedby,modifieddate from DS_ACC_MASTER where camqlcustid=#camqlcustid:numeric# AND camaccnum=#camaccnum:varchar# AND deleteflag='N'
getAccAuditData.TOColumnMap={createdby=createdby,createddate=createddate,modifiedby=modifiedby,modifieddate=modifieddate}
getAccAuditData.OutputType=com.tcs.ebw.sysadmin.transferobject.DsAccMasterTO[]

#Update Queries for Edit

updateCustMaster.Query=Update DS_CUST_MASTER set cmthqcountrycode=#cmthqcountrycode:varchar#,cmtcountrycode=#cmtcountrycode:varchar#,cmtstatecode=#cmtstatecode:varchar#,cmtcitycode=#cmtcitycode:varchar#,cmtclsbasecurrency=#cmtclsbasecurrency:varchar#,cmtemail=#cmtemail:varchar# where cmtqlcustid=#cmtqlcustid:numeric#

updateCustAccount.Query=Update DS_ACC_MASTER set camaccname=#camaccname:varchar#,camacctype=#camacctype:varchar#,cambrcode=#cambrcode:varchar#,camcurrcode=#camcurrcode:varchar#,camopendate=#camopendate:date#,camclosedate=#camclosedate:date# where camqlcustid=#camqlcustid:numeric# AND camaccnum=#camaccnum:varchar#
updateCustAccount.StmtType=PreparedStatement

# Update Queries for Customer Address Edit

updateCustMastAddress.Query=Update DS_CUST_MASTER set cmtlongname1=#cmtlongname1:varchar#,cmtemail=#cmtemail:varchar# where cmtqlcustid=#cmtqlcustid:numeric#

updateCustAddress.Query=Update DS_CUST_ADDR set cadaddr1=#cadaddr1:varchar#,cadaddr2=#cadaddr2:varchar#,cadaddr3=#cadaddr3:varchar#,cadaddr4=#cadaddr4:varchar#,cadaddr5=#cadaddr5:varchar#,cadpostcode=#cadpostcode:varchar#,cadtelnum=#cadtelnum:varchar#,cadfaxnum=#cadfaxnum:varchar#,cadtelexadd=#cadtelexadd:varchar#,rdcusrmobileno=#rdcusrmobileno:varchar#,pagernum=#pagernum:varchar# where cadqlcustid=#cadqlcustid:numeric#

#Insert Queries

setNewCustomerData.Query=Insert into DS_CUST_MASTER (cmtqlcustid,cmtcountrycode,cmtstatecode,cmtcitycode,cmtlongname1,cmtshortname,cmthqcountrycode,cmtemail,cmtclsbasecurrency,cmtstatus,intstatus) values(#cmtqlcustid:numeric#,#cmtcountrycode:varchar#,#cmtstatecode:varchar#,#cmtcitycode:varchar#,#cmtlongname1:varchar#,#cmtshortname:varchar#,#cmthqcountrycode:varchar#,#cmtemail:varchar#,#cmtclsbasecurrency:varchar#,#cmtstatus:varchar#,#intstatus:varchar#)
setNewCustomerData.StmtType=Statement

setCustomerMasterInfo.Query=Insert into DS_CUST_MASTER (cmtqlcustid,cmtcountrycode,cmtstatecode,cmtcitycode,cmtlongname1,cmtshortname,cmthqcountrycode,cmtemail,cmtclsbasecurrency) values(#cmtqlcustid:numeric#,#cmtcountrycode:varchar#,#cmtstatecode:varchar#,#cmtcitycode:varchar#,#cmtlongname1:varchar#,#cmtshortname:varchar#,#cmthqcountrycode:varchar#,#cmtemail:varchar#,#cmtclsbasecurrency:varchar#)

setCustAddInfo.Query=Insert into DS_CUST_ADDR (cadqlcustid,cadeffectivedate,cadaddrtype,cadaddr1,cadaddr2,cadaddr3,cadaddr4,cadaddr5,cadpostcode,cadtelnum,cadfaxnum,cadtelexadd,rdcusrmobileno,pagernum,intstatus) values (#cadqlcustid:numeric#,#cadeffectivedate:date#,#cadaddrtype:varchar#,#cadaddr1:varchar#,#cadaddr2:varchar#,#cadaddr3:varchar#,#cadaddr4:varchar#,#cadaddr5:varchar#,#cadpostcode:varchar#,#cadtelnum:varchar#,#cadfaxnum:varchar#,#cadtelexadd:varchar#,#rdcusrmobileno:varchar#,#pagernum:varchar#,#intstatus:varchar#) 
setCustAddInfo.StmtType=PreparedStatement

setNewAccountDetails.Query=Insert into DS_ACC_MASTER (camqlcustid,camaccnum,camaccname,camacctype,camctrycode,camcitycode,cambankcode,cambrcode,camcurrcode,camaccstatus,camopendate,camclosedate,camlegacysyscode,intstatus,camtel,camccspflag,camctname) values (#camqlcustid:numeric#,#camaccnum:varchar#,#camaccname:varchar#,#camacctype:varchar#,#camctrycode:varchar#,#camcitycode:varchar#,#cambankcode:varchar#,#cambrcode:varchar#,#camcurrcode:varchar#,#camaccstatus:varchar#,#camopendate:date#,#camclosedate:date#,#camlegacysyscode:varchar#,#intstatus:varchar#,#camtel:varchar#,#camccspflag:varchar#,#camctname:varchar#)
setNewAccountDetails.StmtType=PreparedStatement

setMappingData.Query=Insert into DS_CUSTID_MAP(cmpqlcustid,cmpapplsys,cmpapplcustid,cmpcountrycode,cmpchannelid,cmpgrpid,intstatus) values (#cmpqlcustid:numeric#,#cmpapplsys:varchar#,#cmpapplcustid:varchar#,#cmpcountrycode:varchar#,#cmpchannelid:varchar#,#cmpgrpid:varchar#,#intstatus:varchar#)

getMapEditData.Query=select a.cmtlongname1,b.cmpapplsys,b.cmpapplcustid,b.cmpcountrycode,c.ctyctryname From DS_CUST_MASTER a,DS_CUSTID_MAP b,DS_CTRY_REF c where b.cmpqlcustid=#cmpqlcustid:numeric# AND b.cmpqlcustid=a.cmtqlcustid AND b.cmpcountrycode=c.ctyctrycode
getMapEditData.TOColumnMap={cmtlongname1=cmtlongname1,cmpapplsys=cmpapplsys,cmpapplcustid=cmpapplcustid,cmpcountrycode=cmpcountrycode,ctyctryname=ctyctryname}
getMapEditData.OutputType=java.util.ArrayList


#Delete Queries

deleteAccountInfo.Query=Update DS_ACC_MASTER set deleteflag='Y' where camqlcustid=#camqlcustid:numeric# AND camaccnum=#camaccnum:varchar#

deleteMappingInfo.Query=Update DS_CUSTID_MAP set deleteflag='Y' where cmpqlcustid=#cmpqlcustid:numeric# AND cmpapplsys=#cmpapplsys:varchar# AND cmpapplcustid=#cmpapplcustid:varchar# AND cmpcountrycode=#cmpcountrycode:varchar#

deleteAddressInfo.Query=Update DS_CUST_ADDR set deleteflag='Y' where cadqlcustid=#cadqlcustid:numeric# AND cadaddrtype=#cadaddrtype:varchar#

deleteMasterInfo.Query=Update DS_CUST_MASTER set deleteflag='Y' where cmtqlcustid=#cmtqlcustid:numeric# AND cmtcountrycode=#cmtcountrycode:varchar# AND cmtshortname=#cmtshortname:varchar# AND cmtcmtstatus=#cmtstatus:varchar#

&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&


# Jharna's Queries

#setDapInfo.Query=Insert into ds_dap_acct_cd acctcd ( udagrpid,udafieldname, udafieldvalue,udadapid,deleteflag) \
#                 values(#udagrpid:varchar#,'Acct Initiation', #udafieldvalue:varchar#,'dadadap','N')   
setDapInfo.Query=Insert into ds_dap_acct_cd (udagrpid,udafieldname,udafieldvalue,udadapid,deleteflag) \
                 values(#udagrpid:varchar#,'Acct Initiation', #udafieldvalue:varchar#,(select distinct ufddapid from \
ds_user_fap_dap_link where ufdgrpid=#udagrpid:varchar# and ufduserid=#usruserid:varchar# and ufddapid not like ('%Dummy%')),'N')   
setDapInfo.StmtType=Statement

#setDapInfo.Query=Insert into DS_DAP (udpgrpid, udpdapid, udpdescription) values(#udpgrpid:varchar#,#udpdapid:varchar#,#udpdescription:varchar#)
setDapAcctInfo.Query=Insert into DS_DAP_ACCT_CD (udadapid, udagrpid, udafieldname, udafieldvalue) values(#udadapid:varchar#,#udagrpid:varchar#,#udafieldname:varchar#,#udafieldvalue:varchar#)
setFapInfo.Query=Insert into DS_FAP (ufpgrpid, ufpfapid, ufpdescription) values(#ufpgrpid:varchar#,#ufpfapid:varchar#,#ufpdescription:varchar#)
setFapPgmInfo.Query=Insert into DS_FAP_PGM_ACTION (ufagrpid, ufafapid, ufapgmid, ufapgmaction) values(#ufagrpid:varchar#,#ufafapid:varchar#,#ufapgmid:varchar#,#ufapgmaction:varchar#)
setUserInfo.Query=Insert into DS_USER (usrgrpid,usruserid,usrusername,usremail,intstatus) values(#usrgrpid:varchar#,#usruserid:varchar#,#usrusername:varchar#,#usremail:varchar#,'N')
setUserLinkInfo.Query=Insert into DS_USER_FAP_DAP_LINK (ufdgrpid,ufdfapid,ufddapid,ufduserid,intstatus) values(#ufdgrpid:varchar#,#ufdfapid:varchar#,#ufddapid:varchar#,#ufduserid:varchar#,'N')

updateDapInfo.Query=Update DS_DAP set udpdescription=#udpdescription:varchar# where udpgrpid=#udpgrpid:varchar# or udpdapid=#udpdapid:varchar#
updateDapAcctInfo.Query=Update DS_DAP_ACCT_CD set udagrpid=#udagrpid:varchar#, udafieldname=#udafieldname:varchar#, udafieldvalue=#udafieldvalue:varchar# where udadapid=#udadapid:varchar#
updateFapInfo.Query=Update DS_FAP set ufpfapid=#uFPFAPID:varchar#, ufpdescription=#uFPDESCRIPTION:varchar# where ufpgrpid=#uFPGRPID:varchar#
updateFapPgmInfo.Query=Update DS_FAP_PGM_ACTION set ufafapid=#uFAFAPID:varchar#, ufapgmid=#uFAPGMID:varchar#, ufapgmaction=#uFAPGMACTION:varchar# where ufagrpid=#uFAGRPID:varchar#
updateUserInfo.Query=Update DS_USER set usruserid=#uSRUSERID:varchar#, usrusername=#uSRUSERNAME:varchar# where usrgrpid=#uSRGRPID:varchar#
updateUserLinkInfo.Query=Update DS_USER_FAP_DAP_LINK set ufdgrpid=#uFDGRPID:varchar#, ufdfapid=#uFDFAPID:varchar#, ufddapid=#uFDDAPID:varchar# where ufduserid=#uFDUSERID:varchar#

deleteDapInfo.Query=Update DS_DAP set deleteflag='Y' where UDPDAPID=#udpdapid:varchar# and UDPGRPID=#udpgrpid:varchar#
#deleteDapAcctInfo.Query=Update DS_DAP_ACCT_CD set deleteflag=#dELETEFLAG:varchar# where udadapid=#uDADAPID:varchar#
deleteFapInfo.Query=Update DS_FAP set deleteflag='Y' where UFPFAPID=#ufpfapid:varchar# and UFPGRPID=#ufpgrpid:varchar#
#deleteFapPgmInfo.Query=Update DS_FAP_PGM_ACTION set deleteflag=#dELETEFLAG:varchar# where ufagrpid=#uFAGRPID:varchar#
deleteUserInfo.Query=Update DS_USER set deleteflag='Y' where USRGRPID=#usrgrpid:varchar# and USRUSERID=#usruserid:varchar#
deleteUserInfo.StmtType=Statement
#deleteUserLinkInfo.Query=Update DS_USER_FAP_DAP_LINK set deleteflag=#dELETEFLAG:varchar# where ufduserid=#uFDUSERID:varchar#

#getgrpidcombo.Query=select cgrgrpid, ( cgrgrpid ||'~' ||cgrgrpname1) cgrgrpname1 from DS_CUST_GRP_REF 
getgrpidcombo.Query=select cgrgrpid, cgrgrpname1 from DS_CUST_GRP_REF 
getgrpidcombo.TOColumnMap ={cgrgrpid=cGRGRPID,cgrgrpname1=cGRGRPNAME1}
getgrpidcombo.OutputType=java.util.Vector

getfieldInfocombo.Query=select dmndomainval, dmndomainval from DS_DOMAINS where dmndomain='D_DapField'
getfieldInfocombo.TOColumnMap ={dmndomainval=dMNDOMAINVAL}
getfieldInfocombo.OutputType=java.util.Vector

getappsyscombo.Query=select distinct upgprogapplarea, upgprogapplarea from DS_PROGRAMS where not upgprogapplarea='null'
getappsyscombo.TOColumnMap ={upgprogapplarea=uPGPROGAPPLAREA,upgprogapplarea=uPGPROGAPPLAREA}
getappsyscombo.OutputType=java.util.Vector

getDapnew.Query=select distinct udafieldname, udafieldvalue from DS_DAP_ACCT_CD where UDAFIELDNAME in (SELECT UDAFIELDNAME FROM DS_DAP_ACCT_CD where UDADAPID=#udadapid:varchar#) AND (udafieldvalue is not null) and not udafieldvalue='null'
getDapnew.TOColumnMap ={udafieldname=uDAFIELDNAME,udafieldvalue=uDAFIELDVALUE}
getDapnew.OutputType=java.util.ArrayList

getDaplist.Query=select udpgrpid, udpdapid, udpdescription from DS_DAP where UDPGRPID=#udpgrpid:varchar# and deleteflag='N'
getDaplist.TOColumnMap = {udpgrpid=uDPGRPID,udpdapid=uDPDAPID,udpdescription=uDPDESCRIPTION}
getDaplist.OutputType=java.util.ArrayList

getDapdetail.Query=select udafieldname, udafieldvalue from DS_DAP_ACCT_CD where UDADAPID like(#udadapid:varchar#)
getDapdetail.TOColumnMap = {udafieldname=uDAFIELDNAME,udafieldvalue=uDAFIELDVALUE}
getDapdetail.OutputType=java.util.ArrayList

getFielddata.Query=select udafieldname from DS_DAP_ACCT_CD where UDADAPID=#udadapid:varchar#
getFielddata.TOColumnMap={udafieldname=udafieldname}
getFielddata.OutputType=com.tcs.ebw.sysadmin.transferobject.DsDapAcctCdTO[]

getAudtdata.Query=select createdby, createddate, modifiedby, modifieddate from DS_DAP where UDPDAPID=#udpdapid:varchar#
getAudtdata.TOColumnMap={createdby=createdby,createddate=createddate,modifiedby=modifiedby,modifieddate=modifieddate}
getAudtdata.OutputType=com.tcs.ebw.sysadmin.transferobject.DsDapTO[]

addNewDAP.Query=select distinct udafieldvalue from DS_DAP_ACCT_CD where UDAFIELDNAME=#udafieldname:varchar# AND (udafieldvalue is not null) and not udafieldvalue='null'
addNewDAP.TOColumnMap ={udafieldvalue=uDAFIELDVALUE}
addNewDAP.OutputType=java.util.ArrayList

addNewFAP.Query=select a.upgprogramid, a.upgprogramname, b.upaprogramaction from DS_PROGRAMS a,DS_PROGRAM_ACTION b where b.UPAPROGRAM_ID=a.UPGPROGRAMID AND a.UPGPROGAPPLAREA=#upgprogapplarea:varchar#
addNewFAP.TOColumnMap ={`=uPGPROGRAMID,upgprogramname=uPGPROGRAMNAME,upaprogramaction=uPAPROGRAMACTION}
addNewFAP.OutputType=java.util.ArrayList

getFaplist.Query=select ufpgrpid,ufpfapid,ufpdescription from DS_FAP where UFPGRPID=#ufpgrpid:varchar# and deleteflag='N'
getFaplist.TOColumnMap ={ufpgrpid=uFPGRPID,ufpfapid=uFPFAPID,ufpdescription=uFPDESCRIPTION}
getFaplist.OutputType=java.util.ArrayList

getAudtFap.Query=select createdby, createddate, modifiedby, modifieddate from DS_FAP where UFPFAPID=#ufpfapid:varchar#
getAudtFap.TOColumnMap={createdby=createdby,createddate=createddate,modifiedby=modifiedby,modifieddate=modifieddate}
getAudtFap.OutputType=com.tcs.ebw.sysadmin.transferobject.DsFapTO[]

getFapdetail.Query=select a.ufapgmid,b.upgprogramname,a.ufapgmaction from DS_FAP_PGM_ACTION a, DS_PROGRAMS b where a.UFAFAPID=#ufafapid:varchar# and a.ufapgmid=b.upgprogramid
getFapdetail.TOColumnMap ={ufapgmid=uFAPGMID,upgprogramname=uPGPROGRAMNAME,ufapgmaction=uFAPGMACTION}
getFapdetail.OutputType=java.util.ArrayList

updateFapInfo.Query=Update DS_FAP set ufpdescription=#ufpdescription:varchar# where ufpgrpid=#ufpgrpid:varchar# and ufpfapid=#ufpfapid:varchar#

editsaveFap.Query=Delete from DS_FAP_PGM_ACTION where UFAGRPID=#ufagrpid:varchar# and UFAFAPID=#ufafapid:varchar#

insertFapPgmInfo.Query=Insert into DS_FAP_PGM_ACTION (ufagrpid,ufafapid,ufapgmid,ufapgmaction) values(#ufagrpid:varchar#,#ufafapid:varchar#,#ufapgmid:varchar#,#ufapgmaction:varchar#)

updateDapInfo.Query=Update DS_DAP set udpdescription=#udpdescription:varchar# where udpgrpid=#udpgrpid:varchar# and udpdapid=#udpdapid:varchar#

editsaveDap.Query=Delete from DS_DAP_ACCT_CD where UDAGRPID=#udagrpid:varchar# and UDADAPID=#udadapid:varchar#

insertDapAcctInfo.Query=Insert into DS_DAP_ACCT_CD (udagrpid,udadapid,udafieldname,udafieldvalue) values(#udagrpid:varchar#,#udadapid:varchar#,#udafieldname:varchar#,#udafieldvalue:varchar#)

updateUserInfo.Query=Update DS_USER set usrusername=#usrusername:varchar#,usremail=#usremail:varchar# where usrgrpid=#usrgrpid:varchar# and usruserid=#usruserid:varchar#

editsaveUser.Query=Delete from DS_USER_FAP_DAP_LINK where UFDGRPID=#ufdgrpid:varchar# and UFDUSERID=#ufduserid:varchar#

insertUserFapDapInfo.Query=Insert into DS_USER_FAP_DAP_LINK (ufdgrpid,ufduserid,ufdfapid,ufddapid,intstatus) values(#ufdgrpid:varchar#,#ufduserid:varchar#,#ufdfapid:varchar#,#ufddapid:varchar#,'N')


getFapidcombo.Query=Select (ufpfapid ||'~' ||ufpdescription),ufpfapid from DS_FAP where ufpgrpid=#ufpgrpid:varchar#
getFapidcombo.TOColumnMap ={ufpfapid=uFPFAPID,ufpdescription=uFPDESCRIPTION}
getFapidcombo.OutputType=java.util.Vector

getDapidcombo.Query=Select (udpdapid ||'~' ||udpdescription),udpdapid from DS_DAP where udpgrpid=#udpgrpid:varchar#
getDapidcombo.TOColumnMap ={udpdapid=uDPDAPID,udpdescription=uDPDESCRIPTION}
getDapidcombo.OutputType=java.util.Vector

getUserlist.Query=select distinct a.usruserid,a.usrusername from DS_USER a, DS_USER_FAP_DAP_LINK b where a.usrgrpid=b.ufdgrpid AND (b.ufdgrpid=#ufdgrpid:varchar# or b.ufdfapid=#ufdfapid:varchar# or b.ufddapid=#ufddapid:varchar# or a.usruserid=#usruserid:varchar#) and (a.deleteflag='N')
getUserlist.TOColumnMap ={usruserid=uSRUSERID,usrusername=uSRUSERNAME}
getUserlist.OutputType=java.util.ArrayList

getUserdetail.Query=select distinct a.ufdfapid,b.ufpdescription,a.ufddapid,c.udpdescription from DS_USER_FAP_DAP_LINK a, DS_FAP b, DS_DAP c where (a.ufdfapid=b.ufpfapid and a.ufddapid=c.udpdapid) AND (a.ufduserid=#ufduserid:varchar#)
getUserdetail.TOColumnMap ={ufdfapid=uFDFAPID,ufpdescription=uFPDESCRIPTION,ufddapid=uFDDAPID,udpdescription=uDPDESCRIPTION}
getUserdetail.OutputType=java.util.ArrayList

getEmail.Query=select a.usrgrpid,a.usremail,b.cgrgrpname1 from DS_USER a, DS_CUST_GRP_REF b where a.usruserid=#usruserid:varchar# and b.cgrgrpid=a.usrgrpid
getEmail.TOColumnMap={usrgrpid=usrgrpid,usremail=usremail,cgrgrpname1=cgrgrpname1}
getEmail.OutputType=com.tcs.ebw.sysadmin.transferobject.DsUserFapDapLinkNDBTO[]

getAudtUser.Query=select createdby,createddate,modifiedby,modifieddate from DS_USER where usruserid=#usruserid:varchar#
getAudtUser.TOColumnMap={createdby=createdby,createddate=createddate,modifiedby=modifiedby,modifieddate=modifieddate}
getAudtUser.OutputType=com.tcs.ebw.sysadmin.transferobject.DsUserTO[]

getRolecategCombo.Query=SELECT distinct dmndomainvaldesc,dmndomainvaldesc FROM ds_domains where dmndomain='D_EIIndicator'
getRolecategCombo.TOColumnMap ={dmndomainvaldesc=dmndomainvaldesc,dmndomainvaldesc=dmndomainvaldesc}
getRolecategCombo.OutputType=java.util.Vector
getRolecategCombo.StmtType=Statement


getRoletypeCombo.Query=SELECT distinct roletype,roletype FROM eb_sas_role_access where extgroupflag=(SELECT dmndomainval FROM ds_domains where dmndomainvaldesc=#dmndomainvaldesc:varchar# and dmndomain='D_EIIndicator')
#getRoletypeCombo.Query=SELECT roletype FROM eb_sas_role_access where extgroupflag=#extgroupflag:varchar#
getRoletypeCombo.TOColumnMap ={roletype=roletype,roletype=roletype}
getRoletypeCombo.OutputType=java.util.Vector

getRolelist.Query=SELECT distinct a.roletype,a.roledescription,b.dmndomainvaldesc FROM eb_sas_role_access a, ds_domains b where a.extgroupflag like (SELECT dmndomainval FROM ds_domains where dmndomainvaldesc=#dmndomainvaldesc:varchar# and dmndomain='D_EIIndicator') and b.dmndomainvaldesc like #dmndomainvaldesc:varchar# and a.roletype like #roletype:varchar# and a. roledescription like #roledescription:varchar# and a.deleteflag='N'
getRolelist.TOColumnMap ={roletype=roletype,roledescription=roledescription,dmndomainvaldesc=dmndomainvaldesc}
getRolelist.OutputType=java.util.ArrayList

#getRoleDetail.Query=SELECT distinct a.rolename,a.roleid,c.dmndomainvaldesc from eb_sas_role_master a, eb_sas_role_access_dtls b, ds_domains c where a.roleid=b.roleid and b.roletype=#roletype:varchar# and c.dmndomain='D_RoleLevel' and c.dmndomainval in (select distinct leveltype from eb_sas_role_access_dtls where roletype=#roletype:varchar#)
getRoleDetail.Query=select distinct b.rolename, a.roleid, c.dmndomainvaldesc from eb_sas_role_access_dtls a, eb_sas_role_master b, ds_domains c where a.roletype=#roletype:varchar# and c.dmndomain='D_RoleLevel' and a.leveltype=c.dmndomainval and a.roleid=b.roleid
getRoleDetail.TOColumnMap = {rolename=rolename,roleid=roleid,dmndomainvaldesc=dmndomainvaldesc}
getRoleDetail.OutputType=java.util.ArrayList

getAudtRole.Query=select distinct createdby, createddate, modifiedby, modifieddate from EB_SAS_ROLE_ACCESS_DTLS where roletype=#roletype:varchar#
getAudtRole.TOColumnMap={createdby=createdby,createddate=createddate,modifiedby=modifiedby,modifieddate=modifieddate}
getAudtRole.OutputType=com.tcs.ebw.sysadmin.transferobject.EbSasRoleAccessDtlsTO[]

getRoleEdit.Query=select distinct b.rolename, a.roleid, c.dmndomainvaldesc from eb_sas_role_access_dtls a, eb_sas_role_master b, ds_domains c where a.roletype=#roletype:varchar# and c.dmndomain='D_RoleLevel' and a.leveltype=c.dmndomainval and a.roleid=b.roleid
getRoleEdit.TOColumnMap = {rolename=rolename,roleid=roleid,dmndomainvaldesc=dmndomainvaldesc}
getRoleEdit.OutputType=java.util.ArrayList

select cgrgrpid, cgrgrpname1 from DS_CUST_GRP_REF 

getRoleCombo.Query=select distinct rolename,roleid from eb_sas_role_master
getRoleCombo.TOColumnMap ={rolename=rolename,roleid=roleid}
getRoleCombo.OutputType=java.util.Vector

getLevelCombo.Query=SELECT distinct dmndomainvaldesc,dmndomainvaldesc from ds_domains where dmndomain='D_RoleLevel'
getLevelCombo.TOColumnMap ={dmndomainvaldesc=dmndomainvaldesc,dmndomainvaldesc=dmndomainvaldesc}
getLevelCombo.OutputType=java.util.Vector
getLevelCombo.StmtType=Statement

deleteRoleInfo.Query=Update eb_sas_role_access SET deleteflag='Y' where roletype=#roletype:varchar# and extgroupflag like (SELECT dmndomainval FROM ds_domains where dmndomainvaldesc=#dmndomainvaldesc:varchar# and dmndomain='D_EIIndicator')

updateRoleInfo.Query=Update eb_sas_role_access set roledescription=#roledescription:varchar# where roletype=#roletype:varchar# and extgroupflag like (SELECT dmndomainval FROM ds_domains where dmndomainvaldesc=#dmndomainvaldesc:varchar# and dmndomain='D_EIIndicator')
updateRoleInfo.StmtType=Statement

editsaveRole.Query=Delete from eb_sas_role_access_dtls where roletype=#roletype:varchar#

insertRoleDtlsInfo.Query=Insert into eb_sas_role_access_dtls (groupid,roletype,roleid,leveltype,createdby,createddate,modifiedby,modifieddate) values (#groupid:varchar#,#roletype:varchar#,#roleid:numeric#,(select dmndomainval from ds_domains where dmndomain='D_RoleLevel' and dmndomainvaldesc = #dmndomainvaldesc:varchar#),'923',sysdate,'923',sysdate)
insertRoleDtlsInfo.StmtType=PreparedStatement

insertRoleAccessInfo.Query=Insert into eb_sas_role_access (groupid,roletype,roledescription,deleteflag,extgroupflag,createdby,createddate,modifiedby,modifieddate) values(#groupid:varchar#,#roletype:varchar#,#roledescription:varchar#,'N',(SELECT dmndomainval FROM ds_domains where dmndomainvaldesc=#dmndomainvaldesc:varchar# and dmndomain='D_EIIndicator'),'923',sysdate,'923',sysdate)

getgrpidcombo1.Query=select distinct cgrgrpid,cgrgrpid from DS_CUST_GRP_REF 
getgrpidcombo1.TOColumnMap ={cgrgrpid=cGRGRPID,cgrgrpid=cGRGRPID}
getgrpidcombo1.OutputType=java.util.Vector

getuseridcombo.Query=select distinct usruserid,usruserid from DS_USER
getuseridcombo.TOColumnMap ={usruserid=uSRUSERID,usruserid=uSRUSERID}
getuseridcombo.OutputType=java.util.Vector

getFapdetail1.Query=select a.ufapgmid,b.upgprogramname,a.ufapgmaction from DS_FAP_PGM_ACTION a, DS_PROGRAMS b where a.UFAFAPID=#ufafapid:varchar# and a.ufapgmid=b.upgprogramid
getFapdetail1.TOColumnMap ={ufapgmid=uFAPGMID,upgprogramname=uPGPROGRAMNAME,ufapgmaction=uFAPGMACTION}
getFapdetail1.OutputType=java.util.ArrayList

# Trade QUeries###############
 

getToPortfolio.Query=select distinct portfolioalias,portfolioalias from eb_rdc_portfolio_dtls where customerid=#customerid:varchar#
getToPortfolio.TOColumnMap ={portfoliono=portfoliono,portfolioalias=portfolioalias}
getToPortfolio.OutputType=java.util.Vector


getPortfolio.Query=select distinct portfolioalias,portfolioalias from eb_rdc_portfolio_dtls
getPortfolio.TOColumnMap ={portfoliono=portfoliono,portfolioalias=portfolioalias}
getPortfolio.OutputType=java.util.Vector

getPortfolioAlias.Query=select distinct a.portfolioalias,a.portfolioalias from eb_rdc_portfolio_dtls  a  ,eb_rdc_asset_holdings b where  a.portfoliono in  (select b.portfoliono from eb_rdc_asset_holdings b where  b.custid=#custid:varchar#)
getPortfolioAlias.TOColumnMap ={portfoliono=portfoliono,portfolioalias=portfolioalias}
getPortfolioAlias.OutputType=java.util.Vector


getFromPortfolio.Query=select distinct a.portfolioalias,a.portfolioalias from eb_rdc_portfolio_dtls  a  ,eb_rdc_asset_holdings b where  a.portfoliono in  (select b.portfoliono from eb_rdc_asset_holdings b where  b.custid=#custid:varchar#)
getFromPortfolio.TOColumnMap ={portfoliono=portfoliono,portfolioalias=portfolioalias}
getFromPortfolio.OutputType=java.util.Vector


getExchange.Query=select distinct exchcode,exchcode from eb_rdc_exchange_master
getExchange.TOColumnMap={exchcode=exchcode.exchcode=exchcode}
getExchange.OutputType=java.util.Vector

getMarketType.Query=select longname,longname from eb_rdc_domain_chk where domainid='d_marketType'
getMarketType.TOColumnMap={longname=longname,longname=longname}
getMarketType.OutputType=java.util.Vector

getOrderType.Query=select longname,longname from eb_rdc_domain_chk where domainid='d_orderType' 
getOrderType.TOColumnMap={longname=longname,longname=longname}
getOrderType.OutputType=java.util.Vector


getDeliveryTerms.Query=select longname,longname from eb_rdc_domain_chk where domainid='d_deliveryTerms' 
getDeliveryTerms.TOColumnMap={longname=longname,longname=longname}
getDeliveryTerms.OutputType=java.util.Vector

getOrderTerms.Query=select longname,longname from eb_rdc_domain_chk where domainid='d_orderTerms' 
getOrderTerms.TOColumnMap={longname=longname,longname=longname}
getOrderTerms.OutputType=java.util.Vector


getOrderPrice.Query=select distinct curcurrcode ,curcurrcode from ds_curr_ref
getOrderPrice.TOColumnMap={curcurrcode=curcurrcode,curcurrcode=curcurrcode}
getOrderPrice.OutputType=java.util.Vector


getCashAccountCurrency.Query=select a.accountno,b.acccurr from RETLOWNER.eb_rdc_portfolio_acc a,RETLOWNER.eb_ref_acc_master b where a.portfoliono in (select distinct c.portfoliono from eb_rdc_portfolio_dtls c where c.portfolioalias=#portfolioalias:varchar#) and a.accountno=b.accnum and b.custid=(select distinct custid from RETLOWNER.eb_rdc_portfolio_acc where portfoliono in (select distinct c.portfoliono from eb_rdc_portfolio_dtls c where c.portfolioalias=#portfolioalias:varchar#))
getCashAccountCurrency.TOColumnMap={accountno=accountno,acccurr=acccurr}
getCashAccountCurrency.OutputType=java.util.Vector
  
#getCashAccount.Query=select distinct a.accnum  ,a.accnum from eb_ref_acc_master a ,eb_rdc_domain_chk  b where a.acctype=b.codevalue and not b.codevalue=3  
#getCashAccount.Query=select distinct a.accnum  ,a.accnum from eb_ref_acc_master a ,eb_rdc_domain_chk  b ,eb_rdc_portfolio_dtls c where a.acctype=b.codevalue and not b.codevalue=3  and c.customerid=a.custid and c.portfolioalias=#portfolioalias:varchar#
#getCashAccount.Query=select a.accountno,b.acccurr from RETLOWNER.eb_rdc_portfolio_acc a,RETLOWNER.eb_ref_acc_master b where a.portfoliono in (select distinct c.portfoliono from eb_rdc_portfolio_dtls c where c.portfolioalias=#portfolioalias:varchar#) and a.accountno=b.accnum and b.custid=(select distinct custid from RETLOWNER.eb_rdc_portfolio_acc where portfoliono in (select distinct c.portfoliono from eb_rdc_portfolio_dtls c where c.portfolioalias=#portfolioalias:varchar#))
#getCashAccount.TOColumnMap={accountno=accountno,acccurr=acccurr}

getCashAccount.Query=select distinct a.accountno  ,a.accountno from eb_rdc_portfolio_acc a ,eb_rdc_domain_chk  b ,eb_rdc_portfolio_dtls c where  not b.codevalue=3  and c.customerid=a.custid and   a.portfoliono in (select distinct c.portfoliono from eb_rdc_portfolio_dtls c where c.portfolioalias=#portfolioalias:varchar#)
getCashAccount.TOColumnMap={accountno=accountno,accountno=accountno}
getCashAccount.OutputType=java.util.Vector

getSecurityAccount.Query=select distinct a.accnum,a.accnum  from eb_ref_acc_master a ,eb_rdc_domain_chk  b  where b.codevalue=3 and a.acctype=b.codevalue and a.custid=#custid:varchar#
getSecurityAccount.TOColumnMap={accnum=accnum,accnum=accnum}
getSecurityAccount.OutputType=java.util.Vector

getSecuritySymbolTable.Query=select distinct a.assetname,a.exchange,a.currency,a.last,a.bid,a.ask,a.daysper from eb_rdc_asset_master a,eb_rdc_domain_chk b where b.longname=#longname:varchar# and a.assettype=b.codevalue and a.exchange=#exchange:varchar#
getSecuritySymbolTable.TOColumnMap=={assetname=assetname,exchange=exchange,currency=currency,last=last,bid=bid,ask=ask,daysper=daysper}
getSecuritySymbolTable.OutputType=java.util.ArrayList

getSecurityCurrency.Query=select distinct acccurr  from eb_ref_acc_master where accnum=#accnum:varchar#
getSecurityCurrency.TOColumnMap={acccurr=acccurr}
getSecurityCurrency.OutputType=com.tcs.ebw.trade.transferobject.EbRefAccMasterTO[] 
getSecurityCurrency.StmtType=Statement

getCashCurrency.Query=select distinct acccurr from eb_ref_acc_master where accnum=#accnum:varchar# and custid='923'
getCashCurrency.TOColumnMap={acccurr=acccurr}
getCashCurrency.OutputType=com.tcs.ebw.trade.transferobject.EbRefAccMasterTO[] 


getAssetClass.Query=select longname,longname from eb_rdc_domain_chk where domainid='d_assetClass' 
getAssetClass.TOColumnMap={longname=longname,longname=longname}
getAssetClass.OutputType=java.util.Vector


#getSector.Query=select codevalue,longname from eb_rdc_domain_chk where domainid='d_sector' 
#getSector.TOColumnMap={longname=longname,codevalue=codevalue}

getSector.Query=select distinct a.sector,b.label from RETLOWNER.eb_rdc_asset_master a,RETLOWNER.eb_rdc_domain_chk b where a.assettype=1 and a.sector=b.codevalue and b.domainid='d_sector'
getSector.TOColumnMap={label=label,sector=sector}
getSector.OutputType=java.util.Vector


getFundManager.Query=select distinct fundmanager,fundmanager from eb_rdc_asset_master where length(trim(fundmanager))>0 or  fundmanager<> null
getFundManager.TOColumnMap={fundmanager=fundmanager,fundmanager=fundmanager}
getFundManager.OutputType=java.util.Vector


getMFBuySearchTable.Query=select a.assetname,b.longname,a.currency,a.nav,a.ytd,a.threemper,a.onemper from eb_rdc_asset_master a, eb_rdc_domain_chk b where b.longname=#longname:varchar# and (a.fundmanager like #fundmanager:varchar# or  fundmanager is null) and (a.sector like #sector:numeric# or sector is null ) and (a.assetname like #assetname:varchar# or assetname is null )  and (select b.codevalue from eb_rdc_domain_chk  b where b.longname=#longname:varchar#) = a.assetclass  and  a.assettype=1 
getMFBuySearchTable.TOColumnMap={ASSETNAME=ASSETNAME,LONGNAME=LONGNAME,CURRENCY=CURRENCY,NAV=NAV,YTD=YTD,THREEMPER=THREEMPER,ONEMPER=ONEMPER}
getMFBuySearchTable.OutputType=java.util.ArrayList


getMixedOrdersSearchTable.Query=select a.assetname,b.longname,a.currency,a.nav,a.ytd,a.threemper,a.onemper from eb_rdc_asset_master a, eb_rdc_domain_chk b where b.longname=#longname:varchar# and (a.fundmanager like #fundmanager:varchar# or  fundmanager is null) and (a.sector like #sector:numeric# or sector is null ) and (a.assetname like #assetname:varchar# or assetname is null )  and (select b.codevalue from eb_rdc_domain_chk  b where b.longname=#longname:varchar#) = a.assetclass  and  a.assettype=1 and a.deleteflag='N'
getMixedOrdersSearchTable.TOColumnMap={assetname=assetname,longname=longname,currency=currency,nav=nav,ytd=ytd,threemper=threemper,onemper=onemper}
getMixedOrdersSearchTable.OutputType=java.util.ArrayList


deleteMixedOrderRecord.Query=update eb_rdc_asset_master set deleteflag='Y'  where assetname=#assetname:varchar# and assettype=1
deleteMixedOrderRecord.StmtType=Statement

getCurrency.Query=select distinct acccurr,acccurr from eb_ref_acc_master where custid='923'
getCurrency.TOColumnMap={acccurr=acccurr,acccurr=acccurr}
getCurrency.OutputType=java.util.Vector



getMutualFBuyOrderTable.Query=select a.assetname,b.longname,a.currency,a.nav,a.ytd,a.threemper,a.onemper from eb_rdc_asset_master a, eb_rdc_domain_chk b where b.longname=#longname:varchar#  and a.assetname =#assetname:varchar# and (select b.codevalue from eb_rdc_domain_chk  b where b.longname=#longname:varchar#) = a.assetclass  and  a.assettype=1 
getMutualFBuyOrderTable.TOColumnMap={assetname=assetname,longname=longname,currency=currency,nav=nav,ytd=ytd,threemper=threemper,onemper=onemper}
getMutualFBuyOrderTable.OutputType=java.util.ArrayList


getSecConversionRate.Query=select gfxexchrate from ds_global_fx_rates where gfxfromcurrcode='GBP' and gfxtocurrcode=#gfxtocurrcode:varchar#
getSecConversionRate.TOColumnMap={gfxexchrate=gfxexchrate}
getSecConversionRate.OutputType= com.tcs.ebw.payments.transferobject.DsGlobalFxRatesNONDBTO[]
getSecConversionRate.StmtType=Statement


getUserConversionRate.Query=select gfxexchrate from ds_global_fx_rates where gfxfromcurrcode='GBP' and gfxtocurrcode=#gfxtocurrcode:varchar#
getUserConversionRate.TOColumnMap={gfxexchrate=gfxexchrate}
getUserConversionRate.OutputType= com.tcs.ebw.payments.transferobject.DsGlobalFxRatesNONDBTO[]
getUserConversionRate.StmtType=Statement

#getAccConversionRate.Query=select gfxexchrate from ds_global_fx_rates where gfxfromcurrcode='GBP' and gfxtocurrcode=#gfxtocurrcode:varchar#
getAccConversionRate.Query=select a.gfxexchrate from ds_global_fx_rates a where a.gfxfromcurrcode='GBP' and a.gfxtocurrcode=(select unique b.acccurr from eb_ref_acc_master b where b.accnum=#currcode:varchar#)
getAccConversionRate.TOColumnMap={gfxexchrate=gfxexchrate}
getAccConversionRate.OutputType=com.tcs.ebw.trade.transferobject.DsGlobalFxRatesNONDBTO
getAccConversionRate.StmtType=Statement

#setMutualFundBuyOrder.Query=insert into eb_rdc_buysell_req (refid,reqid,assettype,type,accno,currency,portfoliono,assetno,assetname,amount,commission,totalamt,reqdate,status,createdby,createddate,modifiedby,modifieddate,deleteflag,versionnum,accamt,custid,amtunitflag) values(#refid:varchar#,#reqid:varchar#,(select b.codevalue from eb_rdc_domain_chk b where b.longname='Mutual Fund' and b.domainid='d_assetType'),(select c.codevalue from eb_rdc_domain_chk c where c.longname='Buy' and c.domainid='d_tradeType'),#accno:varchar#,#currency:varchar#,#portfoliono:numeric#,(select d.assetid from eb_rdc_asset_master d where d.assetname=#asset:varchar#),#assetname:varchar#,#amount:numeric#,3,#totalamt:numeric# ,sysdate,(select e.codevalue from eb_rdc_domain_chk e where e.domainid='d_status' and e.longname='Pending'),'923',sysdate,'923',sysdate,'N',1,#accamt:numeric#,'923',(select f.codevalue from eb_rdc_domain_chk f where f.domainid='d_buysellreq' and f.longname='Unit'))
setMutualFundBuyOrder.Query=insert into eb_rdc_buysell_req (refid,reqid,assettype,type,accno,currency,portfoliono,assetno,assetname,amount,commission,totalamt,reqdate,status,createdby,createddate,modifiedby,modifieddate,deleteflag,versionnum,accamt,custid,amtunitflag) values(#refid:varchar#,#reqid:varchar#,(select b.codevalue from eb_rdc_domain_chk b where b.longname='Mutual Fund' and b.domainid='d_assetType'),(select c.codevalue from eb_rdc_domain_chk c where c.longname='Buy' and c.domainid='d_tradeType'),#accno:varchar#,#currency:varchar#,(select e.portfoliono from eb_rdc_portfolio_dtls e where e.portfolioalias=#portfolio:varchar# ),(select d.assetid from eb_rdc_asset_master d where d.assetname=#asset:varchar#),#assetname:varchar#,#amount:numeric#,3,#totalamt:numeric# ,sysdate,(select e.codevalue from eb_rdc_domain_chk e where e.domainid='d_status' and e.longname='Pending'),#custid:varchar#,sysdate,#custid:varchar#,sysdate,'N',1,#accamt:numeric#,#custid:varchar#,(select f.codevalue from eb_rdc_domain_chk f where f.domainid='d_buysellreq' and f.longname='Unit'))
setMutualFundBuyOrder.StmtType=PreparedStatement


setMixedOrderBuy.Query=insert into eb_rdc_buysell_req (refid,reqid,assettype,type,accno,currency,portfoliono,assetno,assetname,amount,commission,totalamt,reqdate,status,createdby,createddate,modifiedby,modifieddate,deleteflag,versionnum,accamt,custid,amtunitflag) values(#refid:varchar#,#reqid:varchar#,(select b.codevalue from eb_rdc_domain_chk b where b.longname='Mutual Fund' and b.domainid='d_assetType'),(select c.codevalue from eb_rdc_domain_chk c where c.longname='Buy' and c.domainid='d_tradeType'),#accno:varchar#,#currency:varchar#,(select e.portfoliono from eb_rdc_portfolio_dtls e where e.portfolioalias=#portfolio:varchar# ),(select d.assetid from eb_rdc_asset_master d where d.assetname=#asset:varchar#),#assetname:varchar#,#amount:numeric#,#commission:numeric#,#totalamt:numeric# ,sysdate,(select e.codevalue from eb_rdc_domain_chk e where e.domainid='d_status' and e.longname='Pending'),#custid:varchar#,sysdate,#custid:varchar#,sysdate,'N',1,#accamt:numeric#,#custid:varchar#,(select f.codevalue from eb_rdc_domain_chk f where f.domainid='d_buysellreq' and f.longname='Unit'))
setMixedOrderBuy.StmtType=PreparedStatement


setEquityBuyOrder.Query=insert into eb_rdc_buysell_req (refid,reqid,assettype,type,accno,currency,portfoliono,assetno,assetname,amount,commission,totalamt,reqdate,status,createdby,createddate,modifiedby,modifieddate,deleteflag,versionnum,accamt,custid,amtunitflag,discqnty,orderprice,ordertype,triggerprice,delterms,orderterms,odrvaldate) values(#refid:varchar#,#reqid:varchar#,(select b.codevalue from eb_rdc_domain_chk b where b.longname='Equity' and b.domainid='d_assetType'),(select c.codevalue from eb_rdc_domain_chk c where c.longname='Buy' and c.domainid='d_tradeType'),#accno:varchar#,#currency:varchar#,(select e.portfoliono from eb_rdc_portfolio_dtls e where e.portfolioalias=#portfolio:varchar# and e.customerid='923'),(select d.assetid from eb_rdc_asset_master d where d.assetname=#asset:varchar#),#assetname:varchar#,#amount:numeric#,#commission:numeric#,#totalamt:numeric# ,sysdate,(select e.codevalue from eb_rdc_domain_chk e where e.domainid='d_status' and e.longname='Pending'),#custid:varchar#,sysdate,#custid:varchar#,sysdate,'N',1,#accamt:numeric#,#custid:varchar#,(select f.codevalue from eb_rdc_domain_chk f where f.domainid='d_buysellreq' and f.longname='Unit'),#discqnty:numeric#,#orderprice:numeric#,#ordertype:varchar#,#triggerprice:numeric#,#delterms:varchar#,#orderterms:varchar#,#odrvaldate:date#)
setEquityBuyOrder.StmtType=PreparedStatement

#getSellMutualFund.Query=select a.assetname,c.longname,b.units,a.currency,(b.units*a.nav)  as marketvalue,a.nav,a.sincepur from eb_rdc_asset_master a,eb_rdc_asset_holdings b,eb_rdc_domain_chk c where a.assettype=1 and a.assettype=b.assettype and a.assetid=b.assetid and a.assetclass=c.codevalue and c.domainid='d_assetClass'
getSellMutualFund.Query=select (select portfolioalias from eb_rdc_portfolio_dtls where portfoliono=b.portfoliono) as portfolioalias,a.assetname,c.longname,b.units,a.currency,(b.units*a.nav)  as marketvalue,a.nav,a.sincepur from eb_rdc_asset_master a,eb_rdc_asset_holdings b,eb_rdc_domain_chk c,eb_rdc_portfolio_dtls d where a.assettype=1 and a.assettype=b.assettype and a.assetid=b.assetid and a.assetclass=c.codevalue and c.domainid='d_assetClass' and b.portfoliono=d.portfoliono
getSellMutualFund.TOColumnMap={portfolioalias=portfolioalias,assetname=assetname,longname=longname,units=units,currency=currency,marketvalue=marketvalue,nav=nav,sincepur=sincepur}
getSellMutualFund.OutputType=java.util.ArrayList
 


getAccount.Query=select distinct a.accnum ,a.accnum from eb_ref_acc_master a ,eb_rdc_domain_chk  b where a.acctype=b.codevalue and not b.codevalue=3
getAccount.TOColumnMap={accnum=accnum,accnum=accnum}
getAccount.OutputType=java.util.Vector



getSelectedMFSell.Query=select (select portfolioalias from eb_rdc_portfolio_dtls where portfoliono=b.portfoliono) as portfolioalias,a.assetname,c.longname,b.units,a.currency,(b.units*a.nav)  as marketvalue,a.nav,a.sincepur from eb_rdc_asset_master a,eb_rdc_asset_holdings b,eb_rdc_domain_chk c ,eb_rdc_portfolio_dtls d where a.assettype=1 and a.assetname=#assetname:varchar# and d.portfolioalias=#portfolio:varchar# and a.assettype=b.assettype and a.assetid=b.assetid and a.assetclass=c.codevalue and c.domainid='d_assetClass' and b.portfoliono=d.portfoliono
getSelectedMFSell.TOColumnMap={portfolioalias=portfolioalias,assetname=assetname,longname=longname,units=units,currency=currency,marketvalue=marketvalue,nav=nav,sincepur=sincepur}
getSelectedMFSell.OutputType=java.util.ArrayList
getSelectedMFSell.StmtType=Statement
 

getMFFundManager.Query=select fundmanager from eb_rdc_asset_master where  assetname=#assetname:varchar# and assettype=1
getMFFundManager.TOColumnMap={fundmanager=fundmanager}
getMFFundManager.OutputType=com.tcs.ebw.trade.transferobject.EbRdcAssetMasterNDBTO
getMFFundManager.StmtType=Statement
   

setMFSellOrder.Query=insert into eb_rdc_buysell_req (refid,reqid,assettype,type,accno,currency,portfoliono,assetno,assetname,amount,commission,totalamt,reqdate,status,createdby,createddate,modifiedby,modifieddate,deleteflag,versionnum,accamt,custid,amtunitflag) values(#refid:varchar#,#reqid:varchar#,(select b.codevalue from eb_rdc_domain_chk b where b.longname='Mutual Fund' and b.domainid='d_assetType'),(select c.codevalue from eb_rdc_domain_chk c where c.longname='Sell' and c.domainid='d_tradeType'),#accno:varchar#,#currency:varchar#,(select e.portfoliono from eb_rdc_portfolio_dtls e where e.portfolioalias=#portfolio:varchar#),(select d.assetid from eb_rdc_asset_master d where d.assetname=#asset:varchar#),#assetname:varchar#,#amount:numeric#,3,#totalamt:numeric# ,sysdate,(select e.codevalue from eb_rdc_domain_chk e where e.domainid='d_status' and e.longname='Pending'),#custid:varchar#,sysdate,#custid:varchar#,sysdate,'N',1,#accamt:numeric#,#custid:varchar#,(select f.codevalue from eb_rdc_domain_chk f where f.domainid='d_buysellreq' and f.longname='Unit'))
setMFSellOrder.StmtType=PreparedStatement

updateMFHoldings.Query=update eb_rdc_asset_holdings set blockedunits=#blockedunits:numeric# where custid=#custid:varchar# and assettype=(select a.codevalue from eb_rdc_domain_chk a where a.longname='Mutual Fund' and a.domainid='d_assetType') and assetname=#asset:varchar# and assetid=(select b.assetid from eb_rdc_asset_master b where b.assetname=#asset:varchar#) and portfoliono=(select e.portfoliono from eb_rdc_portfolio_dtls e where e.portfolioalias=#portfolio:varchar# and e.customerid=#custid:varchar#)
updateMFHoldings.StmtType=Statement

#getEquitySellTable.Query=select a.exchange,a.assetname, b.units,a.currency,a.last,a.bid,a.ask,a.volume from eb_rdc_asset_master a,eb_rdc_asset_holdings b where b.custid='923' and b.assettype=2 and a.assetid = b.assetid
#getEquitySellTable.Query=select (select portfolioalias from eb_rdc_portfolio_dtls where portfoliono=c.portfoliono) as portfolioalias,a.exchange,a.assetname, b.units,a.currency,a.last,a.bid,a.ask,a.volume from eb_rdc_asset_master a,eb_rdc_asset_holdings b ,eb_rdc_portfolio_dtls c where b.custid='923' and b.assettype=2 and a.assetid = b.assetid and c.portfoliono=b.portfoliono
getEquitySellTable.Query=select (select portfolioalias from eb_rdc_portfolio_dtls where portfoliono=c.portfoliono) as portfolioalias,a.exchange,a.assetname, b.units,a.currency,b.assetval,a.last,a.bid,a.ask from eb_rdc_asset_master a,eb_rdc_asset_holdings b ,eb_rdc_portfolio_dtls c where b.custid=#custid:varchar# and b.assettype=2 and a.assetid = b.assetid and c.portfoliono=b.portfoliono
getEquitySellTable.TOColumnMap={portfolioalias=portfolioalias,exchange=exchange,assetname=assetname,units=units,currency=currency,assetval,last=last,bid=bid,ask=ask}
getEquitySellTable.OutputType=java.util.ArrayList


getSellCashCurrency.Query=select distinct acccurr from eb_ref_acc_master where accnum=#accnum:varchar#
getSellCashCurrency.TOColumnMap={acccurr=acccurr}
getSellCashCurrency.OutputType=com.tcs.ebw.trade.transferobject.EbRefAccMasterTO[] 


#updateEquityHoldings.Query=update eb_rdc_asset_holdings set blockedunits=#blockedunits:numeric# where custid=#custid:varchar# and assettype=(select a.codevalue from eb_rdc_domain_chk a where a.longname='Equity' and a.domainid='d_assetType')  and assetname=#asset:varchar# and assetid=(select b.assetid from eb_rdc_asset_master b where b.assetname=#asset:varchar#)
updateEquityHoldings.Query=update eb_rdc_asset_holdings set blockedunits=#blockedunits:numeric# where custid=#custid:varchar# and assettype=(select a.codevalue from eb_rdc_domain_chk a where a.longname='Equity' and a.domainid='d_assetType')  and assetname=#asset:varchar# and assetid=(select b.assetid from eb_rdc_asset_master b where b.assetname=#asset:varchar#) and portfoliono=(select e.portfoliono from eb_rdc_portfolio_dtls e where e.portfolioalias=#portfolio:varchar# and e.customerid=#custid:varchar#)
updateEquityHoldings.StmtType=Statement


setEquitySellOrder.Query=insert into eb_rdc_buysell_req (refid,reqid,assettype,type,accno,currency,portfoliono,assetno,assetname,amount,commission,totalamt,reqdate,status,createdby,createddate,modifiedby,modifieddate,deleteflag,versionnum,accamt,custid,amtunitflag,discqnty,orderprice,ordertype,triggerprice,delterms,orderterms,odrvaldate,fxrate) values(#refid:varchar#,#reqid:varchar#,(select b.codevalue from eb_rdc_domain_chk b where b.longname='Equity' and b.domainid='d_assetType'),(select c.codevalue from eb_rdc_domain_chk c where c.longname='Sell' and c.domainid='d_tradeType'),#accno:varchar#,#currency:varchar#,(select e.portfoliono from eb_rdc_portfolio_dtls e where e.portfolioalias=#portfolio:varchar# and e.customerid=#custid:varchar#),(select d.assetid from eb_rdc_asset_master d where d.assetname=#asset:varchar#),#assetname:varchar#,#amount:numeric#,#commission:numeric#,#totalamt:numeric# ,sysdate,(select e.codevalue from eb_rdc_domain_chk e where e.domainid='d_status' and e.longname='Pending'),#custid:varchar#,sysdate,#custid:varchar#,sysdate,'N',1,#accamt:numeric#,#custid:varchar#,(select f.codevalue from eb_rdc_domain_chk f where f.domainid='d_buysellreq' and f.longname='Unit'),#discqnty:numeric#,#orderprice:numeric#,#ordertype:varchar#,90,#delterms:varchar#,#orderterms:varchar#,#odrvaldate:date#,1)
setEquitySellOrder.StmtType=PreparedStatement



getPortfolioAliasCombo.Query=select distinct portfolioalias,portfolioalias from RETLOWNER.EB_RDC_PORTFOLIO_DTLS where customerid='923' AND deleteflag='N'AND reqstatus!=3 AND status=2
getPortfolioAliasCombo.TOColumnMap={portfolioalias=portfolioalias}
getPortfolioAliasCombo.OutputType=java.util.Vector
getPortfolioAliasCombo.IsSqlj=False

getAssetTypeCombo.Query=select distinct codevalue,label from RETLOWNER.EB_RDC_DOMAIN_CHK where domainid='d_assetType'
getAssetTypeCombo.TOColumnMap={codevalue=codevalue,label=label}
getAssetTypeCombo.OutputType=java.util.Vector
getAssetTypeCombo.IsSqlj=False
getAssetTypeCombo.StmtType=Statement

getTransactionTypeCombo.Query=select distinct codevalue,label from RETLOWNER.EB_RDC_DOMAIN_CHK where domainid='d_tradeType'
getTransactionTypeCombo.TOColumnMap={codevalue=codevalue,label=label}
getTransactionTypeCombo.OutputType=java.util.Vector
getTransactionTypeCombo.IsSqlj=False
getTransactionTypeCombo.StmtType=Statement


getPerformanceGraph.Query=select distinct label,label from RETLOWNER.EB_RDC_DOMAIN_CHK where domainid='d_pergraph'
getPerformanceGraph.TOColumnMap={label=label}
getPerformanceGraph.OutputType=java.util.Vector
getPerformanceGraph.IsSqlj=False

getAllocationGraph.Query=select distinct label,label from RETLOWNER.EB_RDC_DOMAIN_CHK where domainid='d_allocgraph'
getAllocationGraph.TOColumnMap={label=label}
getAllocationGraph.OutputType=java.util.Vector
getAllocationGraph.IsSqlj=False

getPortfolioData.Query=select sum(c.units*b.last)+sum(c.units*b.nav) as currentvalue,a.realisedpnl,a.unrealisedpnl,a.ytd,a.sixmonthper,a.sinceincep from RETLOWNER.EB_RDC_PORTFOLIO_DTLS a,RETLOWNER.EB_RDC_ASSET_MASTER b,RETLOWNER.EB_RDC_ASSET_HOLDINGS c where a.portfolioalias=#portfolioalias:varchar# AND a.customerid='923' AND a.customerid=c.custid AND b.assetid=c.assetid AND a.portfoliono=c.portfoliono group by a.realisedpnl,a.unrealisedpnl,a.ytd,a.sixmonthper,a.sinceincep
getPortfolioData.TOColumnMap={currentvalue=currentvalue,realisedpnl=realisedpnl,unrealisedpnl=unrealisedpnl,ytd=ytd,sixmonthper=sixmonthper,sinceincep=sinceincep}
getPortfolioData.OutputType=java.util.ArrayList
getPortfolioData.IsSqlj=False
getPortfolioData.StmtType=Statement

getEquityHolding.Query=select a.assetname,a.exchange,(b.units*a.last) as marketval,b.units,a.currency,a.last,a.bid,a.ask,a.daysper,'Sell'sell,'Buy'buy from RETLOWNER.EB_RDC_asset_master a,RETLOWNER.EB_RDC_asset_holdings b,RETLOWNER.EB_RDC_PORTFOLIO_DTLS c where c.portfolioalias=#portfolioalias:varchar# AND a.assettype=2 AND c.customerid=b.custid AND b.assetid=a.assetid AND c.portfoliono=b.portfoliono
getEquityHolding.TOColumnMap={assetname=assetname,exchange=exchange,marketval=marketval,units=units,currency=currency,last=last,bid=bid,ask=ask,daysper=daysper,sell=sell,buy=buy}
getEquityHolding.OutputType=java.util.ArrayList
getEquityHolding.IsSqlj=False
getEquityHolding.StmtType=Statement

getMFHoldings.Query=select a.assetname,d.label,b.units,a.currency,(b.units*a.nav) as marketvalue,a.nav,a.sincepur,'Sell'sell,'Buy'buy from RETLOWNER.eb_rdc_asset_master a,RETLOWNER.eb_rdc_asset_holdings b,RETLOWNER.eb_rdc_portfolio_dtls c,RETLOWNER.eb_rdc_domain_chk d where c.portfolioalias=#portfolioalias:varchar# AND a.assettype=1 AND d.domainid='d_assetClass' AND a.assetclass=d.codevalue AND c.customerid=b.custid AND b.assetid=a.assetid AND c.portfoliono=b.portfoliono
getMFHoldings.TOColumnMap={assetname=assetname,label=label,units=units,currency=currency,marketvalue=marketvalue,nav=nav,sincepur=sincepur,sell=sell,buy=buy}
getMFHoldings.OutputType=java.util.ArrayList
getMFHoldings.IsSqlj=False
getMFHoldings.StmtType=Statement

getOpeningDate.Query=select actopndt,portfoliono from RETLOWNER.EB_RDC_PORTFOLIO_DTLS where portfolioalias=#portfolioalias:varchar# AND customerid='923'
getOpeningDate.TOColumnMap={actopndt=actopndt,portfoliono=portfoliono}
getOpeningDate.OutputType=com.tcs.ebw.trade.transferobject.EbRdcPortfolioDtlsTO
getOpeningDate.IsSqlj=False
getOpeningDate.StmtType=Statement

getAssAccounts.Query=select distinct b.accountno from RETLOWNER.EB_RDC_PORTFOLIO_DTLS a,RETLOWNER.EB_RDC_PORTFOLIO_ACC b where b.portfoliono=(Select portfoliono from RETLOWNER.EB_RDC_PORTFOLIO_DTLS where portfolioalias=#portfolioalias:varchar# AND customerid='923') AND a.customerid='923' AND a.customerid=b.custid
getAssAccounts.TOColumnMap={ACCOUNTNO=ACCOUNTNO}
getAssAccounts.OutputType=java.util.ArrayList
getAssAccounts.IsSqlj=False
getAssAccounts.StmtType=Statement
7/3/2008
getUnAssAccounts.Query=select distinct c.accnum from RETLOWNER.EB_REF_ACC_MASTER c where c.custid='923' AND c.acctype!=3 AND c.accnum NOT IN (select distinct b.accountno from RETLOWNER.EB_RDC_PORTFOLIO_DTLS a,RETLOWNER.EB_RDC_PORTFOLIO_ACC b where b.portfoliono=(Select portfoliono from RETLOWNER.EB_RDC_PORTFOLIO_DTLS where portfolioalias=#portfolioalias:varchar# AND customerid='923') AND a.customerid='923' AND a.customerid=b.custid) 
getUnAssAccounts.TOColumnMap={ACCNUM=ACCNUM}
getUnAssAccounts.OutputType=java.util.ArrayList
getUnAssAccounts.IsSqlj=False
getUnAssAccounts.StmtType=Statement


getTransactionSearch.Query=select a.transactionid,a.transdate, b.assetname, (select label from RETLOWNER.EB_RDC_DOMAIN_CHK where codevalue=b.assettype AND domainid='d_assetType') as label, (select label from RETLOWNER.EB_RDC_DOMAIN_CHK where codevalue=b.type AND domainid='d_tradeType') as label1, b.actunit,b.currency,b.accno,b.status FROM retlowner.eb_rdc_trans_dtls a, RETLOWNER.EB_RDC_BUYSELL_REQ b where a.transactionid=b.refid and b.portfoliono=(select portfoliono from retlowner.eb_rdc_portfolio_dtls where portfolioalias=#portfolioalias:varchar# and customerid='923') and b.assettype like #equitytype:numeric# AND b.type like #transtype:numeric# and a.transdate BETWEEN (#fromdate:date#) AND (#todate:date#) AND b.assetname like #assetname:varchar#
getTransactionSearch.TOColumnMap={transactionid=transactionid,transdate=transdate,assetname=assetname,label=label,label1=label1,actunit=actunit,currency=currency,accno=accno,status=status}
getTransactionSearch.OutputType=java.util.ArrayList
getTransactionSearch.IsSqlj=False
getTransactionSearch.StmtType=PreparedStatement

getMutualFund.Query=select a.assetname,b.units,a.currency,a.nav,''numunits,c.portfolioalias,''getPFCombo from RETLOWNER.EB_RDC_ASSET_MASTER a,RETLOWNER.EB_RDC_ASSET_HOLDINGS b,RETLOWNER.EB_RDC_PORTFOLIO_DTLS c where c.customerid='923' and c.status=2 and c.reqstatus!=3 and a.assetid=b.assetid and b.portfoliono=c.portfoliono and a.assettype=#equitytype:numeric#
getMutualFund.TOColumnMap={ASSETNAME=ASSETNAME,UNITS=UNITS,CURRENCY=CURRENCY,NAV=NAV,NUMUNITS=NUMUNITS,PORTFOLIOALIAS=PORTFOLIOALIAS,GETPFCOMBO=GETPFCOMBO}
getMutualFund.OutputType=java.util.ArrayList
getMutualFund.IsSqlj=False

GETPFCOMBO.Query=select distinct portfolioalias,portfolioalias from RETLOWNER.EB_RDC_PORTFOLIO_DTLS where customerid='923' and reqstatus!=3 and status=2 and portfolioalias<>#portfolioalias:varchar#
GETPFCOMBO.TOColumnMap ={portfolioalias=portfolioalias,portfolioalias=portfolioalias}
GETPFCOMBO.OutputType=java.util.Vector
GETPFCOMBO.IsSqlj=False

getEquity.Query=select a.assetname,a.exchange,b.units,a.currency,a.last,''numunits,c.portfolioalias,''getPFCombo from RETLOWNER.EB_RDC_ASSET_MASTER a,RETLOWNER.EB_RDC_ASSET_HOLDINGS b,RETLOWNER.EB_RDC_PORTFOLIO_DTLS c where c.customerid='923' and c.status=2 and c.reqstatus!=3 and b.portfoliono=c.portfoliono AND a.assetid=b.assetid and a.assettype=#equitytype:numeric#
getEquity.TOColumnMap={ASSETNAME=ASSETNAME,EXCHANGE=EXCHANGE,UNITS=UNITS,CURRENCY=CURRENCY,LAST=LAST,NUMUNITS=NUMUNITS,PORTFOLIOALIAS=PORTFOLIOALIAS,GETPFCOMBO=GETPFCOMBO}
getEquity.OutputType=java.util.ArrayList
getEquity.IsSqlj=False


## Query for ModifyPortfolioService

updatePortfolioAlias.Query=Update RETLOWNER.EB_RDC_PORTFOLIO_DTLS set portfolioalias=#portfolioalias:varchar#,reqstatus=2,refid=#refid:varchar# where customerid='923' AND portfoliono=#portfoliono:numeric#
updatePortfolioAlias.StmtType=Statement

deletePortfolioAcc.Query=Delete from RETLOWNER.EB_RDC_PORTFOLIO_ACC where custid='923' AND portfoliono=(select portfoliono from RETLOWNER.EB_RDC_PORTFOLIO_DTLS where customerid='923' AND portfolioalias=#portfolioalias:varchar#) 
deletePortfolioAcc.StmtType=Statement

setPFAliasAcc.Query=Insert into RETLOWNER.EB_RDC_PORTFOLIO_ACC (refid,portfoliono,accountno,status,curverflag,createdby,createddate,modifiedby,modifieddate,versionnum,deleteflag,custid) values ((select refid from RETLOWNER.EB_RDC_PORTFOLIO_DTLS where customerid='923' AND portfolioalias=#portfolioalias:varchar#),(select portfoliono from RETLOWNER.EB_RDC_PORTFOLIO_DTLS where customerid='923' AND portfolioalias=#portfolioalias:varchar#),#accountno:varchar#,#status:numeric#,#curverflag:varchar#,'923',#createddate:date#,'923',#modifieddate:date#,#versionnum:numeric#,#deleteflag:varchar#,'923')
setPFAliasAcc.StmtType=PreparedStatement


# Query for ClosePortfolioService

getPFAliasCheck.Query=select assetid from RETLOWNER.EB_RDC_ASSET_HOLDINGS where custid='923' AND portfoliono=(select portfoliono from RETLOWNER.EB_RDC_PORTFOLIO_DTLS where portfolioalias=#portfolioalias:varchar# AND customerid='923')
getPFAliasCheck.TOColumnMap={assetid=assetid}
getPFAliasCheck.OutputType=com.tcs.ebw.trade.transferobject.EbRdcAssetHoldingsNDBTO
getPFAliasCheck.StmtType=Statement
getPFAliasCheck.IsSqlj=False

deletePortfolioAlias.Query=update RETLOWNER.EB_RDC_PORTFOLIO_DTLS set reqstatus=3,refid=#refid:varchar# where customerid='923' and portfolioalias=#portfolioalias:varchar#
deletePortfolioAlias.StmtType=Statement

setRequest.Query=Insert into RETLOWNER.EB_RDC_CANCEL_REQ (refid,reqid,status,createdby,createddate,modifiedby,modifieddate,deleteflag,versionno) values (#refid:varchar#,(select refid from RETLOWNER.EB_RDC_PORTFOLIO_DTLS where customerid='923' AND portfolioalias=#portfolioalias:varchar#),#status:numeric#,'923',sysdate,'923',sysdate,#deleteflag:varchar#,#versionno:numeric#)
setRequest.StmtType=PreparedStatement


# Query for TransferBetweenPortfolios:Mutual Fund

setMutualFund.Query=Insert into RETLOWNER.EB_RDC_REQ_MASTER(refid,assettype,reqtype,reqdate,status,createdby,createddate,modifiedby,modifieddate,versionnum,deleteflag,custid) values (#refid:varchar#,1,2,sysdate,1,'923',sysdate,'923',sysdate,#versionnum:numeric#,#deleteflag:varchar#,'923')
setMutualFund.StmtType=PreparedStatement

setTransferMF.Query=Insert into RETLOWNER.EB_RDC_TRANSFER_REQ(refid,reqid,assettype,mfeno,fromportfoliono,toportfoliono,units,amount,createdby,createddate,modifiedby,modifieddate,versionnum,deleteflag) values (#refid:varchar#,#reqid:varchar#,1,(select assetid from RETLOWNER.EB_RDC_ASSET_MASTER where assetname=#assetname:varchar#),(select portfoliono from RETLOWNER.EB_RDC_PORTFOLIO_DTLS where customerid='923' AND portfolioalias=#fromportfolioalias:varchar#),(select portfoliono from RETLOWNER.EB_RDC_PORTFOLIO_DTLS where customerid='923' AND portfolioalias=#toportfolionoalias:varchar#),#units:numeric#,#amount:numeric#,'923',sysdate,'923',sysdate,#versionnum:numeric#,#deleteflag:varchar#)
setTransferMF.StmtType=PreparedStatement

# Query for TransferBetweenPortfolios:Mutual Fund
 
setEquity.Query=Insert into RETLOWNER.EB_RDC_REQ_MASTER(refid,assettype,reqtype,reqdate,status,createdby,createddate,modifiedby,modifieddate,versionnum,deleteflag,custid) values (#refid:varchar#,2,2,sysdate,1,'923',sysdate,'923',sysdate,#versionnum:numeric#,#deleteflag:varchar#,'923')
setEquity.StmtType=PreparedStatement

setTransferEquity.Query=Insert into RETLOWNER.EB_RDC_TRANSFER_REQ(refid,reqid,assettype,mfeno,fromportfoliono,toportfoliono,units,amount,createdby,createddate,modifiedby,modifieddate,versionnum,deleteflag) values (#refid:varchar#,#reqid:varchar#,2,(select assetid from RETLOWNER.EB_RDC_ASSET_MASTER where assetname=#assetname:varchar#),(select portfoliono from RETLOWNER.EB_RDC_PORTFOLIO_DTLS where customerid='923' AND portfolioalias=#fromportfolioalias:varchar#),(select portfoliono from RETLOWNER.EB_RDC_PORTFOLIO_DTLS where customerid='923' AND portfolioalias=#toportfolionoalias:varchar#),#units:numeric#,#amount:numeric#,'923',sysdate,'923',sysdate,#versionnum:numeric#,#deleteflag:varchar#)
setTransferEquity.StmtType=PreparedStatement


###### Payments Queries#############

getPaymentTypeCode.Query=select dmndomainvaldesc,dmndomainval from ds_domains where dmndomain='D_PaymentTypeCode' and dmndomainval in ('ACH','BT','TT','WIRE')
getPaymentTypeCode.TOColumnMap={dmndomainvaldesc=dmndomainvaldesc,dmndomainval=dmndomainval}
getPaymentTypeCode.OutputType=java.util.Vector

getChargeOption.Query=select dmndomainvaldesc ,dmndomainvaldesc from ds_domains where dmndomain='D_ChargeOptions'
getChargeOption.TOColumnMap={dmndomainvaldesc=dmndomainvaldesc,dmndomainvaldesc=dmndomainvaldesc}
getChargeOption.OutputType=java.util.Vector

#getDebiAccount.Query=select distinct b.camaccnum,b.camcurrcode from ds_cust_acct_link a,ds_acc_master b ,ds_dap c where a.camcustid=#camcustid:numeric# and a.cmpapplsys='Payments' and a.camappsyscustid=b.camqlcustid and a.camaccnum=b.camaccnum and a.cmpgrpid=c.udpgrpid

#This is for DB Based 
#getDebiAccount.Query=select distinct b.camaccnum,(b.camaccbal || '~' || b.camcurrcode) as camaccbal from ds_cust_acct_link a,ds_acc_master b,ds_dap c where a.camcustid=#camcustid:numeric# and a.cmpapplsys='Payments' and a.camappsyscustid=b.camqlcustid and a.camaccnum=b.camaccnum and a.cmpgrpid=c.udpgrpid


#getDebiAccount.Query=select distinct udafieldvalue as camaccnum, udafieldvalue as camaccnum from ds_dap_acct_cd a where a.udagrpid='julygrp' and a.udafieldname='Acct Initiation' and a.udadapid='dadadap'

# THis query has to be changed for WebServices

#getDebiAccount.Query=select distinct udafieldvalue as camaccnum, (b.camaccbal || '~' || b.camcurrcode) as camaccbal from ds_dap_acct_cd a ,ds_acc_master b where a.udagrpid=#udagrpid:varchar# and a.udafieldname='Acct Initiation' and a.udadapid='dadadap' and a.udafieldvalue=b.camaccnum

getDebiAccount.Query=select distinct dua_accnum as camaccnum, dua_accnum as camaccnum from ds_dap_usracc a where  a.dua_userid=#dua_userid:varchar# and a.dua_grpid=#dua_grpid:varchar# and a.dua_custid=#dua_custid:varchar#

#getDebiAccount.Query=select distinct udafieldvalue as camaccnum, udafieldvalue as camaccnum from ds_dap_acct_cd a where a.udagrpid='HNItest' and a.udafieldname='Acct Initiation' and a.udadapid in ('dadadap','MSdap1')
getDebiAccount.TOColumnMap={camaccnum=camaccnum,camcurrcode=camcurrcode}
getDebiAccount.OutputType=java.util.Vector



#getPaymentCurrency.Query=select dmndomainval,dmndomainval from ds_domains where dmndomain='D_CurrCode'
getPaymentCurrency.Query=select distinct curcurrcode ,curcurrcode  from DS_CURR_REF where length(trim(curcurrcode))>0 or  curcurrcode<> null 
getPaymentCurrency.TOColumnMap={curcurrcode=curcurrcode,curcurrcode=curcurrcode}
getPaymentCurrency.OutputType=java.util.Vector


getPaymentCurrencyLocal.Query=select distinct b.camcurrcode,b.camcurrcode from ds_cust_acct_link a,ds_acc_master b where a.cmpapplsys='Payments' and a.camappsyscustid=b.camqlcustid and a.camaccnum=b.camaccnum and b.camaccnum=#camaccnum:varchar#
getPaymentCurrencyLocal.TOColumnMap={camcurrcode=camcurrcode,camcurrcode=camcurrcode}
getPaymentCurrencyLocal.OutputType=java.util.Vector

getBank.Query=select distinct bnkdes,bnkcode from ds_bank_ref
getBank.TOColumnMap={bnkdes=bnkdes,bnkcode=bnkcode}
getBank.OutputType=java.util.Vector


#getBranch.Query=select distinct a.cbrbrname,a.cbrbrname from ds_br_ref a,ds_bank_ref b where a.cbrbankcode=(select unique b.bnkcode from ds_bank_ref b where b.bnkdes=#bnkdes:varchar#) and a.cbrbankcode=b.bnkcode
getBranch.Query=select distinct a.cbrbrname,a.cbrbrname from ds_br_ref a,ds_bank_ref b where a.cbrbankcode=(select unique b.bnkcode from ds_bank_ref b where b.bnkdes=#bnkdes:varchar# and b.bnkcitycode=a.cbrcitycode and b.bnkcode=a.cbrbankcode) and a.cbrbankcode=b.bnkcode
getBranch.TOColumnMap={cbrbrname=cbrbrname,cbrbrname=cbrbrname}
getBranch.OutputType=java.util.Vector
getBranch.StmtType=Statement


getBranchCode.Query=select distinct a.cbrbrcode,a.cbrbrcode from ds_br_ref a where a.cbrbrname=#cbrbrname:varchar#
getBranchCode.TOColumnMap={cbrbrcode=cbrbrcode,cbrbrcode=cbrbrcode}
getBranchCode.OutputType=java.util.Vector
getBranchCode.StmtType=Statement


#setRemitterDetails.Query=insert into ds_payee_ref (cpypayeeid,cpygrpid,cpypayeename1,cpyadd1,cpyadd2,cpyadd3,cpybankcode,cpybranchcode,cpyaccnum,cpystatus) values(#cpypayeeid:varchar#,#cpygrpid:varchar#,#cpypayeename1:varchar#,#cpyadd1:varchar#,#cpyadd2:varchar#,#cpyadd3:varchar#,'229',#cpybranchcode:varchar#,#cpyaccnum:varchar#,3)

setRemitterDetails.Query=insert into ds_payee_ref (cpypayeeid,cpygrpid,cpypayeename1,cpyadd1,cpyadd2,cpyadd3,cpybankcode,cpybranchcode,cpyaccnum,cpystatus) values(#cpypayeeid:varchar#,#cpygrpid:varchar#,#cpypayeename1:varchar#,#cpyadd1:varchar#,#cpyadd2:varchar#,#cpyadd3:varchar#,'229',#cpybranchcode:varchar#,#cpyaccnum:varchar#,3)
setRemitterDetails.StmtType=PreparedStatement



#getViewBeneficiary.Query=select distinct a.cpypayeename1,a.cpyadd1,a.cpyadd2,a.cpyadd3,b.bnkdes,c.cbrbrname,a.cpybranchcode,a.cpyaccnum from ds_payee_ref a,ds_bank_ref b ,ds_br_ref c where a.cpypayeeid=#cpypayeeid:varchar# and b.bnkcode in (select a.cpybankcode from ds_payee_ref a where a.cpypayeeid=#cpypayeeid:varchar#) and c.cbrbrcode in (select a.cpybranchcode from ds_payee_ref a where a.cpypayeeid=#cpypayeeid:varchar#) and  a.cpybankcode=c.cbrbankcode and a.cpybranchcode=c.cbrbrcode and c.cbrbankcode=b.bnkcode
getViewBeneficiary.Query=select distinct a.cpypayeename1,a.cpyadd1,a.cpyadd2,a.cpyadd3,b.bnkdes,c.cbrbrname,a.cpybranchcode,a.cpyaccnum from ds_payee_ref a,ds_bank_ref b ,ds_br_ref c where a.cpypayeeid=#cpypayeeid:varchar# and b.bnkcode in (select a.cpybankcode from ds_payee_ref a where a.cpypayeeid=#cpypayeeid:varchar#) and c.cbrbrcode in (select a.cpybranchcode from ds_payee_ref a where a.cpypayeeid=#cpypayeeid:varchar#) 
getViewBeneficiary.TOColumnMap={cpypayeename1=cpypayeename1,cpyadd1=cpyadd1,cpyadd2=cpyadd2,cpyadd3=cpyadd3,bnkdes=bnkdes,cbrbrname=cbrbrname,cpybranchcode=cpybranchcode,cpyaccnum=cpyaccnum}
getViewBeneficiary.OutputType=com.tcs.ebw.payments.transferobject.DsPayeeRefNONDBTO[]
getViewBeneficiary.StmtType=Statement


getPaymentFrequency.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_Duration' order by sort_ord with ur
getPaymentFrequency.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getPaymentFrequency.OutputType=java.util.Vector


getAvailableBalance.Query=select camaccname,camaccnum,camaccbal from ds_acc_master where camaccnum=#camaccnum:varchar#
getAvailableBalance.TOColumnMap={camaccname=camaccname,camaccnum=camaccnum,camaccbal=camaccbal}
getAvailableBalance.OutputType=com.tcs.ebw.payments.transferobject.DsAccMasterTO[]
getAvailableBalance.StmtType=Statement

getServiceType.Query=select dmndomainvaldesc,dmndomainval from ds_domains where dmndomain='D_ServiceType' and dmndomainval <> 5
getServiceType.TOColumnMap={dmndomainvaldesc=dmndomainvaldesc,dmndomainval=dmndomainval}
getServiceType.OutputType=java.util.Vector

getSwiftServiceType.Query=select dmndomainvaldesc,dmndomainval from ds_domains where dmndomain='D_ServiceType' and dmndomainval =1
getSwiftServiceType.TOColumnMap={dmndomainvaldesc=dmndomainvaldesc,dmndomainval=dmndomainval}
getSwiftServiceType.OutputType=java.util.Vector


#setPayeeTransaction.Query=insert into ds_payee_ref (cpypayeeid,cpygrpid,cpypayeename1,cpybankcode,cpybranchcode,cpyaccnum) values (#cpypayeeid:varchar#,#cpygrpid:varchar#,#cpypayeename1:varchar#,#cpybankcode:varchar#,#cpybranchcode:varchar#,#cpyaccnum:varchar#)
#setPayeeTransaction.StmtType=PreparedStatement


## This is final Query
#setStatusTranscation.Query=insert into ds_pay_statuses (psttrxkey,pststatusdate,pstfileid,pststatuscode,pstdebitdate,pstnetamount,pstfxcontractno,pstfxdirectrate,pstcustomerfxrate,pstdebitcurr,pstdebitamount,pstpayeeamt) values (#psttrxkey:numeric#,sysdate,1,(select dmndomainval from ds_domains where dmndomain='D_StatusCode' and dmndomainvaldesc='Incomplete'),#pstdebitdate:date#,#pstnetamount:numeric#,#pstfxcontractno:varchar#,#pstfxdirectrate:mumeric#,#pstcustomerfxrate:numeric#,#pstdebitcurr:varchar#,#pstdebitamount:numeric#,#pstpayeeamt:numeric#)



## This is Query is for Sales Demo

#setStatusTranscation.Query=insert into ds_pay_statuses (psttrxkey,pststatusdate,pstfileid,pststatuscode,pstdebitdate,pstnetamount,pstfxcontractno,pstfxdirectrate,pstcustomerfxrate,pstdebitcurr,pstdebitamount,pstpayeeamt) values (#psttrxkey:numeric#,sysdate,1,(select dmndomainval from ds_domains where dmndomain='D_StatusCode' and dmndomainvaldesc='Incomplete'),#pstdebitdate:date#,#pstnetamount:numeric#,#pstfxcontractno:varchar#,#pstfxdirectrate:mumeric#,#pstcustomerfxrate:numeric#,#pstdebitcurr:varchar#,#pstdebitamount:numeric#,#pstpayeeamt:numeric#)

#setStatusTranscation.Query=insert into ds_pay_statuses (psttrxkey,pststatusdate,pstfileid,pststatuscode,pstdebitdate,pstnetamount,pstfxcontractno,pstfxdirectrate,pstcustomerfxrate,pstdebitcurr,pstdebitamount,pstpayeeamt,createdby) values (#psttrxkey:numeric#,sysdate,1,#pststatuscode:numeric#,#pstdebitdate:date#,#pstnetamount:numeric#,#pstfxcontractno:varchar#,#pstfxdirectrate:mumeric#,#pstcustomerfxrate:numeric#,#pstdebitcurr:varchar#,#pstdebitamount:numeric#,#pstpayeeamt:numeric#,#createdby:varchar#)



#getLocalPayeeDetailsLIST_page.Query=select cpypayeename1, bnkdes, cpyaccnum, cbrbrname, cbrbrcode, cpypayeeid, bnkcode from (select distinct a.cpypayeename1,b.bnkdes,a.cpyaccnum ,c.cbrbrname,c.cbrbrcode ,a.cpypayeeid,b.bnkcode from ds_payee_ref a,ds_bank_ref b,ds_br_ref c   where a.cpybankcode=b.bnkcode and c.cbrbrcode=a.cpybranchcode and b.bnkcode=c.cbrbankcode and upper(a.cpypayeename1)  like #cpypayeename1:varchar#  #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

#getLocalPayeeDetailsLIST_page.Query=select distinct cpypayeename1, bnkdes, cpyaccnum, cbrbrname, cbrbrcode, cpypayeeid, bnkcode from (select distinct a.cpypayeename1,b.bnkdes,a.cpyaccnum ,c.cbrbrname,c.cbrbrcode ,a.cpypayeeid,b.bnkcode from ds_payee_ref a,ds_bank_ref b,ds_br_ref c   where a.cpybankcode=b.bnkcode and a.cpystatus <> '2' and a.cpystatus <> '5' and  c.cbrbrcode=a.cpybranchcode and b.bnkcode=c.cbrbankcode and upper(a.cpypayeename1)  like #cpypayeename1:varchar#  #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

#getLocalPayeeDetailsLIST_page.Query=select distinct cpypayeename1, bnkdes, cpyaccnum, cbrbrname, cbrbrcode, cpypayeeid, bnkcode from (select distinct a.cpypayeename1,b.bnkdes,a.cpyaccnum ,c.cbrbrname,c.cbrbrcode ,a.cpypayeeid,b.bnkcode from ds_payee_ref a,ds_bank_ref b,ds_br_ref c   where a.cpybankcode=b.bnkcode and a.cpystatus <> '1' and a.cpystatus <> '5' and  c.cbrbrcode=a.cpybranchcode and b.bnkcode=c.cbrbankcode and upper(a.cpypayeename1)  like #cpypayeename1:varchar# and a.cpybenetype <> '2' and a.deleteflag='N' #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getLocalPayeeDetailsLIST_page.Query=select distinct cpypayeename1, bnkdes, cpyaccnum, cbrbrname, cbrbrcode, cpypayeeid, bnkcode from (select distinct a.cpypayeename1,b.bnkdes,a.cpyaccnum ,c.cbrbrname,c.cbrbrcode ,a.cpypayeeid,b.bnkcode from ds_payee_ref a,ds_bank_ref b,ds_br_ref c   where a.cpybankcode=b.bnkcode and a.cpystatus not in (1,2,3,5) and  c.cbrbrcode=a.cpybranchcode and b.bnkcode=c.cbrbankcode and cpypayeename1 like lower(#cpypayeename1:varchar#) and a.cpybenetype <> '2' and a.deleteflag='N' #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)


getLocalPayeeDetailsLIST_page.TOColumnMap={cpypayeename1=cpypayeename1,bnkdes=bnkdes,cpyaccnum=cpyaccnum,cbrbrname=cbrbrname,cbrbrcode=cbrbrcode,cpypayeeid=cpypayeeid,bnkcode=bnkcode}
getLocalPayeeDetailsLIST_page.OutputType=java.util.ArrayList
getLocalPayeeDetailsLIST.StmtType=Statement
getLocalPayeeDetailsLIST.PgnUniqueKeys=cpypayeeid:varchar:DESC
getLocalPayeeDetailsLIST.SortKeys=cpypayeename1:varchar:DESC



#getSwiftPayeeDetailsLIST_page.Query=select cpypayeename1, bnkdes, cpyaccnum, cpyinterbankswiftcode, cpypayeeid, bnkcode from (select distinct a.cpypayeename1,b.bnkdes,a.cpyaccnum,a.cpyinterbankswiftcode ,a.cpypayeeid ,b.bnkcode from ds_payee_ref a,ds_bank_ref b ,ds_pay_txns c,ds_br_ref d where a.cpybankcode=b.bnkcode and  b.bnkcode=d.cbrbankcode and a.cpypayeename1 like #cpypayeename1:varchar#  #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

#getSwiftPayeeDetailsLIST_page.Query=select distinct cpypayeename1, bnkdes, cpyaccnum, cpyinterbankswiftcode, cpypayeeid, bnkcode from (select distinct a.cpypayeename1,b.bnkdes,a.cpyaccnum,a.cpyinterbankswiftcode ,a.cpypayeeid ,b.bnkcode from ds_payee_ref a,ds_bank_ref b ,ds_pay_txns c,ds_br_ref d where a.cpybankcode=b.bnkcode and a.cpystatus <>'1' and a.cpystatus <> '5' and  b.bnkswiftcode=a.cpybankswiftcode and upper(a.cpypayeename1) like #cpypayeename1:varchar# and a.cpybenetype <> '1' and a.deleteflag='N' #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getSwiftPayeeDetailsLIST_page.Query=select distinct cpypayeename1, bnkdes, cpyaccnum, cpyinterbankswiftcode, cpypayeeid, bnkcode from (select distinct a.cpypayeename1,b.bnkdes,a.cpyaccnum,a.cpyinterbankswiftcode ,a.cpypayeeid ,b.bnkcode from ds_payee_ref a,ds_bank_ref b ,ds_pay_txns c,ds_br_ref d where a.cpybankcode=b.bnkcode and a.cpystatus not in (1,2,3,5) and  b.bnkswiftcode=a.cpybankswiftcode and cpypayeename1 like #cpypayeename1:varchar# and a.cpybenetype <> '1' and a.deleteflag='N' #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getSwiftPayeeDetailsLIST_page.TOColumnMap={cpypayeename1=cpypayeename1,bnkdes=bnkdes,cpyaccnum=cpyaccnum,cpyinterbankswiftcode=cpyinterbankswiftcode,cpypayeeid=cpypayeeid,bnkcode=bnkcode}
getSwiftPayeeDetailsLIST_page.OutputType=java.util.ArrayList
getSwiftPayeeDetailsLIST.StmtType=Statement
getSwiftPayeeDetailsLIST.PgnUniqueKeys=cpypayeeid:varchar:DESC
getSwiftPayeeDetailsLIST.SortKeys=cpypayeename1:varchar:DESC



getPaymentsBenficiaryDetailsLIST_page.Query=select paypayref, paypayeename1, bankname, paypayeeaccnum, paycurrcode, paydebitamt, status, remarks from (select distinct a.paypayref,a.paypayeename1,b.bnkdes as bankname,a.paypayeeaccnum,a.paycurrcode,a.paydebitamt,(select distinct c.dmndomainvaldesc from ds_domains c where dmndomainval=(select distinct payccsstatuscode from ds_pay_txns where paybatchref=#paybatchref:varchar#) and dmndomain='D_StatusCode' ) as status ,'' as remarks from ds_pay_txns a,ds_bank_ref b, ds_domains c where a.paybatchref=#paybatchref:varchar# and b.bnkcode=a.paypayeebankcode and a.payccsstatuscode=c.dmndomainval and b.bnkcode in (select paypayeebankcode from ds_pay_txns where paybatchref=#paybatchref:varchar#) #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)
getPaymentsBenficiaryDetailsLIST_page.TOColumnMap={paypayref=paypayref,paypayeename1=paypayeename1,bankname=bankname,paypayeeaccnum=paypayeeaccnum,paycurrcode=paycurrcode,paydebitamt=paydebitamt,status=status,remarks=remarks}
getPaymentsBenficiaryDetailsLIST_page.OutputType=java.util.ArrayList
getPaymentsBenficiaryDetailsLIST.PgnUniqueKeys=paypayref:varchar:DESC
getPaymentsBenficiaryDetailsLIST.SortKeys=paypayref:varchar:DESC



#getInterAccDetailsLIST_page.Query=select paypayref, paydebitaccnum, paydebitamt, status, remarks from (select distinct a.paypayref,a.paydebitaccnum,a.paydebitamt,(select distinct c.dmndomainvaldesc from ds_domains c where dmndomainval=(select distinct payccsstatuscode from ds_pay_txns where paybatchref=#paybatchref:varchar#) and dmndomain='D_StatusCode' ) as status ,'' as remarks from ds_pay_txns a, ds_domains c where a.paybatchref=#paybatchref:varchar# and  a.payccsstatuscode=c.dmndomainval #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

#getInterAccDetailsLIST_page.TOColumnMap={paypayref=paypayref,paydebitaccnum=paydebitaccnum,paydebitamt=paydebitamt,status=status,remarks=remarks}
#getInterAccDetailsLIST_page.OutputType=java.util.ArrayList
#getInterAccDetailsLIST.PgnUniqueKeys=paypayref:varchar:DESC
#getInterAccDetailsLIST.SortKeys=status:varchar:DESC


getInterAccDetailsLIST_page.Query=select paypayref, paypayeename1, bankname, paypayeeaccnum, paydebitamt, status, remarks from (select distinct a.paypayref,a.paypayeename1,b.bnkdes as bankname,a.paypayeeaccnum,a.paydebitamt,(select distinct c.dmndomainvaldesc from ds_domains c where dmndomainval=(select distinct payccsstatuscode from ds_pay_txns where paybatchref=#paybatchref:varchar#) and dmndomain='D_StatusCode' ) as status ,'' as remarks from ds_pay_txns a,ds_bank_ref b, ds_domains c where a.paybatchref=#paybatchref:varchar# and b.bnkcode=a.paypayeebankcode and a.payccsstatuscode=c.dmndomainval and b.bnkcode in (select paypayeebankcode from ds_pay_txns where paybatchref=#paybatchref:varchar#) #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getInterAccDetailsLIST_page.TOColumnMap={paypayref=paypayref,paypayeename1=paypayeename1,bankname=bankname,paypayeeaccnum=paypayeeaccnum,paydebitamt=paydebitamt,status=status,remarks=remarks}
getInterAccDetailsLIST_page.OutputType=java.util.ArrayList
getInterAccDetailsLIST.PgnUniqueKeys=paypayref:varchar:DESC
getInterAccDetailsLIST.SortKeys=paypayref:varchar:DESC



getPayeeAccNum.Query=select paypayeeaccnum ,paycurrcode ,paydebitamt from ds_pay_txns where paybatchref=#paybatchref:varchar#
getPayeeAccNum.TOColumnMap={paypayeeaccnum=paypayeeaccnum,paycurrcode=paycurrcode,paydebitamt=paydebitamt}
getPayeeAccNum.OutputType=com.tcs.ebw.payments.transferobject.DsPayTxnsTO[]



getPaymentsBenficiarySwiftDetailsLIST_page.Query=select paypayref, paypayeename1, bankname, paypayeeaccnum, paydebitamt, dealerrate, status, remarks,paypymtdate from (select distinct a.paypayref,a.paypayeename1,b.bnkdes as bankname,a.paypayeeaccnum,a.paydebitamt,a.payfxrate as dealerrate,(select distinct c.dmndomainvaldesc from ds_domains c where dmndomainval IN (select distinct payccsstatuscode from ds_pay_txns where paybatchref=#paybatchref:varchar#) and dmndomain='D_StatusCode' ) as status ,'' as remarks, a.paypymtdate from ds_pay_txns a,ds_bank_ref b, ds_domains c where a.paybatchref=#paybatchref:varchar# and b.bnkcode=a.paypayeebankcode and a.payccsstatuscode=c.dmndomainval and b.bnkcode in (select paypayeebankcode from ds_pay_txns where paybatchref=#paybatchref:varchar#) #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getPaymentsBenficiarySwiftDetailsLIST_page.TOColumnMap={paypayref=paypayref,paypayeename1=paypayeename1,bankname=bankname,paypayeeaccnum=paypayeeaccnum,paydebitamt=paydebitamt,dealerrate=dealerrate,status=status,remarks=remarks,paypymtdate=paypymtdate}
getPaymentsBenficiarySwiftDetailsLIST_page.OutputType=java.util.ArrayList
getPaymentsBenficiarySwiftDetailsLIST.PgnUniqueKeys=paypayref:varchar:DESC
getPaymentsBenficiarySwiftDetailsLIST.SortKeys=paypayref:varchar:DESC



updateBatch.Query=update ds_batch set batstatus='6' where batbatchref=#batbatchref:varchar#
updateBatch.StmtType=Statement

#updatePayTxns.Query=update ds_pay_txns set payccsstatuscode=6 where paybatchref=#paybatchref:varchar# and paypayref=#paypayref:varchar#

updatePayTxns.Query=update ds_pay_txns set payccsstatuscode='6',paypymtdate=#paypymtdate:date#,paydebitaccnum=#paydebitaccnum:varchar# where paybatchref=#paybatchref:varchar#
updatePayTxns.StmtType=Statement

updateTxnsDetails.Query=update ds_pay_txns set paydebitamt=#paydebitamt:numeric# ,paypayeename1 =#paypayeename1:varchar# where  paybatchref=#paybatchref:varchar# and paypayref=#paypayref:varchar#
updateTxnsDetails.StmtType=Statement

getBeneficiaryName.Query=select paypayeename1,paypayeename1 from ds_pay_txns where paybatchref=#paybatchref:varchar#
getBeneficiaryName.TOColumnMap={paypayeename1=paypayeename1,paypayeename1=paypayeename1}
getBeneficiaryName.OutputType=java.util.Vector

#Swift Payments

setSwiftBeneficiary.Query=Insert into Ds_Payee_Ref(cpygrpid,cpypayeeid,cpypayeename1,cpypayeerefno,cpyadd1,cpyadd2,cpyadd3,cpyaccnum,cpybankcode,cpybankswiftcode,cpyinterbankswiftcode,cpyintermediarybankcode,cpyinterbankaccnum,cpypaymentscount,cpythresholdamt,createdby,createddate,modifiedby,modifieddate,deleteflag,versionnum,cpystatus,cpybenetype,cpysortcode) values (#cpygrpid:varchar#,#cpypayeeid:varchar#,lower(#cpypayeename1:varchar#),#cpypayeerefno:varchar#,#cpyadd1:varchar#,#cpyadd2:varchar#,#cpyadd3:varchar#,#cpyaccnum:varchar#,#cpybankcode:varchar#,#cpybankswiftcode:varchar#,#cpyinterbankswiftcode:varchar#,#cpyintermediarybankcode:varchar#,#cpyinterbankaccnum:varchar#,#cpypaymentscount:numeric#,#cpythresholdamt:numeric#,#createdby:varchar#,sysdate,#modifiedby:varchar#,sysdate,#deleteflag:varchar#,#versionnum:numeric#,1,2,#cpysortcode:numeric#)
setSwiftBeneficiary.StmtType=Statement


getSwiftCodeData.Query=select distinct (a.bnkswiftcode  || '~' || a.bnkaddress1 || '~' ||a.bnkaddress2 || '~' || a.bnkaddress3 || '~' || a.bnkcode || '~' || a.bnkdes ) as bnkcode,a.bnkdes from DS_BANK_REF a,DS_PAYEE_REF b where a.deleteflag='N' order by 1
getSwiftCodeData.TOColumnMap={bnkcode=bnkcode,bnkdes=bnkdes,cpybankswiftcode=cpybankswiftcode}
getSwiftCodeData.OutputType=java.util.Vector



setswiftpayTransaction.Query=insert into ds_pay_txns (payccsstatuscode,paytrxkey,paygroupid,paybatchref,paypayref,paytypecode,paydebitaccnum,paycurrcode,paydebitamt,paypymtdate,paypayeeaccnum,paypayeename1,paypayeebankcode,payfxtypecode,payfxrate,payfxcustomerfxrate,paypayeeid,payconsolidate,payrecurring,createdby,payfreqpaymentcount,payfreqenddate,payfrequency) values (#payccsstatuscode:varchar#,#paytrxkey:numeric#,#paygroupid:varchar#,#paybatchref:varchar#,#paypayref:varchar#,'TT',#paydebitaccnum:varchar#,#paycurrcode:varchar#,#paydebitamt:numeric#,#paypymtdate:date#,#paypayeeaccnum:varchar#,#paypayeename1:varchar#,#paypayeebankcode:varchar#,#payfxtypecode:varchar#,#payfxrate:numeric#,#payfxcustomerfxrate:numeric#,#paypayeeid:varchar#,#payconsolidate:varchar#,#payrecurring:varchar#,#createdby:varchar#,#payfreqpaymentcount:numeric#,#payfreqenddate:date#,#payfrequency:varchar#)

setswiftpayTransaction.StmtType=PreparedStatement

#getSwiftBeneficairyDetails.Query=select a.paypayeeaccnum,a.paypayeename1,a.paydebitamt,b.bnkdes as bank,(select UNIQUE cpybankswiftcode from ds_payee_ref where cpypayeeid=(select paypayeeid from ds_pay_txns where paypayref like #paypayref:varchar#)) as swiftcode  from ds_pay_txns a ,ds_bank_ref b ,ds_br_ref c  where a.paypayref like #paypayref:varchar# and b.bnkcode in (select a.paypayeebankcode from ds_pay_txns a where a.paypayref like #paypayref:varchar#)   and  a.paypayeebankcode=c.cbrbankcode and a.paypayeebranchcode=c.cbrbrcode and c.cbrbankcode=b.bnkcode


getSwiftBeneficairyDetails.Query=select distinct a.paypayeeaccnum,a.paypayeename1,a.paydebitamt,b.bnkdes as bank,(select UNIQUE cpybankswiftcode from ds_payee_ref where cpypayeeid=(select paypayeeid from ds_pay_txns where paypayref like #paypayref:varchar#)) as swiftcode  from ds_pay_txns a ,ds_bank_ref b ,ds_br_ref c  where a.paypayref like #paypayref:varchar# and b.bnkcode in (select a.paypayeebankcode from ds_pay_txns a where a.paypayref like #paypayref:varchar#)   and  a.paypayeebankcode=c.cbrbankcode and c.cbrbankcode=b.bnkcode

getSwiftBeneficairyDetails.TOColumnMap={paypayeeaccnum=paypayeeaccnum,paypayeename1=paypayeename1,paydebitamt=paydebitamt,bank=bank,swiftcode=swiftcode}
getSwiftBeneficairyDetails.OutputType=com.tcs.ebw.payments.transferobject.DsPayTxnsNONDBTO[]

## Send Back Payments Query

updateSentBackBatchStatus.Query=update ds_batch set batstatus=48 where batbatchref=#batbatchref:varchar# and deleteflag='N'
updateSentBackBatchStatus.StmtType=Statement

updateSentBackStatus.Query=update ds_pay_txns set payccsstatuscode=48 where paybatchref=#paybatchref:varchar# and deleteflag='N'
updateSentBackStatus.StmtType=Statement

## Reject Payments Query

updateRejectBatchStatus.Query=update ds_batch set batstatus=44 where batbatchref=#batbatchref:varchar# and deleteflag='N'
updateRejectBatchStatus.StmtType=Statement

updateRejectStatus.Query=update ds_pay_txns set payccsstatuscode=44 where paybatchref=#paybatchref:varchar# and deleteflag='N'
updateRejectStatus.StmtType=Statement


## Delete Query

deletePaymentsBatch.Query=update ds_batch set deleteflag='Y' where batbatchref=#batbatchref:varchar#
deletePaymentsBatch.StmtType=Statement

deletePaymentsTransaction.Query=update ds_pay_txns  set deleteflag='Y' where paybatchref=#paybatchref:varchar#
deletePaymentsTransaction.StmtType=Statement

deletePaymentsTxns.Query=update ds_pay_txns set deleteflag='Y' where paybatchref=#paybatchref:varchar# and paypayref=#paypayref:varchar#
deletePaymentsTxns.StmtType=Statement
------------------------------------


#Direct Debit Queries

#getViewDebitRemitter.Query=select distinct a.dremittername1,a.dradd1,a.dradd2,a.dradd3,b.bnkdes,c.cbrbrname,a.drbranchcode,a.draccnum,a.drmandaterefno from ds_remitter a,ds_bank_ref b ,ds_br_ref c where a.dremitterid=(select dremitterid from ds_remitter where dremittername1=#dremittername1:varchar#)  and b.bnkcode=(select a.drbankcode from ds_remitter a where a.dremitterid=(select dremitterid from ds_remitter  where dremittername1=#dremittername1:varchar#)) and c.cbrbrcode=(select a.drbranchcode from ds_remitter a where a.dremitterid=(select dremitterid from ds_remitter  where dremittername1=#dremittername1:varchar#)) and c.cbrbankcode=a.drbankcode
#getViewDebitRemitter.Query=select distinct a.dremittername1,a.dradd1,a.dradd2,a.dradd3,b.bnkdes,c.cbrbrname,a.drbranchcode,a.draccnum,a.drmandaterefno from ds_remitter a,ds_bank_ref b ,ds_br_ref c where a.dremitterid in (select dremitterid from ds_remitter where dremittername1=#dremittername1:varchar#)  and b.bnkcode in (select a.drbankcode from ds_remitter a where a.dremitterid in (select dremitterid from ds_remitter  where dremittername1=#dremittername1:varchar#)) and c.cbrbrcode in (select a.drbranchcode from ds_remitter a where a.dremitterid=(select dremitterid from ds_remitter  where dremittername1=#dremittername1:varchar#))

getViewDebitRemitter.Query=select distinct a.dremittername1,a.dradd1,a.dradd2,a.dradd3,b.bnkdes,c.cbrbrname,a.drbranchcode,a.draccnum,a.drmandaterefno from ds_remitter a,ds_bank_ref b ,ds_br_ref c where a.dremitterid in (select dremitterid from ds_remitter where dremittername1=#dremittername1:varchar#)  and b.bnkcode in (select distinct a.drbankcode from ds_remitter a where a.dremitterid in (select dremitterid from ds_remitter  where dremittername1=#dremittername1:varchar#)) and c.cbrbrcode in (select distinct a.drbranchcode from ds_remitter a where a.dremitterid in (select dremitterid from ds_remitter  where dremittername1=#dremittername1:varchar#)) and a.drbankcode=c.cbrbankcode and a.drbranchcode=c.cbrbrcode and c .cbrbankcode=b.bnkcode
getViewDebitRemitter.TOColumnMap={dremittername1=dremittername1,dradd1=dradd1,dradd2=dradd2,dradd3=dradd3,bnkdes=bnkdes,cbrbrname=cbrbrname,drbranchcode=drbranchcode,draccnum=draccnum,drmandaterefno=drmandaterefno}
getViewDebitRemitter.OutputType=com.tcs.ebw.payments.transferobject.DsRemitterNONDBTO[]
getViewDebitRemitter.StmtType=Statement


#getDebitRemitterDetails.Query=select distinct a.cpypayeename1,b.bnkdes,a.cpybranchcode,c.cbrbrname,a.cpyaccnum from ds_payee_ref a,ds_bank_ref b ,ds_br_ref c where a.cpypayeename1=(select distinct c.paypayeename1 from ds_pay_txns c where c.paydebitaccnum=#paydebitaccnum:varchar#) and b.bnkcode=(select unique a.cpybankcode from ds_payee_ref a where a.cpypayeename1=(select c.paypayeename1 from ds_pay_txns c  where c.paydebitaccnum=#paydebitaccnum:varchar#))
#getDebitRemitterDetails.Query=select distinct a.cpypayeename1,b.bnkdes,a.cpyaccnum,'' as mandaterefno,a.cpybranchcode,c.cbrbrname from ds_payee_ref a,ds_bank_ref b ,ds_br_ref c where a.cpypayeename1=(select distinct c.paypayeename1 from ds_pay_txns c where c.paydebitaccnum=#paydebitaccnum:varchar#) and b.bnkcode=(select unique a.cpybankcode from ds_payee_ref a where a.cpypayeename1=(select c.paypayeename1 from ds_pay_txns c  where c.paydebitaccnum=#paydebitaccnum:varchar#)) and c.cbrbrcode=(select unique a.cpybranchcode from ds_payee_ref a where a.cpypayeename1=(select c.paypayeename1 from ds_pay_txns c  where c.paydebitaccnum=#paydebitaccnum:varchar#))
#getDebitRemitterDetails.TOColumnMap={cpypayeename1=cpypayeename1,bnkdes=bnkdes,cpyaccnum=cpyaccnum,mandaterefno=mandaterefno,cpybranchcode=cpybranchcode,cbrbrname=cbrbrname}
#getDebitRemitterDetails.OutputType=java.util.ArrayList
#getDebitRemitterDetails.StmtType=Statement

# this is Before 20 Jan 2009

#getCompleteDebitsLIST_page.Query=select dihbatchnbr, fileref, dihdbttype, dihcreditacc, dihbatchdt, status from (select distinct a.dihbatchnbr,'' as fileref ,a.dihdbttype,a.dihcreditacc,a.dihbatchdt,(select b.dmndomainvaldesc from ds_domains b WHERE b.dmndomainval='I' AND b.dmndomain='D_DDIStatus')  as status from DS_TI_DDT_HDR a,DS_DOMAINS b where a.dihcustid=#dihcustid:numeric# and a.dihstatus=b.dmndomainval and a.dihstatus='I' and deleteflag='N' #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

#getCompleteDebitsLIST_page.TOColumnMap={dihbatchnbr=dihbatchnbr,fileref=fileref,dihdbttype=dihdbttype,dihcreditacc=dihcreditacc,dihbatchdt=dihbatchdt,status=status}
#getCompleteDebitsLIST_page.OutputType=java.util.ArrayList
#getCompleteDebitsLIST.StmtType=Statement
#getCompleteDebitsLIST.PgnUniqueKeys=dihbatchnbr:varchar:DESC
#getCompleteDebitsLIST.SortKeys=dihbatchnbr:varchar:DESC

getCompleteDebitsLIST_page.Query=select dihbatchnbr, fileref, dihdbttype, dihcreditacc, dihbatchdt, status from (select distinct a.dihbatchnbr,'' as fileref ,a.dihdbttype,a.dihcreditacc,a.dihbatchdt,(select b.dmndomainvaldesc from ds_domains b WHERE b.dmndomain='D_DDIEditStatus' and b.dmndomainval=didintstatus)  as status from DS_TI_DDT_HDR a,DS_DOMAINS b, DS_TI_DDT_DET c where a.dihcustid=#dihcustid:numeric# and   c.didintstatus in ('I','S') and a.dihstatus=c.didintstatus and a.deleteflag='N' and c.deleteflag='N' #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getCompleteDebitsLIST_page.TOColumnMap={dihbatchnbr=dihbatchnbr,fileref=fileref,dihdbttype=dihdbttype,dihcreditacc=dihcreditacc,dihbatchdt=dihbatchdt,status=status}
getCompleteDebitsLIST_page.OutputType=java.util.ArrayList
getCompleteDebitsLIST.StmtType=Statement
getCompleteDebitsLIST.PgnUniqueKeys=dihbatchnbr:varchar:DESC
getCompleteDebitsLIST.SortKeys=dihbatchnbr:varchar:DESC


## Direct Debit Approve Reject Query


getApproveRejectDebitsLIST_page.Query=select reject, dihbatchnbr, dihcreditacc, didinstramt, dihcurr, dihbatchdt, dihaccpdate, didref, invoiceref, mandref, bnkremarks, remarks from (select distinct '' as reject, a.dihbatchnbr,a.dihcreditacc,c.didinstramt,a.dihcurr,a.dihbatchdt,'' as dihaccpdate , c.didref,'' as invoiceref, '' as mandref, '' as bnkremarks ,'' as remarks from DS_TI_DDT_HDR a,DS_DOMAINS b, DS_TI_DDT_DET c where a.dihcustid=#dihcustid:numeric# and a.dihstatus=b.dmndomainval and a.dihstatus='I' and  a.deleteflag='N' and c.deleteflag='N' and a.dihbatchnbr=c.didbatchnbr and a.dihstatus=c.didintstatus #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getApproveRejectDebitsLIST_page.TOColumnMap={reject=reject,dihbatchnbr=dihbatchnbr,dihcreditacc=dihcreditacc,didinstramt=didinstramt,dihcurr=dihcurr,dihbatchdt=dihbatchdt,dihaccpdate=dihaccpdate,didref=didref,invoiceref=invoiceref,mandref=mandref,bnkremarks=bnkremarks,remarks=remarks}
getApproveRejectDebitsLIST_page.OutputType=java.util.ArrayList
getApproveRejectDebitsLIST.StmtType=Statement
getApproveRejectDebitsLIST.PgnUniqueKeys=mandref:varchar:DESC
getApproveRejectDebitsLIST.SortKeys=invoiceref:varchar:DESC



## Direct Debit Authorize list Query

getAuthoriseDebitsLIST_page.Query=select dihbatchnbr, fileref, dihdbttype, dihcreditacc, dihbatchdt, status from (select distinct a.dihbatchnbr,'' as fileref ,a.dihdbttype,a.dihcreditacc,a.dihbatchdt,(select b.dmndomainvaldesc from ds_domains b WHERE b.dmndomainval='C' AND b.dmndomain='D_DDIStatus')  as status from DS_TI_DDT_HDR a,DS_DOMAINS b where a.dihcustid=#dihcustid:numeric# and a.dihstatus=b.dmndomainval and a.dihstatus='C' and deleteflag='N'  #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getAuthoriseDebitsLIST_page.TOColumnMap={dihbatchnbr=dihbatchnbr,fileref=fileref,dihdbttype=dihdbttype,dihcreditacc=dihcreditacc,dihbatchdt=dihbatchdt,status=status}
getAuthoriseDebitsLIST_page.OutputType=java.util.ArrayList
getAuthoriseDebitsLIST.StmtType=Statement
getAuthoriseDebitsLIST.PgnUniqueKeys=dihcreditacc:varchar:DESC
getAuthoriseDebitsLIST.SortKeys=status:varchar:DESC



#getCompleteDebitSearchLIST_page.Query=select dihbatchnbr, fileref, dihdbttype, dihcreditacc, dihbatchdt, status from (select distinct a.dihbatchnbr,'' as fileref ,a.dihdbttype,a.dihcreditacc,a.dihbatchdt,(select b.dmndomainvaldesc from ds_domains b WHERE b.dmndomainval=#dmndomainval:varchar# AND b.dmndomain='D_DDIEditStatus')  as status from DS_TI_DDT_HDR a,DS_DOMAINS b ,ds_ti_ddt_det c where a.dihcustid =#dihcustid:numeric#  and a.dihstatus=b.dmndomainval and a.dihcreditacc like #dihcreditacc:varchar# and c.didcustname like #didcustname:varchar# and b.dmndomainval like #dmndomainval:varchar# and a.dihstatus like #dihstatus:varchar#  and a.dihstatus=c.didintstatus and a.dihbatchdt BETWEEN (#fromdate:date#) AND (#todate:date#) and a.dihbatchnbr=c.didbatchnbr  and a.deleteflag='N' #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

#getCompleteDebitSearchLIST_page.Query=select dihbatchnbr, fileref, dihdbttype, dihcreditacc, dihbatchdt, status from (select distinct a.dihbatchnbr,'' as fileref ,a.dihdbttype,a.dihcreditacc,a.dihbatchdt,(select b.dmndomainvaldesc from ds_domains b WHERE b.dmndomainval='I' AND b.dmndomain='D_DDIEditStatus')  as status from DS_TI_DDT_HDR a,DS_DOMAINS b ,ds_ti_ddt_det c where a.dihcustid =#dihcustid:numeric#  and a.dihstatus=b.dmndomainval and a.dihcreditacc like #dihcreditacc:varchar# and c.didcustname like #didcustname:varchar# and b.dmndomainval like #dmndomainval:varchar# and a.dihstatus like #dihstatus:varchar#  and a.dihstatus='I' and a.dihbatchdt BETWEEN (#fromdate:date#) AND (#todate:date#) and a.dihbatchnbr=c.didbatchnbr  and a.deleteflag='N' #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

#getCompleteDebitSearchLIST_page.TOColumnMap={dihbatchnbr=dihbatchnbr,fileref=fileref,dihdbttype=dihdbttype,dihcreditacc=dihcreditacc,dihbatchdt=dihbatchdt,status=status}
#getCompleteDebitSearchLIST_page.OutputType=java.util.ArrayList
#getCompleteDebitSearchLIST.StmtType=Statement
#getCompleteDebitSearchLIST.PgnUniqueKeys=dihcreditacc:varchar:DESC
#getCompleteDebitSearchLIST.SortKeys=status:varchar:DESC

getCompleteDebitSearchLIST_page.Query=select dihbatchnbr, fileref, dihdbttype, dihcreditacc, dihbatchdt, status from (select distinct a.dihbatchnbr,'' as fileref ,a.dihdbttype,a.dihcreditacc,a.dihbatchdt,(select b.dmndomainvaldesc from ds_domains b WHERE b.dmndomain='D_DDIEditStatus' AND b.dmndomainval=didintstatus)  as status from DS_TI_DDT_HDR a,DS_DOMAINS b ,ds_ti_ddt_det c where a.dihcustid =#dihcustid:numeric#  and a.dihstatus=b.dmndomainval and a.dihcreditacc like #dihcreditacc:varchar# and c.didcustname like #didcustname:varchar# and c.didintstatus in ('I','S') and a.dihstatus=c.didintstatus and a.dihbatchdt BETWEEN (#fromdate:date#) AND (#todate:date#) and a.dihbatchnbr=c.didbatchnbr  and a.deleteflag='N' #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getCompleteDebitSearchLIST_page.TOColumnMap={dihbatchnbr=dihbatchnbr,fileref=fileref,dihdbttype=dihdbttype,dihcreditacc=dihcreditacc,dihbatchdt=dihbatchdt,status=status}
getCompleteDebitSearchLIST_page.OutputType=java.util.ArrayList
getCompleteDebitSearchLIST.StmtType=Statement
getCompleteDebitSearchLIST.PgnUniqueKeys=dihbatchnbr:varchar:DESC
getCompleteDebitSearchLIST.SortKeys=dihbatchnbr:varchar:DESC



getAuthoriseDebitSearchLIST_page.Query=select dihbatchnbr, fileref, dihdbttype, dihcreditacc, dihbatchdt, status from (select distinct a.dihbatchnbr,'' as fileref ,a.dihdbttype,a.dihcreditacc,a.dihbatchdt,(select b.dmndomainvaldesc from ds_domains b WHERE b.dmndomainval='C' AND b.dmndomain='D_DDIStatus')  as status from DS_TI_DDT_HDR a,DS_DOMAINS b ,ds_ti_ddt_det c where a.dihcustid =#dihcustid:numeric#  and a.dihbatchnbr like #dihbatchnbr:varchar# and a.dihcreditacc like #dihcreditacc:varchar# and c.didcustname like #didcustname:varchar# and a.dihstatus='C' and a.dihstatus=c.didintstatus and a.dihbatchdt BETWEEN (#fromdate:date#) AND (#todate:date#) and a.dihbatchnbr=c.didbatchnbr  and a.deleteflag='N' and c.deleteflag='N'  and  b.dmndomainvaldesc like '%' #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getAuthoriseDebitSearchLIST_page.TOColumnMap={dihbatchnbr=dihbatchnbr,fileref=fileref,dihdbttype=dihdbttype,dihcreditacc=dihcreditacc,dihbatchdt=dihbatchdt,status=status}
getAuthoriseDebitSearchLIST_page.OutputType=java.util.ArrayList
getAuthoriseDebitSearchLIST.StmtType=Statement
getAuthoriseDebitSearchLIST.PgnUniqueKeys=dihcreditacc:varchar:DESC
getAuthoriseDebitSearchLIST.SortKeys=status:varchar:DESC



getInternalRefType.Query=select dmndomainvaldesc,dmndomainvaldesc from ds_domains where dmndomain='D_ServiceType' and dmndomainval=5
getInternalRefType.TOColumnMap={dmndomainvaldesc=dmndomainvaldesc,dmndomainvaldesc=dmndomainvaldesc}
getInternalRefType.OutputType=java.util.Vector


getDirectDebiAccount.Query=select distinct b.camaccnum,b.camcurrcode from ds_cust_acct_link a,ds_acc_master b where a.camcustid=#camcustid:numeric# and a.cmpapplsys='Payments' and a.camappsyscustid=b.camqlcustid and a.camaccnum=b.camaccnum
#getDirectDebiAccount.Query=select camaccnum,camcurrcode from ds_acc_master where camqlcustid=#camqlcustid:numeric#
getDirectDebiAccount.TOColumnMap={camaccnum=camaccnum,camcurrcode=camcurrcode}
getDirectDebiAccount.OutputType=java.util.Vector

getDDEditStatus.Query=select distinct dmndomainval,dmndomainvaldesc from DS_DOMAINS where dmndomain='D_DDIEditStatus'
getDDEditStatus.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getDDEditStatus.OutputType=java.util.Vector


getRemitterDetails.Query=select didcustname,didcustacc,b.bnkdes from DS_TI_DDT_DET
getRemitterDetails.TOColumnMap={didcustname=didcustname,didcustacc=didcustacc,didachbank=didachbank}
getRemitterDetails.OutputType=java.util.ArrayList

## Direct Debit Insertion 

#setDirectDebitBatch.Query=insert into ds_ti_ddt_hdr (dihbatchnbr,dihbatchdt,dihcreditacc,dihstatus,dihcustid,dihgrpid,dihdbttype,deleteflag,dihcurr) values(#dihbatchnbr:varchar#,#dihbatchdt:date#,#dihcreditacc:varchar#,#dihstatus:varchar#,#dihcustid:numeric#,#dihgrpid:varchar#,#dihdbttype:varchar#,'N',#dihcurr:varchar#)
#setDirectDebitBatch.StmtType=PreparedStatement

#setDirectDebitTransaction.Query=insert into ds_ti_ddt_det (didbatchnbr,didinstrnbr,didachbank,didachbranch,didcustacc,didcustname,didinstramt,didref,didintstatus,didvaldt,deleteflag) values (#didbatchnbr:varchar#,#didinstrnbr:numeric#,#didachbank:varchar#,#didachbranch:varchar#,#didcustacc:varchar#,#didcustname:varchar#,#didinstramt:numeric#,#didref:varchar#,#didintstatus:varchar#,#didvaldt:date#,'N')
#setDirectDebitTransaction.StmtType=PreparedStatement

setDirectDebitBatch.Query=insert into ds_ti_ddt_hdr (dihbatchnbr,dihbatchdt,dihcreditacc,dihstatus,dihcustid,dihgrpid,dihdbttype,deleteflag,dihcurr) values(#dihbatchnbr:varchar#,#dihbatchdt:date#,#dihcreditacc:varchar#,#dihstatus:varchar#,#dihcustid:numeric#,#dihgrpid:varchar#,#dihdbttype:varchar#,'N',#dihcurr:varchar#)
setDirectDebitBatch.StmtType=Statement

setDirectDebitTransaction.Query=insert into ds_ti_ddt_det (didbatchnbr,didinstrnbr,didachbank,didachbranch,didcustacc,didcustname,didinstramt,didref,didintstatus,didvaldt,deleteflag,didfxrate,didcurrcode) values (#didbatchnbr:varchar#,#didinstrnbr:numeric#,#didachbank:varchar#,#didachbranch:varchar#,#didcustacc:varchar#,#didcustname:varchar#,#didinstramt:numeric#,#didref:varchar#,#didintstatus:varchar#,#didvaldt:date#,'N',#didfxrate:numeric#,#didcurrcode:varchar#)
setDirectDebitTransaction.StmtType=Statement
	

getDirectDebitType.Query=select dmndomainvaldesc,dmndomainval from ds_domains where dmndomain='D_DebitTypeCode'
getDirectDebitType.TOColumnMap={dmndomainvaldesc=dmndomainvaldesc,dmndomainval=dmndomainval}
getDirectDebitType.OutputType=java.util.Vector


#getDirectDebitRemitterDetailsLIST_page.Query=select didinstrnbr, didcustname, bankname, didcustacc, didinstramt, status, remarks from (select distinct a.didinstrnbr,a.didcustname,(select distinct bnkdes from ds_bank_ref where bnkcode =didachbank ) as bankname ,a.didcustacc,a.didinstramt,(select distinct c.dmndomainvaldesc from ds_domains c where dmndomainval in (select distinct didintstatus from ds_ti_ddt_det where didbatchnbr=#didbatchnbr:varchar#) and dmndomain='D_DDIStatus') as status ,'' as remarks from ds_ti_ddt_det a,ds_bank_ref  b, ds_domains c ,ds_ti_ddt_hdr  d where a.didbatchnbr=#didbatchnbr:varchar#  and a.didintstatus=c.dmndomainval and a.didintstatus='I' and  a.didintstatus=d.dihstatus and a.deleteflag='N' #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

#getDirectDebitRemitterDetailsLIST_page.TOColumnMap={didinstrnbr=didinstrnbr,didcustname=didcustname,bankname=bankname,didcustacc=didcustacc,didinstramt=didinstramt,status=status,remarks=remarks}
#getDirectDebitRemitterDetailsLIST_page.OutputType=java.util.ArrayList
#getDirectDebitRemitterDetailsLIST.PgnUniqueKeys=didinstrnbr:varchar:DESC
#getDirectDebitRemitterDetailsLIST.SortKeys=didinstrnbr:varchar:DESC

getDirectDebitRemitterDetailsLIST_page.Query=select didinstrnbr, didcustname, bankname, didcustacc, didinstramt, status, remarks from (select distinct a.didinstrnbr,a.didcustname,(select distinct bnkdes from ds_bank_ref where bnkcode =didachbank ) as bankname ,a.didcustacc,a.didinstramt,(select distinct c.dmndomainvaldesc from ds_domains c where dmndomainval in (select distinct didintstatus from ds_ti_ddt_det where didbatchnbr=#didbatchnbr:varchar#) and dmndomain='D_DDIStatus') as status ,'' as remarks from ds_ti_ddt_det a,ds_bank_ref  b, ds_domains c ,ds_ti_ddt_hdr  d where a.didbatchnbr=#didbatchnbr:varchar#  and a.didintstatus=c.dmndomainval and (a.didintstatus='I' or a.didintstatus='S') and  a.didintstatus=d.dihstatus and a.deleteflag='N' #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getDirectDebitRemitterDetailsLIST_page.TOColumnMap={didinstrnbr=didinstrnbr,didcustname=didcustname,bankname=bankname,didcustacc=didcustacc,didinstramt=didinstramt,status=status,remarks=remarks}
getDirectDebitRemitterDetailsLIST_page.OutputType=java.util.ArrayList
getDirectDebitRemitterDetailsLIST.PgnUniqueKeys=didinstrnbr:varchar:DESC
getDirectDebitRemitterDetailsLIST.SortKeys=didinstrnbr:varchar:DESC


 
#getDirectDebitRemitterDetailsAuthorLIST_page.Query=select didinstrnbr, didcustname, bankname, didcustacc, didinstramt, status, remarks from (select distinct a.didinstrnbr,a.didcustname,(select distinct bnkdes from ds_bank_ref where bnkcode in (select distinct didachbank from ds_ti_ddt_det where didbatchnbr=#didbatchnbr:varchar#)) as bankname ,a.didcustacc,a.didinstramt,(select distinct c.dmndomainvaldesc from ds_domains c where dmndomainval in (select distinct didintstatus from ds_ti_ddt_det where didbatchnbr=#didbatchnbr:varchar#) and dmndomain='D_DDIStatus') as status ,'' as remarks from ds_ti_ddt_det a,ds_bank_ref  b, ds_domains c ,ds_ti_ddt_hdr  d where a.didbatchnbr=#didbatchnbr:varchar#  and a.didintstatus=c.dmndomainval and a.didintstatus='C' and  a.didintstatus=d.dihstatus and a.deleteflag='N' #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getDirectDebitRemitterDetailsAuthorLIST_page.Query=select didinstrnbr,didcustname,bankname,didcustacc,didinstramt,status,remarks from (select distinct a.didinstrnbr,a.didcustname,b.bnkdes as bankname ,a.didcustacc,a.didinstramt,(select distinct c.dmndomainvaldesc from ds_domains c where dmndomainval in (select distinct didintstatus from ds_ti_ddt_det where didbatchnbr=#didbatchnbr:varchar#) and dmndomain='D_DDIStatus') as status ,'' as remarks from ds_ti_ddt_det a,(select * from ds_bank_ref where bnkcode in (select distinct didachbank from ds_ti_ddt_det where didbatchnbr=#didbatchnbr:varchar#)) b,ds_domains c ,ds_ti_ddt_hdr  d where a.didbatchnbr=#didbatchnbr:varchar#  and a.DIDACHBANK=b.BNKCODE and a.didintstatus=c.dmndomainval and a.didintstatus='C' and a.didintstatus=d.dihstatus and a.deleteflag='N' #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getDirectDebitRemitterDetailsAuthorLIST_page.TOColumnMap={didinstrnbr=didinstrnbr,didcustname=didcustname,bankname=bankname,didcustacc=didcustacc,didinstramt=didinstramt,status=status,remarks=remarks}
getDirectDebitRemitterDetailsAuthorLIST_page.OutputType=java.util.ArrayList
getDirectDebitRemitterDetailsAuthorLIST.PgnUniqueKeys=didcustacc:varchar:DESC
getDirectDebitRemitterDetailsAuthorLIST.SortKeys=didcustname:varchar:DESC


getDirectDebitRemitterDetailsViewLIST_page.Query=select didinstrnbr, didcustname, bankname, didcustacc, didinstramt, status, remarks from (select distinct a.didinstrnbr,a.didcustname, g.bankname ,a.didcustacc,a.didinstramt, f.status ,'' as remarks from ds_ti_ddt_det a,ds_domains c ,ds_ti_ddt_hdr  d ,(select distinct c.dmndomainvaldesc as status from ds_domains c where dmndomainval in (select distinct didintstatus from ds_ti_ddt_det where didbatchnbr=#didbatchnbr:varchar#) and dmndomain='D_DDIStatus') f ,(select distinct bnkdes as bankname,BNKCODE from ds_bank_ref where bnkcode in (select distinct didachbank from ds_ti_ddt_det where didbatchnbr=#didbatchnbr:varchar#)) g where a.didbatchnbr=#didbatchnbr:varchar#  and a.DIDACHBANK=g.bnkcode and a.didintstatus=c.dmndomainval and  a.didintstatus=d.dihstatus and a.deleteflag='N' #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getDirectDebitRemitterDetailsViewLIST_page.TOColumnMap={didinstrnbr=didinstrnbr,didcustname=didcustname,bankname=bankname,didcustacc=didcustacc,didinstramt=didinstramt,status=status,remarks=remarks}
getDirectDebitRemitterDetailsViewLIST_page.OutputType=java.util.ArrayList
getDirectDebitRemitterDetailsViewLIST.StmtType=Statement
getDirectDebitRemitterDetailsViewLIST.PgnUniqueKeys=didinstrnbr:varchar:DESC
getDirectDebitRemitterDetailsViewLIST.SortKeys=didinstrnbr:varchar:DESC


getStatus.Query=select distinct dmndomainval,dmndomainvaldesc from DS_DOMAINS where dmndomain='D_DDIStatus'
getStatus.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getStatus.OutputType=java.util.Vector

#getDirectDebitRemitterView.Query=select distinct a.didcustname,(select cbrbrname from ds_br_ref where cbrbrcode=(select didachbranch from ds_ti_ddt_det where didbatchnbr=#didbatchnbr:varchar# and didinstrnbr=#didinstrnbr:numeric#)) as branchname ,(select bnkdes from ds_bank_ref where bnkcode=(select didachbank from ds_ti_ddt_det where didbatchnbr=#didbatchnbr:varchar# and didinstrnbr=#didinstrnbr:numeric#)) as bankname,a.didachbranch,a.didcustacc,a.didinstramt,a.didref from ds_ti_ddt_det a,ds_bank_ref  b, ds_domains c,ds_br_ref d where a.didinstrnbr=#didinstrnbr:numeric# and a.didbatchnbr=#didbatchnbr:varchar# or bnkcode=didachbank or cbrbrcode=didachbranch and didintstatus=(select didintstatus from ds_ti_ddt_det where didbatchnbr=#didbatchnbr:varchar# )  and a.deleteflag='N'
#getDirectDebitRemitterView.Query=select distinct a.didcustname,d.cbrbrname as branchname ,b.bnkdes as bankname,a.didachbranch,a.didcustacc,a.didinstramt,a.didref from ds_ti_ddt_det a,ds_bank_ref  b, ds_domains c,ds_br_ref d where a.didinstrnbr=#didinstrnbr:numeric# and a.didbatchnbr=#didbatchnbr:varchar# and didintstatus=(select distinct didintstatus from ds_ti_ddt_det where didbatchnbr=#didbatchnbr:varchar# )  and a.deleteflag='N' and d.cbrbrcode=a.didachbranch and b.bnkcode=a.didachbank and d.cbrbankcode=b.bnkcode

#getDirectDebitRemitterView.Query=select distinct a.didcustname,d.cbrbrname as branchname ,b.bnkdes as bankname,a.didachbranch,a.didcustacc,a.didinstramt,a.didref,e.dihcurr from ds_ti_ddt_det a,ds_bank_ref  b, ds_domains c,ds_br_ref d ,ds_ti_ddt_hdr e where a.didinstrnbr=#didinstrnbr:numeric# and a.didbatchnbr=#didbatchnbr:varchar# and didintstatus=(select distinct didintstatus from ds_ti_ddt_det where didbatchnbr=#didbatchnbr:varchar# )  and a.deleteflag='N' and d.cbrbrcode=a.didachbranch and b.bnkcode=a.didachbank and d.cbrbankcode=b.bnkcode and didbatchnbr=dihbatchnbr
#getDirectDebitRemitterView.TOColumnMap={didcustname=didcustname,branchname=branchname,bankname=bankname,didachbranch=didachbranch,didcustacc=didcustacc,didinstramt=didinstramt,didref=didref,dihcurr=dihcurr}
#getDirectDebitRemitterView.OutputType=com.tcs.ebw.payments.transferobject.DsTiDdtDetNONDBTO[]



#added by malli

getmultiDirectDebitRemitterView.Query=select didcustname,didinstrnbr,didcustacc,didref,diderrorid,didintstatus,versionnum,didachbank,didachbranch,didinstramt,didparticulars,diderror from (select a.didcustname,rownum as didinstrnbr,a.didcustacc,a.didinstramt as didref,a.didcurrcode as diderrorid,a.didfxrate as didintstatus,a.didinstramt*a.didfxrate as versionnum,a.didachbank,a.didachbranch,b.dihcurr as didinstramt,a.didinstrnbr as didparticulars,'' as diderror from ds_ti_ddt_det a,ds_ti_ddt_hdr b where a.didbatchnbr=b.dihbatchnbr and a.didbatchnbr=#didbatchnbr:varchar# order by didinstrnbr DESC)
getmultiDirectDebitRemitterView.TOColumnMap={didcustname=didcustname,didinstrnbr=didinstrnbr,didcustacc=didcustacc,didref=didref,diderrorid=diderrorid,didintstatus=didintstatus,versionnum=versionnum,didachbank=didachbank,didachbranch=didachbranch,didinstramt=didinstramt,didparticulars=didparticulars,diderror=diderror}
getmultiDirectDebitRemitterView.OutputType=java.util.ArrayList
getmultiDirectDebitRemitterView.StmtType=Statement
 
getViewDebitSearchLIST_page.Query=select dihbatchnbr, fileref, dihdbttype, dihcreditacc, dihbatchdt, status from (select distinct a.dihbatchnbr,'' as fileref ,a.dihdbttype,a.dihcreditacc,a.dihbatchdt, b.dmndomainvaldesc as status from DS_TI_DDT_HDR a,DS_DOMAINS b ,ds_ti_ddt_det c where a.dihcustid=#dihcustid:numeric#  and a.dihstatus=b.dmndomainval and a.dihcreditacc like #dihcreditacc:varchar# and c.didcustname like #didcustname:varchar# and b.dmndomainval like #dmndomainval:varchar#  and a.dihstatus like #dihstatus:varchar#  and a.deleteflag='N' and c.deleteflag='N' and a.dihstatus=c.didintstatus and a.dihbatchdt BETWEEN (#fromdate:date#) AND (#todate:date#) and a.dihbatchnbr=c.didbatchnbr and dmndomain='D_DDIStatus' #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getViewDebitSearchLIST_page.TOColumnMap={dihbatchnbr=dihbatchnbr,fileref=fileref,dihdbttype=dihdbttype,dihcreditacc=dihcreditacc,dihbatchdt=dihbatchdt,status=status}
getViewDebitSearchLIST_page.OutputType=java.util.ArrayList
getViewDebitSearchLIST.StmtType=Statement
getViewDebitSearchLIST.PgnUniqueKeys=dihcreditacc:varchar:DESC
getViewDebitSearchLIST.SortKeys=status:varchar:DESC



setDirectDebitUpdatedTxnsStatus.Query=update ds_ti_ddt_det set didcustname=#didcustname:varchar# ,didcustacc=#didcustacc:varchar#,didachbank=(select bnkcode from ds_bank_ref where bnkdes=#bnkdes#),didintstatus='C' ,didinstramt=#didinstramt:numeric# where didbatchnbr=#didbatchnbr:varchar# and didinstrnbr=#didinstrnbr:numeric# 

setDirectDebitUpdatedTxnsStatus.StmtType=Statement

setDirectDebitTxnsStatus.Query=update ds_ti_ddt_det set didintstatus='C' where didbatchnbr=#didbatchnbr:varchar#
setDirectDebitTxnsStatus.StmtType=Statement


setDirectDebitBatchStatus.Query=update ds_ti_ddt_hdr set dihstatus='C' where dihbatchnbr=#dihbatchnbr:varchar#
setDirectDebitBatchStatus.StmtType=Statement


#setDirectDebitAuthorDetailStatus.Query=update ds_ti_ddt_det set didintstatus='A' where didbatchnbr=#didbatchnbr:varchar# and didintstatus='C' and didinstrnbr=#didinstrnbr:numeric#

#setDirectDebitAuthorDetailStatus.Query=update ds_ti_ddt_det set didintstatus='A' where didbatchnbr=#didbatchnbr:varchar# and didintstatus='C'
#setDirectDebitAuthorDetailStatus.StmtType=Statement

setDirectDebitAuthorDetailStatus.Query=update ds_ti_ddt_det set didintstatus='A' where didbatchnbr=#didbatchnbr:varchar#
setDirectDebitAuthorDetailStatus.StmtType=Statement

setDirectDebitAuthorBatchStatus.Query=update ds_ti_ddt_hdr set dihstatus='A' where dihbatchnbr=#dihbatchnbr:varchar#
setDirectDebitAuthorBatchStatus.StmtType=Statement


## Direct Debit Approve Reject Status

setDirectDebitAppRejBatchStatus.Query=update ds_ti_ddt_hdr set dihstatus=#dihstatus:varchar# where dihbatchnbr=#dihbatchnbr:varchar#
setDirectDebitAppRejBatchStatus.StmtType=Statement


setDirectDebitAppRejDetailStatus.Query=update ds_ti_ddt_det set didintstatus=#didintstatus:varchar# where didbatchnbr=#didbatchnbr:varchar#
setDirectDebitAppRejDetailStatus.StmtType=Statement


#getDebitRemitterDetailsLIST_page.Query=select dremittername1,bnkdes,draccnum,cbrbrname,cbrbrcode ,drmandaterefno ,drbankcode from (select distinct a.dremittername1,b.bnkdes,a.draccnum,d.cbrbrname,d.cbrbrcode ,a.drmandaterefno ,a.drbankcode from ds_remitter a,ds_bank_ref b  ,ds_br_ref d where b.bnkcode =a.drbankcode and d.cbrbrcode=a.drbranchcode and b.bnkcode=d.cbrbankcode and dremittername1 like #dremittername1:varchar# and a.deleteflag='N' #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

#getDebitRemitterDetailsLIST_page.Query=select dremittername1,bnkdes,draccnum,cbrbrname,cbrbrcode ,drmandaterefno ,drbankcode from (select distinct a.dremittername1,b.bnkdes,a.draccnum,d.cbrbrname,d.cbrbrcode ,a.drmandaterefno ,a.drbankcode from ds_remitter a,ds_bank_ref b  ,ds_br_ref d where b.bnkcode =a.drbankcode and d.cbrbrcode=a.drbranchcode and b.bnkcode=d.cbrbankcode and upper(dremittername1) like #dremittername1:varchar# and a.drstatus=4 and a.deleteflag='N' #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getDebitRemitterDetailsLIST_page.Query=select dremittername1,bnkdes,draccnum,cbrbrname,cbrbrcode ,drmandaterefno ,drbankcode,drcurrency from (select distinct a.dremittername1,b.bnkdes,a.draccnum,d.cbrbrname,d.cbrbrcode ,a.drmandaterefno ,a.drbankcode ,a.drcurrency from ds_remitter a,ds_bank_ref b  ,ds_br_ref d where b.bnkcode =a.drbankcode and d.cbrbrcode=a.drbranchcode and b.bnkcode=d.cbrbankcode and dremittername1 like #dremittername1:varchar# and a.drstatus='4' and a.deleteflag='N' #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)
getDebitRemitterDetailsLIST_page.TOColumnMap={dremittername1=dremittername1,bnkdes=bnkdes,draccnum=draccnum,cbrbrname=cbrbrname,cbrbrcode=cbrbrcode,drmandaterefno=drmandaterefno,drbankcode=drbankcode,drcurrency=drcurrency}
getDebitRemitterDetailsLIST_page.OutputType=java.util.ArrayList
getDebitRemitterDetailsLIST.StmtType=Statement
getDebitRemitterDetailsLIST.PgnUniqueKeys=draccnum:varchar:DESC
getDebitRemitterDetailsLIST.SortKeys=dremittername1:varchar:DESC



#setSentBatchStatus.Query=update ds_ti_ddt_hdr set dihstatus='I',dihrejectionreason=#dihrejectionreason:varchar# where dihbatchnbr=#dihbatchnbr:varchar#
#setSentBatchStatus.StmtType=Statement

#setSentBatchDetailStatus.Query=update ds_ti_ddt_det set didintstatus='I' where didbatchnbr=#didbatchnbr:varchar# and didintstatus='C'
#setSentBatchDetailStatus.StmtType=Statement

setSentBatchStatus.Query=update ds_ti_ddt_hdr set dihstatus='S',dihrejectionreason=#dihrejectionreason:varchar# where dihbatchnbr=#dihbatchnbr:varchar#
setSentBatchStatus.StmtType=Statement

setSentBatchDetailStatus.Query=update ds_ti_ddt_det set didintstatus='S' where didbatchnbr=#didbatchnbr:varchar# and didintstatus='C'
setSentBatchDetailStatus.StmtType=Statement

setRejectBatchStatus.Query=update ds_ti_ddt_hdr set dihstatus='R',dihrejectionreason=#dihrejectionreason:varchar# where dihbatchnbr=#dihbatchnbr:varchar# and dihstatus='C'
setRejectBatchStatus.StmtType=Statement

setRejectBatchDetailStatus.Query=update ds_ti_ddt_det set didintstatus='R' where didbatchnbr=#didbatchnbr:varchar# and didintstatus='C'
setRejectBatchDetailStatus.StmtType=Statement

# Complete and Authorise Queries

#getCompletePaymentsLIST_page.Query=select paypayref, paytypecode, paydebitaccnum, paypymtdate, paypayeename1, paydebitamt, status from (select distinct c.batbatchref as paypayref ,b.paytypecode,b.paydebitaccnum,b.paypymtdate as paypymtdate,to_char(max(paypayeename1)) as paypayeename1, sum(b.paydebitamt) as paydebitamt, (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where a.camcustid=#camcustid:numeric# and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and payccsstatuscode=2 and c.batstatus=b.payccsstatuscode and c.deleteflag='N' and b.deleteflag='N' and (b.paytypecode='RTGS' OR b.paytypecode='TT' or b.paytypecode='ACH') group by c.batbatchref,b.paytypecode,b.paydebitaccnum,b.paypymtdate, payccsstatuscode having count(*) < 2 UNION select distinct c.batbatchref as paypayref ,b.paytypecode,b.paydebitaccnum,b.paypymtdate as paypymtdate,'Multiple Beneficieries' as paypayeename1, sum(b.paydebitamt) as paydebitamt, (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where a.camcustid=#camcustid:numeric# and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and payccsstatuscode=2 and c.batstatus=b.payccsstatuscode and c.deleteflag='N' and b.deleteflag='N' and (b.paytypecode='RTGS' OR b.paytypecode='BT' or b.paytypecode='ACH') group by c.batbatchref,b.paytypecode,b.paydebitaccnum,b.paypymtdate, payccsstatuscode having count(*) > 1 #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)


getCompletePaymentsLIST_page.Query=select paypayref, paytypecode, paydebitaccnum, paypymtdate, paypayeename1, paydebitamt, status,payrecurring from (select distinct c.batbatchref as paypayref ,b.paytypecode,b.paydebitaccnum,b.paypymtdate as paypymtdate,to_char(max(paypayeename1)) as paypayeename1, sum(b.paydebitamt) as paydebitamt, (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status ,payrecurring from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where a.camcustid=#camcustid:numeric# and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and payccsstatuscode in ('2','48') and c.batstatus=b.payccsstatuscode and c.deleteflag='N' and b.deleteflag='N' and (b.paytypecode='WIRE' OR b.paytypecode='BT' or b.paytypecode='ACH') group by c.batbatchref,b.paytypecode,b.paydebitaccnum,b.paypymtdate, payccsstatuscode,payrecurring having count(*) < 2 UNION select distinct c.batbatchref as paypayref ,b.paytypecode,b.paydebitaccnum,b.paypymtdate as paypymtdate,'Multiple Beneficieries' as paypayeename1, sum(b.paydebitamt) as paydebitamt, (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status ,payrecurring  from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where a.camcustid=#camcustid:numeric# and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and payccsstatuscode in ('2','48') and c.batstatus=b.payccsstatuscode and c.deleteflag='N' and b.deleteflag='N' and (b.paytypecode='WIRE' OR b.paytypecode='BT' or b.paytypecode='ACH') group by c.batbatchref,b.paytypecode,b.paydebitaccnum,b.paypymtdate, payccsstatuscode ,payrecurring having count(*) > 1 #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)


getCompletePaymentsLIST_page.TOColumnMap={paypayref=paypayref,paytypecode=paytypecode,paydebitaccnum=paydebitaccnum,paypymtdate=paypymtdate,paypayeename1=paypayeename1,paydebitamt=paydebitamt,status=status,payrecurring=payrecurring}
getCompletePaymentsLIST_page.OutputType=java.util.ArrayList
getCompletePaymentsLIST.IsSqlj=False
getCompletePaymentsLIST.StmtType=Statement
getCompletePaymentsLIST.PgnUniqueKeys=paypayref:varchar:DESC
getCompletePaymentsLIST.SortKeys=paypayref:varchar:DESC



getCompleteSwiftPaymentsLIST_page.Query=select paypayref, paytypecode, paydebitaccnum, paypymtdate, paypayeename1, paydebitamt, status, payrecurring from (select distinct c.batbatchref as paypayref ,b.paytypecode,b.paydebitaccnum,b.paypymtdate as paypymtdate,to_char(max(paypayeename1)) as paypayeename1, sum(b.paydebitamt) as paydebitamt, (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status, payrecurring from DS_Cust_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where a.camcustid=#camcustid:numeric# and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and payccsstatuscode in ('2','48') and c.batstatus=b.payccsstatuscode and c.deleteflag='N' and b.deleteflag='N'and b.paytypecode='TT' group by c.batbatchref,b.paytypecode,b.paydebitaccnum,b.paypymtdate, payccsstatuscode, payrecurring  having count(*) < 2 UNION select distinct c.batbatchref as paypayref ,b.paytypecode,b.paydebitaccnum,b.paypymtdate as paypymtdate,'Multiple Beneficieries' as paypayeename1, sum(b.paydebitamt) as paydebitamt, (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status, payrecurring from DS_Cust_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where a.camcustid=#camcustid:numeric# and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and payccsstatuscode in ('2','48') and c.batstatus=b.payccsstatuscode and c.deleteflag='N' and b.deleteflag='N'and b.paytypecode='TT' group by c.batbatchref,b.paytypecode,b.paydebitaccnum,b.paypymtdate, payccsstatuscode, payrecurring having count(*) > 1 #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getCompleteSwiftPaymentsLIST_page.TOColumnMap={paypayref=paypayref,paytypecode=paytypecode,paydebitaccnum=paydebitaccnum,paypymtdate=paypymtdate,paypayeename1=paypayeename1,paydebitamt=paydebitamt,status=status,payrecurring=payrecurring}
getCompleteSwiftPaymentsLIST_page.OutputType=java.util.ArrayList
getCompleteSwiftPaymentsLIST.IsSqlj=False
getCompleteSwiftPaymentsLIST.PgnUniqueKeys=paypayref:varchar:DESC
getCompleteSwiftPaymentsLIST.SortKeys=paypayref:varchar:DESC



#getAuthorisePaymentsLIST_page.Query=select paypayref, paytypecode, paydebitaccnum, paypymtdate, paypayeename1, paypriority, paycurrcode, paydebitamt, status, payrecurring from(select distinct c.batbatchref as paypayref,b.paytypecode,b.paydebitaccnum,b.paypymtdate as paypymtdate,to_char(max(paypayeename1)) as paypayeename1, b.paypriority,b.paycurrcode, sum(b.paydebitamt) as paydebitamt, (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status,b.payrecurring from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where a.camcustid=#camcustid:numeric# and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and (payccsstatuscode=6 or payccsstatuscode=16)and c.batstatus=b.payccsstatuscode and c.deleteflag='N' and b.deleteflag='N' and (b.paytypecode='WIRE' OR b.paytypecode='BT' or b.paytypecode='ACH') group by c.batbatchref,b.paytypecode,b.paydebitaccnum,b.paypymtdate, b.payccsstatuscode,b.paypriority,b.paycurrcode,b.payrecurring  having count(*) < 2 UNION select distinct c.batbatchref as paypayref,b.paytypecode,b.paydebitaccnum,b.paypymtdate as paypymtdate,'Multiple Beneficieries' as paypayeename1,b.paypriority,b.paycurrcode, sum(b.paydebitamt) as paydebitamt, (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status,b.payrecurring from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where a.camcustid=#camcustid:numeric# and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and (payccsstatuscode=6 or payccsstatuscode=16) and c.batstatus=b.payccsstatuscode and c.deleteflag='N' and b.deleteflag='N' and (b.paytypecode='WIRE' OR b.paytypecode='BT' or b.paytypecode='ACH')group by c.batbatchref,b.paytypecode,b.paydebitaccnum,b.paypymtdate, payccsstatuscode ,b.paypriority,b.paycurrcode,b.payrecurring having count(*) > 1 #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

#getAuthorisePaymentsLIST_page.Query=select paypayref, paytypecode, paydebitaccnum, paypymtdate, paypayeename1, paypriority, paycurrcode, paydebitamt, status, payrecurring from(select distinct c.batbatchref as paypayref,b.paytypecode,b.paydebitaccnum,b.paypymtdate as paypymtdate,to_char(max(paypayeename1)) as paypayeename1, b.paypriority,b.paycurrcode, sum(b.paydebitamt) as paydebitamt, (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status,b.payrecurring from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where a.camcustid=#camcustid:numeric# and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and payccsstatuscode in (6,16) and payccsstatuscode <> '44' and payccsstatuscode <> '48' and c.batstatus=b.payccsstatuscode and c.deleteflag='N' and b.deleteflag='N' and (b.paytypecode='WIRE' OR b.paytypecode='BT' or b.paytypecode='ACH') group by c.batbatchref,b.paytypecode,b.paydebitaccnum,b.paypymtdate, b.payccsstatuscode,b.paypriority,b.paycurrcode,b.payrecurring  having count(*) < 2 UNION select distinct c.batbatchref as paypayref,b.paytypecode,b.paydebitaccnum,b.paypymtdate as paypymtdate,'Multiple Beneficieries' as paypayeename1,b.paypriority,b.paycurrcode, sum(b.paydebitamt) as paydebitamt, (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status,b.payrecurring from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where a.camcustid=#camcustid:numeric# and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and payccsstatuscode in (6,16) and payccsstatuscode <> '44' and payccsstatuscode <> '48' and c.batstatus=b.payccsstatuscode and c.deleteflag='N' and b.deleteflag='N' and (b.paytypecode='WIRE' OR b.paytypecode='BT' or b.paytypecode='ACH')group by c.batbatchref,b.paytypecode,b.paydebitaccnum,b.paypymtdate, payccsstatuscode ,b.paypriority,b.paycurrcode,b.payrecurring having count(*) > 1 #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)






#added by srinath

getAuthorisePaymentsLIST_page.Query=select paypayref, paytypecode, paydebitaccnum, paypymtdate, paypayeename1, paypriority, paycurrcode, paydebitamt, status, payrecurring from(select distinct c.batbatchref as paypayref,b.paytypecode,b.paydebitaccnum,b.paypymtdate as paypymtdate,to_char(max(paypayeename1)) as paypayeename1, b.paypriority,b.paycurrcode, sum(b.paydebitamt) as paydebitamt, (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status,b.payrecurring from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where a.camcustid=#camcustid:numeric# and b.paydebitamt < (select max(mdlsignlimit) from ds_matrix_dtl where mdlgrpid='HNItest' and mdlmatrixnum=(select TAMMATRIXNUM from DS_TI_ACC_MASTER WHERE TAMACCNUM=b.paydebitaccnum and TAMGRPID='HNItest')) and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and (payccsstatuscode='6' or payccsstatuscode='16')and c.batstatus=b.payccsstatuscode and c.deleteflag='N' and b.deleteflag='N' and (b.paytypecode='WIRE' OR b.paytypecode='BT' or b.paytypecode='ACH') group by c.batbatchref,b.paytypecode,b.paydebitaccnum,b.paypymtdate, b.payccsstatuscode,b.paypriority,b.paycurrcode,b.payrecurring  having count(*) < 2 UNION select distinct c.batbatchref as paypayref,b.paytypecode,b.paydebitaccnum,b.paypymtdate as paypymtdate,'Multiple Beneficieries' as paypayeename1,b.paypriority,b.paycurrcode, sum(b.paydebitamt) as paydebitamt, (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status,b.payrecurring from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where a.camcustid=#camcustid:numeric# and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and (payccsstatuscode='6' or payccsstatuscode='16') and c.batstatus=b.payccsstatuscode and c.deleteflag='N' and b.deleteflag='N' and (b.paytypecode='WIRE' OR b.paytypecode='BT' or b.paytypecode='ACH')group by c.batbatchref,b.paytypecode,b.paydebitaccnum,b.paypymtdate, payccsstatuscode ,b.paypriority,b.paycurrcode,b.payrecurring having count(*) > 1 #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getAuthorisePaymentsLIST_page.TOColumnMap={paypayref=paypayref,paytypecode=paytypecode,paydebitaccnum=paydebitaccnum,paypymtdate=paypymtdate,paypayeename1=paypayeename1,paypriority=paypriority,paycurrcode=paycurrcode,paydebitamt=paydebitamt,status=status,payrecurring=payrecurring}
getAuthorisePaymentsLIST_page.OutputType=java.util.ArrayList
getAuthorisePaymentsLIST.IsSqlj=False
getAuthorisePaymentsLIST.StmtType=Statement
getAuthorisePaymentsLIST.PgnUniqueKeys=paypayref:varchar:DESC
getAuthorisePaymentsLIST.SortKeys=paypayref:varchar:DESC



#getAuthoriseSwiftPaymentsLIST_page.Query=select paypayref,paytypecode,paydebitaccnum,paypayeename1,paypriority,paycurrcode,paydebitamt,status from (select distinct c.batbatchref as paypayref,b.paytypecode,b.paydebitaccnum,to_char(max(paypayeename1)) as paypayeename1,b.paypriority,b.paycurrcode,sum(b.paydebitamt) as paydebitamt, (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where a.camcustid=#camcustid:numeric# and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and (payccsstatuscode=6 or payccsstatuscode=16) and c.batstatus=b.payccsstatuscode and c.deleteflag='N' and b.deleteflag='N' and b.paytypecode='TT' group by c.batbatchref,b.paytypecode,b.paypriority,b.paycurrcode,b.paydebitaccnum,b.paypymtdate, payccsstatuscode having count(*) <=1 UNION select distinct c.batbatchref as paypayref ,b.paytypecode,b.paydebitaccnum,'Multiple Beneficieries' as paypayeename1, b.paypriority,b.paycurrcode,sum(b.paydebitamt) as paydebitamt, (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where a.camcustid=#camcustid:numeric# and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and (payccsstatuscode=6 or payccsstatuscode=16) and c.batstatus=b.payccsstatuscode and c.deleteflag='N' and b.deleteflag='N' and b.paytypecode='TT' group by c.batbatchref,b.paytypecode,b.paydebitaccnum,b.paypriority,b.paycurrcode,payccsstatuscode having count(*) > 1 #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)



# added by basavesh 

#getAuthoriseSwiftPaymentsLIST_page.Query=select paypayref,paytypecode,paydebitaccnum,paypayeename1,paypriority,paycurrcode,paydebitamt,status,paypymtdate from (select distinct c.batbatchref as paypayref,b.paytypecode,b.paydebitaccnum,to_char(max(paypayeename1)) as paypayeename1,b.paypriority,b.paycurrcode,sum(b.paydebitamt) as paydebitamt, (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status,b.paypymtdate as paypymtdate from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where a.camcustid=#camcustid:numeric# and b.paydebitamt < (select max(mdlsignlimit) from ds_matrix_dtl where mdlgrpid='HNItest' and mdlmatrixnum=(select TAMMATRIXNUM from DS_TI_ACC_MASTER WHERE TAMACCNUM=b.paydebitaccnum and TAMGRPID='HNItest')) and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and (payccsstatuscode=6 or payccsstatuscode=16) and c.batstatus=b.payccsstatuscode and c.deleteflag='N' and b.deleteflag='N' and b.paytypecode='TT' group by c.batbatchref,b.paytypecode,b.paypriority,b.paycurrcode,b.paydebitaccnum,b.paypymtdate, payccsstatuscode having count(*) <=1 UNION select distinct c.batbatchref as paypayref ,b.paytypecode,b.paydebitaccnum,'Multiple Beneficieries' as paypayeename1, b.paypriority,b.paycurrcode,sum(b.paydebitamt) as paydebitamt, (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status,b.paypymtdate as paypymtdate from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where a.camcustid=#camcustid:numeric# and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and (payccsstatuscode=6 or payccsstatuscode=16) and c.batstatus=b.payccsstatuscode and c.deleteflag='N' and b.deleteflag='N' and b.paytypecode='TT' group by c.batbatchref,b.paytypecode,b.paydebitaccnum,b.paypriority,b.paycurrcode,b.paypymtdate,payccsstatuscode having count(*) > 1 #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)


getAuthoriseSwiftPaymentsLIST_page.Query=select paypayref,paytypecode,paydebitaccnum,paypayeename1,paypriority,paycurrcode,paydebitamt,status,paypymtdate,payrecurring from (select distinct c.batbatchref as paypayref,b.paytypecode,b.paydebitaccnum,to_char(max(paypayeename1)) as paypayeename1,b.paypriority,b.paycurrcode,sum(b.paydebitamt) as paydebitamt, (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status,b.paypymtdate as paypymtdate,b.payrecurring as payrecurring from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where a.camcustid=#camcustid:numeric# and b.paydebitamt < (select max(mdlsignlimit) from ds_matrix_dtl where mdlgrpid='HNItest' and mdlmatrixnum=(select TAMMATRIXNUM from DS_TI_ACC_MASTER WHERE TAMACCNUM=b.paydebitaccnum and TAMGRPID='HNItest')) and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and (payccsstatuscode='6' or payccsstatuscode='16') and c.batstatus=b.payccsstatuscode and c.deleteflag='N' and b.deleteflag='N' and b.paytypecode='TT' group by c.batbatchref,b.paytypecode,b.paypriority,b.paycurrcode,b.paydebitaccnum,b.paypymtdate,b.payrecurring,payccsstatuscode having count(*) < 2 UNION select distinct c.batbatchref as paypayref ,b.paytypecode,b.paydebitaccnum,'Multiple Beneficieries' as paypayeename1, b.paypriority,b.paycurrcode,sum(b.paydebitamt) as paydebitamt, (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status,b.paypymtdate as paypymtdate,b.payrecurring as payrecurring from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where a.camcustid=#camcustid:numeric# and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and (payccsstatuscode='6' or payccsstatuscode='16') and c.batstatus=b.payccsstatuscode and c.deleteflag='N' and b.deleteflag='N' and b.paytypecode='TT' group by c.batbatchref,b.paytypecode,b.paydebitaccnum,b.paypriority,b.paycurrcode,b.paypymtdate,b.payrecurring,payccsstatuscode having count(*) > 1 #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)
getAuthoriseSwiftPaymentsLIST_page.TOColumnMap={paypayref=paypayref,paytypecode=paytypecode,paydebitaccnum=paydebitaccnum,paypayeename1=paypayeename1,paypriority=paypriority,paycurrcode=paycurrcode,paydebitamt=paydebitamt,status=status,paypymtdate=paypymtdate,payrecurring=payrecurring}
getAuthoriseSwiftPaymentsLIST_page.OutputType=java.util.ArrayList
getAuthoriseSwiftPaymentsLIST.IsSqlj=False
getAuthoriseSwiftPaymentsLIST.PgnUniqueKeys=paypayref:varchar:DESC
getAuthoriseSwiftPaymentsLIST.SortKeys=paypayref:varchar:DESC




#getCompleteSearchLIST_page.Query=select paypayref, paytypecode, paydebitaccnum, paypymtdate, paypayeename1, paydebitamt, status from (select distinct c.batbatchref as paypayref ,b.paytypecode,b.paydebitaccnum,b.paypymtdate as paypymtdate,to_char(max(paypayeename1)) as paypayeename1, sum(b.paydebitamt) as paydebitamt, (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where b.payccsstatuscode in ('2','3') and a.camcustid=#camcustid:numeric# and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and payccsstatuscode like #payccsstatuscode:varchar# and c.batstatus=b.payccsstatuscode and b.paypayref like #paypayref:varchar# and b.paypayeename1 like #paypayeename1:varchar# and b.paytypecode like #paytypecode:varchar# and b.paypymtdate BETWEEN (#fromdate:date#) AND (#todate:date#) AND b.paydebitamt BETWEEN (#fromamount:numeric#) AND (#toamount:numeric#) and c.deleteflag='N' and b.deleteflag='N' and b.paytypecode in('WIRE','ACH','BT') group by c.batbatchref,b.paytypecode,b.paydebitaccnum,b.paypymtdate, payccsstatuscode having count(*) < 2 UNION select distinct c.batbatchref as paypayref ,b.paytypecode,b.paydebitaccnum,b.paypymtdate as paypymtdate,'Multiple Beneficieries' as paypayeename1, sum(b.paydebitamt) as paydebitamt, (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where b.payccsstatuscode in ('2','3') and a.camcustid=#camcustid:numeric# and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and payccsstatuscode like #payccsstatuscode:varchar# and c.batstatus=b.payccsstatuscode and b.paypayref like #paypayref:varchar# and b.paypayeename1 like #paypayeename1:varchar# and b.paytypecode like #paytypecode:varchar# and b.paypymtdate BETWEEN (#fromdate:date#) AND (#todate:date#) AND b.paydebitamt BETWEEN (#fromamount:numeric#) AND (#toamount:numeric#) and c.deleteflag='N' and b.deleteflag='N' and b.paytypecode in('WIRE','ACH','BT') group by c.batbatchref,b.paytypecode,b.paydebitaccnum,b.paypymtdate, payccsstatuscode having count(*) > 1 #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)


getCompleteSearchLIST_page.Query=select paypayref, paytypecode, paydebitaccnum, paypymtdate, paypayeename1, paydebitamt, status, payrecurring from (select distinct c.batbatchref as paypayref ,b.paytypecode,b.paydebitaccnum,b.paypymtdate as paypymtdate,to_char(max(paypayeename1)) as paypayeename1, b.paydebitamt as paydebitamt, (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status, payrecurring from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where b.payccsstatuscode in ('2','48') and a.camcustid=#camcustid:numeric# and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and payccsstatuscode like #payccsstatuscode:varchar# and c.batstatus=b.payccsstatuscode and b.paypayref like #paypayref:varchar# and b.paybatchref like #paybatchref:varchar# and b.paypayeename1 like #paypayeename1:varchar# and b.paytypecode like #paytypecode:varchar# and b.paypymtdate BETWEEN (#fromdate:date#) AND (#todate:date#) AND b.paydebitamt BETWEEN (#fromamount:numeric#) AND (#toamount:numeric#) and c.deleteflag='N' and b.deleteflag='N' and b.paytypecode in('WIRE','ACH','BT') group by c.batbatchref,b.paytypecode,b.paydebitaccnum,b.paypymtdate,b.paydebitamt, payccsstatuscode, payrecurring having count(*) < 2 UNION select distinct c.batbatchref as paypayref ,b.paytypecode,b.paydebitaccnum,b.paypymtdate as paypymtdate,'Multiple Beneficieries' as paypayeename1, b.paydebitamt as paydebitamt, (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status, payrecurring from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where b.payccsstatuscode in ('2','48') and a.camcustid=#camcustid:numeric# and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and payccsstatuscode like #payccsstatuscode:varchar# and c.batstatus=b.payccsstatuscode and b.paypayref like #paypayref:varchar# and b.paybatchref like #paybatchref:varchar# and b.paypayeename1 like #paypayeename1:varchar# and b.paytypecode like #paytypecode:varchar# and b.paypymtdate BETWEEN (#fromdate:date#) AND (#todate:date#) AND b.paydebitamt BETWEEN (#fromamount:numeric#) AND (#toamount:numeric#) and c.deleteflag='N' and b.deleteflag='N' and b.paytypecode in('WIRE','ACH','BT') group by c.batbatchref,b.paytypecode,b.paydebitaccnum,b.paypymtdate,b.paydebitamt,payccsstatuscode, payrecurring having count(*) > 1 #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getCompleteSearchLIST_page.TOColumnMap={paypayref=paypayref,paytypecode=paytypecode,paydebitaccnum=paydebitaccnum,paypymtdate=paypymtdate,paypayeename1=paypayeename1,paydebitamt=paydebitamt,status=status,payrecurring=payrecurring}
getCompleteSearchLIST_page.OutputType=java.util.ArrayList
getCompleteSearchLIST.StmtType=Statement
getCompleteSearchLIST.PgnUniqueKeys=paypayref:varchar:DESC
getCompleteSearchLIST.SortKeys=paypayref:varchar:DESC




getCompleteSearchSwiftLIST_page.Query=select paypayref, paytypecode, paydebitaccnum, paypymtdate, paypayeename1, paydebitamt, status from (select distinct c.batbatchref as paypayref,b.paytypecode,b.paydebitaccnum,b.paypymtdate as paypymtdate,to_char(max(paypayeename1)) as paypayeename1,sum(b.paydebitamt) as paydebitamt,(select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b,ds_batch c where b.payccsstatuscode in ('2','48') and a.camcustid=#camcustid:numeric# and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and c.batstatus=b.payccsstatuscode and b.paybatchref like #paybatchref:varchar# and b.paypayeename1 like #paypayeename1:varchar# and b.paypymtdate BETWEEN (#fromdate:date#) AND (#todate:date#) AND b.paypymtdate BETWEEN (#fromdate:date#) AND (#todate:date#) AND b.paydebitamt BETWEEN (#fromamount:numeric#) AND (#toamount:numeric#) AND c.deleteflag='N'  and b.deleteflag='N' and b.paytypecode='TT' and paydebitaccnum like #paydebitaccnum:varchar# group by c.batbatchref,b.paytypecode,b.paydebitaccnum,b.paypymtdate,payccsstatuscode having count(*) <= 2 UNION select distinct c.batbatchref as paypayref,b.paytypecode,b.paydebitaccnum,b.paypymtdate as paypymtdate,'Multiple Beneficieries' as paypayeename1,sum(b.paydebitamt) as paydebitamt,(select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b,ds_batch c where b.payccsstatuscode in ('2','48') and a.camcustid=#camcustid:numeric# and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and c.batstatus=b.payccsstatuscode and b.paybatchref like #paybatchref:varchar# and b.paypayeename1 like #paypayeename1:varchar#  and b.paypymtdate BETWEEN (#fromdate:date#) AND (#todate:date#) AND c.deleteflag='N'  and b.deleteflag='N' and b.paytypecode='TT' AND paydebitaccnum like #paydebitaccnum:varchar# group by c.batbatchref,b.paytypecode,b.paydebitaccnum,b.paypymtdate, payccsstatuscode having count(*) > 2 #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getCompleteSearchSwiftLIST_page.TOColumnMap={paypayref=paypayref,paytypecode=paytypecode,paydebitaccnum=paydebitaccnum,paypymtdate=paypymtdate,paypayeename1=paypayeename1,paydebitamt=paydebitamt,status=status}
getCompleteSearchSwiftLIST_page.OutputType=java.util.ArrayList
getCompleteSearchSwiftLIST.IsSqlj=False
getCompleteSearchSwiftLIST.StmtType=Statement
getCompleteSearchSwiftLIST.PgnUniqueKeys=paypayref:varchar:DESC
getCompleteSearchSwiftLIST.SortKeys=paypayref:varchar:DESC




#getAuthoriseSearchLIST_page.Query=select paypayref, paytypecode, paydebitaccnum, paypymtdate, paypayeename1, paypriority, paycurrcode, paydebitamt, status from (select c.batbatchref as paypayref,b.paytypecode,max(b.paydebitaccnum) as paydebitaccnum,b.paypymtdate as paypymtdate,'Multiple Beneficieries' as paypayeename1,b.paypriority,b.paycurrcode,sum(b.paydebitamt) as paydebitamt,(select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where a.camcustid=#camcustid:numeric# and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and payccsstatuscode=6 and c.batstatus=b.payccsstatuscode and b.paypayeename1 like #paypayeename1:varchar# and b.paypymtdate BETWEEN (#fromdate:date#) AND (#todate:date#) AND b.paydebitamt BETWEEN (#fromamount:numeric#) AND (#toamount:numeric#) and c.deleteflag='N' and b.deleteflag='N' group by b.payccsstatuscode,b.paytypecode,c.batbatchref,b.paydebitaccnum,b.paypriority,b.paycurrcode,b.paypymtdate having count(*) > 1 union select c.batbatchref as paypayref,b.paytypecode,max(b.paydebitaccnum) as paydebitaccnum,b.paypymtdate as paypymtdate,to_char(max(b.paypayeename1)) as paypayeename1,b.paypriority,b.paycurrcode,sum(b.paydebitamt) as paydebitamt,(select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where a.camcustid=#camcustid:numeric# and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and payccsstatuscode=6 and c.batstatus=b. payccsstatuscode and b.paypayeename1 like #paypayeename1:varchar# and b.paypymtdate BETWEEN (#fromdate:date#) AND (#todate:date#) AND b.paydebitamt BETWEEN (#fromamount:numeric#) AND (#toamount:numeric#) and c.deleteflag='N' and b.deleteflag='N' group by b.payccsstatuscode,b.paytypecode,c.batbatchref,b.paydebitaccnum,b.paypriority,b.paycurrcode,b.paypymtdate having count(*) < 2 #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getAuthoriseSearchLIST_page.Query=select paypayref, paytypecode, paydebitaccnum, paypymtdate, paypayeename1, paypriority, paycurrcode, paydebitamt, status from (select c.batbatchref as paypayref,b.paytypecode,max(b.paydebitaccnum) as paydebitaccnum,b.paypymtdate as paypymtdate,'Multiple Beneficieries' as paypayeename1,b.paypriority,b.paycurrcode,sum(b.paydebitamt) as paydebitamt,(select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where a.camcustid=#camcustid:numeric# and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and payccsstatuscode in ('6','16') and payccsstatuscode <> '44' and payccsstatuscode <> '48' and c.batstatus=b.payccsstatuscode and b.paypayeename1 like #paypayeename1:varchar# and b.paypymtdate BETWEEN (#fromdate:date#) AND (#todate:date#) AND b.paydebitamt BETWEEN (#fromamount:numeric#) AND (#toamount:numeric#) and c.deleteflag='N' and b.deleteflag='N' and b.paybatchref like #paybatchref:varchar# group by b.payccsstatuscode,b.paytypecode,c.batbatchref,b.paydebitaccnum,b.paypriority,b.paycurrcode,b.paypymtdate having count(*) > 1 union select c.batbatchref as paypayref,b.paytypecode,max(b.paydebitaccnum) as paydebitaccnum,b.paypymtdate as paypymtdate,to_char(max(b.paypayeename1)) as paypayeename1,b.paypriority,b.paycurrcode,sum(b.paydebitamt) as paydebitamt,(select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where a.camcustid=#camcustid:numeric# and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and payccsstatuscode in ('6','16') and payccsstatuscode <> '44' and payccsstatuscode <> '48' and c.batstatus=b. payccsstatuscode and b.paypayeename1 like #paypayeename1:varchar# and b.paypymtdate BETWEEN (#fromdate:date#) AND (#todate:date#) AND b.paydebitamt BETWEEN (#fromamount:numeric#) AND (#toamount:numeric#) and c.deleteflag='N' and b.deleteflag='N'  and b.paybatchref like #paybatchref:varchar#  group by b.payccsstatuscode,b.paytypecode,c.batbatchref,b.paydebitaccnum,b.paypriority,b.paycurrcode,b.paypymtdate having count(*) < 2 #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getAuthoriseSearchLIST_page.TOColumnMap={paypayref=paypayref,paytypecode=paytypecode,paydebitaccnum=paydebitaccnum,paypymtdate=paypymtdate,paypayeename1=paypayeename1,paypriority=paypriority,paycurrcode=paycurrcode,paydebitamt=paydebitamt,status=status}
getAuthoriseSearchLIST_page.OutputType=java.util.ArrayList
getAuthoriseSearchLIST.IsSqlj=False
getAuthoriseSearchLIST.StmtType=Statement
getAuthoriseSearchLIST.PgnUniqueKeys=paypayref:varchar:DESC
getAuthoriseSearchLIST.SortKeys=paypayref:varchar:DESC





getAuthoriseSearchSwiftLIST_page.Query=select paypayref, paytypecode, paydebitaccnum, paypayeename1, paypriority, paycurrcode, paydebitamt, status,paypymtdate from (select distinct c.batbatchref as paypayref,b.paytypecode,b.paydebitaccnum,to_char(max(paypayeename1)) as paypayeename1,b.paypriority,b.paycurrcode, sum(b.paydebitamt) as paydebitamt, (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status,b.paypymtdate as paypymtdate from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where a.camcustid=#camcustid:numeric# and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and payccsstatuscode='6' and c.batstatus=b.payccsstatuscode and b.paybatchref like #paybatchref:varchar# and b.paypayeename1 like #paypayeename1:varchar#  AND b.paypymtdate BETWEEN (#fromdate:date#) AND (#todate:date#) AND b.paydebitamt BETWEEN (#fromamount:numeric#) AND (#toamount:numeric#) AND c.deleteflag='N' and b.deleteflag='N' and payccsstatuscode like #payccsstatuscode:varchar# and paydebitaccnum like #paydebitaccnum:varchar#  and b.paytypecode='TT' group by c.batbatchref,b.paytypecode,b.paydebitaccnum,b.payccsstatuscode,b.paypriority,b.paypymtdate,b.paycurrcode  having count(*) < 2 UNION select distinct c.batbatchref as paypayref,b.paytypecode,b.paydebitaccnum,'Multiple Beneficieries' as paypayeename1,b.paypriority,b.paycurrcode, sum(b.paydebitamt) as paydebitamt,(select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status,b.paypymtdate as paypymtdate from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where a.camcustid=#camcustid:numeric# and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and payccsstatuscode='6' and c.batstatus=b.payccsstatuscode and b.paybatchref like #paybatchref:varchar#  and b.paypayeename1 like #paypayeename1:varchar# and b.paypymtdate BETWEEN (#fromdate:date#) AND (#todate:date#) AND b.paydebitamt BETWEEN (#fromamount:numeric#) AND (#toamount:numeric#) AND c.deleteflag='N' and b.deleteflag='N' and payccsstatuscode like #payccsstatuscode:varchar# and paydebitaccnum like #paydebitaccnum:varchar#  and b.paytypecode='TT' group by c.batbatchref,b.paytypecode,b.paydebitaccnum,payccsstatuscode ,b.paypriority,b.paypymtdate,b.paycurrcode having count(*) >1 #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getAuthoriseSearchSwiftLIST_page.TOColumnMap={paypayref=paypayref,paytypecode=paytypecode,paydebitaccnum=paydebitaccnum,paypayeename1=paypayeename1,paypriority=paypriority,paycurrcode=paycurrcode,paydebitamt=paydebitamt,status=status,paypymtdate=paypymtdate}
getAuthoriseSearchSwiftLIST_page.OutputType=java.util.ArrayList
getAuthoriseSearchSwiftLIST.IsSqlj=False
getAuthoriseSearchSwiftLIST.StmtType=Statement
getAuthoriseSearchSwiftLIST.PgnUniqueKeys=paypayref:varchar:DESC
getAuthoriseSearchSwiftLIST.SortKeys=paypayref:varchar:DESC




getViewPaymentsLIST_page.Query=select paypayref, paytypecode, paydebitaccnum, paypymtdate, paypayeename1, paydebitamt, status from (select c.batbatchref as paypayref,b.paytypecode,b.paydebitaccnum,max(b.paypymtdate) as paypymtdate,'Multiple Beneficieries' as paypayeename1, b.paydebitamt as paydebitamt, (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status from DS_ACC_MASTER a,DS_PAY_TXNS b ,ds_batch c where a.camqlcustid=#camqlcustid:varchar# and a.camaccnum=b.paydebitaccnum and c.batstatus=b.payccsstatuscode and b.paybatchref=c.batbatchref and b.paypayref like #paypayref:varchar# and b.paypayeename1 like #paypayeename1:varchar# and b.paytypecode like #paytypecode:varchar#  and b.paydebitaccnum like #paydebitaccnum:varchar# and b.payccsstatuscode like #payccsstatuscode:varchar# and b.paypymtdate BETWEEN (#fromdate:date#) AND (#todate:date#) and c.deleteflag='N' and b.deleteflag='N' group by  b.payccsstatuscode,c.batbatchref,b.paytypecode,b.paydebitamt,b.paydebitaccnum having count(*) > 1 union select c.batbatchref as paypayref,b.paytypecode,b.paydebitaccnum,max(b.paypymtdate) as paypymtdate,to_char(max(b.paypayeename1)) as paypayeename1, b.paydebitamt as paydebitamt, (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status from DS_ACC_MASTER a, DS_PAY_TXNS b ,ds_batch c where a.camqlcustid=#camqlcustid:varchar# and a.camaccnum=b.paydebitaccnum and c.batstatus=b.payccsstatuscode and b.paybatchref=c.batbatchref and b.paypayref like #paypayref:varchar# and b.paypayeename1 like #paypayeename1:varchar# and b.paytypecode like #paytypecode:varchar#  and b.paydebitaccnum like #paydebitaccnum:varchar# and b.payccsstatuscode like #payccsstatuscode:varchar# and b.paypymtdate BETWEEN (#fromdate:date#) AND (#todate:date#) and c.deleteflag='N' and b.deleteflag='N' group by  b.payccsstatuscode,c.batbatchref,b.paytypecode,b.paydebitamt,b.paydebitaccnum having count(c.batbatchref) < 2 #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getViewPaymentsLIST_page.TOColumnMap={paypayref=paypayref,paytypecode=paytypecode,paydebitaccnum=paydebitaccnum,paypymtdate=paypymtdate,paypayeename1=paypayeename1,paydebitamt=paydebitamt,status=status}
getViewPaymentsLIST_page.OutputType=java.util.ArrayList
getViewPaymentsLIST.StmtType=Statement
getViewPaymentsLIST.PgnUniqueKeys=paypayref:varchar:DESC
getViewPaymentsLIST.SortKeys=paypayref:varchar:DESC




#getProcessesPaymentsLIST_page.Query=select distinct paypayref, paytypecode, paydebitaccnum, paypymtdate, paypayeename1, paypriority, paycurrcode, paydebitamt, status,payrecurring from (select distinct c.batbatchref as paypayref,b.paytypecode,b.paydebitaccnum,b.paypymtdate as paypymtdate,to_char(max(paypayeename1)) as paypayeename1, b.paypriority,b.paycurrcode, b.paydebitamt as paydebitamt, (select dmndomainvaldesc from DS_DOMAINS  where dmndomain='D_StatusCode' and dmndomainval=batstatus and dmndomainval  in ('3','44','2','6','12','20','4','16','48')) as status,b.payrecurring from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where a.camcustid=#camcustid:numeric# and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref AND c.deleteflag='N' and b.deleteflag='N' group by c.batbatchref,b.paytypecode,b.paydebitaccnum,b.paypymtdate, b.paydebitamt,c.batstatus,b.paypriority,b.paycurrcode ,b.payrecurring having count(*) >= 1  #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

#getProcessesPaymentsLIST_page.TOColumnMap={paypayref=paypayref,paytypecode=paytypecode,paydebitaccnum=paydebitaccnum,paypymtdate=paypymtdate,paypayeename1=paypayeename1,paypriority=paypriority,paycurrcode=paycurrcode,paydebitamt=paydebitamt,status=status,payrecurring=payrecurring}

# Newly added

getProcessesPaymentsLIST_page.Query=select paypayref, paytypecode, paydebitaccnum, paypymtdate, paypayeename1, paypriority, paydebitamt, status,payrecurring from (select distinct c.batbatchref as paypayref,b.paytypecode,b.paydebitaccnum,b.paypymtdate as paypymtdate,to_char(max(paypayeename1)) as paypayeename1, b.paypriority, sum(b.paydebitamt) as paydebitamt, (select dmndomainvaldesc from DS_DOMAINS  where dmndomain='D_StatusCode' and dmndomainval=batstatus and dmndomainval  in ('3','44','2','6','12','20','4','16','48')) as status,b.payrecurring from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where a.camcustid=#camcustid:numeric# and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref AND c.deleteflag='N' and b.deleteflag='N' group by c.batbatchref,b.paytypecode,b.paydebitaccnum,b.paypymtdate,c.batstatus,b.paypriority,b.payrecurring having count(*) >= 1  #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getProcessesPaymentsLIST_page.TOColumnMap={paypayref=paypayref,paytypecode=paytypecode,paydebitaccnum=paydebitaccnum,paypymtdate=paypymtdate,paypayeename1=paypayeename1,paypriority=paypriority,paydebitamt=paydebitamt,status=status,payrecurring=payrecurring}
getProcessesPaymentsLIST_page.OutputType=java.util.ArrayList
getProcessesPaymentsLIST.PgnUniqueKeys=paypayref:varchar:DESC
getProcessesPaymentsLIST.SortKeys=paypayref:varchar:DESC



## Delete Query

deleteDirectDebitBatch.Query=update ds_ti_ddt_hdr set deleteflag='Y' where dihbatchnbr=#dihbatchnbr:varchar#
deleteDirectDebitBatch.StmtType=Statement

deleteDirectDebitTransaction.Query=update ds_ti_ddt_det  set deleteflag='Y' where didbatchnbr=#didbatchnbr:varchar#
deleteDirectDebitTransaction.StmtType=Statement

deleteDirectDebitTxns.Query=update ds_ti_ddt_det  set deleteflag='Y' where didbatchnbr=#didbatchnbr:varchar# and didinstrnbr=#didinstrnbr:numeric#
deleteDirectDebitTxns.StmtType=Statement

## Queries for Edit Screens

getAuthoriseLocalData.Query=select distinct a.cpypayeename1,b.bnkdes,a.cpyaccnum ,c.cbrbrname,c.cbrbrcode from ds_payee_ref a,ds_bank_ref b,ds_br_ref c  ,ds_batch d ,ds_pay_txns e where a.cpybankcode=b.bnkcode and c.cbrbrcode=a.cpybranchcode and b.bnkcode=c.cbrbankcode and a.cpypayeename1=#cpypayeename1:varchar# and e.paybatchref=d.batbatchref and d.batbatchref=#batbatchref:varchar# and a.cpypayeeid=e.paypayeeid
getAuthoriseLocalData.TOColumnMap={cpypayeename1=cpypayeename1,bnkdes=bnkdes,cpyaccnum=cpyaccnum,cbrbrname=cbrbrname,cbrbrcode=cbrbrcode}
getAuthoriseLocalData.OutputType=com.tcs.ebw.payments.transferobject.DsPayeeRefNDBTO[]
getAuthoriseLocalData.StmtType=Statement

### Priyanka Payments Queries


#getDebitAccountCombo.Query=select distinct b.camaccnum,b.camaccbal from ds_cust_acct_link a,ds_acc_master b,ds_dap c where a.camcustid=#camcustid:numeric# and a.cmpapplsys='Payments' and a.camappsyscustid=b.camqlcustid and a.camaccnum=b.camaccnum and a.cmpgrpid=c.udpgrpid

#getDebitAccountCombo.Query=select distinct b.camaccnum,(b.camaccbal || '~' || b.camcurrcode) as camaccbal from ds_cust_acct_link a,ds_acc_master b,ds_dap c where a.camcustid=#camcustid:numeric# and a.cmpapplsys='Payments' and a.camappsyscustid=b.camqlcustid and a.camaccnum=b.camaccnum and a.cmpgrpid=c.udpgrpid




##This is for MS

# This is modified by Malli
#getDebitAccountCombo.Query=select distinct udafieldvalue as camaccnum, udafieldvalue as camaccnum from ds_dap_acct_cd a where a.udagrpid='HNItest' and a.udafieldname='Acct Initiation' and a.udadapid in ('dadadap','MSdap1')

getDebitAccountCombo.Query=select distinct dua_accnum as camaccnum, dua_accnum as camaccnum from ds_dap_usracc a where  a.dua_userid=#dua_userid:varchar# and a.dua_grpid=#dua_grpid:varchar# and a.dua_custid=#dua_custid:varchar#

#getDebitAccountCombo.Query=select distinct dua_accnum as camaccnum, dua_accnum as camaccnum from ds_dap_usracc a where  a.dua_userid=#dua_userid:varchar# and a.dua_grpid=#dua_grpid:varchar# and a.dua_custid=#dua_custid:varchar#


getDebitAccountCombo.TOColumnMap={camaccnum=camaccnum,camaccbal=camaccbal}
getDebitAccountCombo.OutputType=java.util.Vector
getDebitAccountCombo.IsSqlj=False
getDebitAccountCombo.StmtType=Statement

#getCreditAccountCombo.Query=select camaccnum,camcurrcode from DS_CUST_ACCT_LINK where camcustid=#camcustid:numeric#
#getCreditAccountCombo.Query=select distinct b.camaccnum,b.camcurrcode from ds_cust_acct_link a,ds_acc_master b where a.camcustid=#camcustid:numeric# and a.cmpapplsys='Payments' and a.camappsyscustid=b.camqlcustid and a.camaccnum=b.camaccnum


getCreditAccountCombo.Query=select distinct dua_accnum as camaccnum, dua_accnum as camaccnum from ds_dap_usracc a where  a.dua_custid=#dua_custid:varchar#
getCreditAccountCombo.TOColumnMap={camaccnum=camaccnum,camcurrcode=camcurrcode}
getCreditAccountCombo.OutputType=java.util.Vector
getCreditAccountCombo.IsSqlj=False
getCreditAccountCombo.StmtType=Statement

getSwiftCodeCombo.Query=select distinct bnkswiftcode,bnkswiftcode from DS_BANK_REF where deleteflag='N' and length(trim(bnkswiftcode))>0 or  bnkswiftcode<> null
getSwiftCodeCombo.TOColumnMap={bnkswiftcode=bnkswiftcode}
getSwiftCodeCombo.OutputType=java.util.Vector


getSwiftCodeLIST_page.Query=select bnkcode, bnkswiftcode, bnkdes, bnkaddress1, bnkaddress2, bnkaddress3 from (select bnkcode,bnkswiftcode,bnkdes,bnkaddress1,bnkaddress2,bnkaddress3 from DS_BANK_REF where  upper(bnkswiftcode) like #bnkswiftcode:varchar# and deleteflag='N' #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getSwiftCodeLIST_page.TOColumnMap={bnkcode=bnkcode,bnkswiftcode=bnkswiftcode,bnkdes=bnkdes,bnkaddress1=bnkaddress1,bnkaddress2=bnkaddress2,bnkaddress3=bnkaddress3}
getSwiftCodeLIST_page.OutputType=java.util.ArrayList
getSwiftCodeLIST.PgnUniqueKeys=bnkcode:varchar:DESC
getSwiftCodeLIST.SortKeys=bnkdes:varchar:DESC



getBankSwiftCodeLIST_page.Query=select bnkdes, bnkcode, bnkswiftcode, bnkaddress1, bnkaddress2, bnkaddress3 from (select distinct bnkdes,bnkcode,bnkswiftcode,bnkaddress1,bnkaddress2,bnkaddress3 from DS_BANK_REF where  bnkdes like upper(#bnkdes:varchar#) and deleteflag='N' #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getBankSwiftCodeLIST_page.TOColumnMap={bnkdes=bnkdes,bnkcode=bnkcode,bnkswiftcode=bnkswiftcode,bnkaddress1=bnkaddress1,bnkaddress2=bnkaddress2,bnkaddress3=bnkaddress3}
getBankSwiftCodeLIST_page.OutputType=java.util.ArrayList
getBankSwiftCodeLIST.PgnUniqueKeys=bnkcode:varchar:DESC
getBankSwiftCodeLIST.SortKeys=bnkdes:varchar:DESC




getInterSwiftCodeLIST_page.Query=select bnkcode, bnkswiftcode, bnkdes, bnkaddress1, bnkaddress2, bnkaddress3 from (select bnkcode,bnkswiftcode,bnkdes,bnkaddress1,bnkaddress2,bnkaddress3 from DS_BANK_REF where upper(bnkswiftcode) like #bnkswiftcode:varchar# and deleteflag='N' #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getInterSwiftCodeLIST_page.TOColumnMap={bnkcode=bnkcode,bnkswiftcode=bnkswiftcode,bnkdes=bnkdes,bnkaddress1=bnkaddress1,bnkaddress2=bnkaddress2,bnkaddress3=bnkaddress3}
getInterSwiftCodeLIST_page.OutputType=java.util.ArrayList
getInterSwiftCodeLIST.PgnUniqueKeys=bnkcode:varchar:DESC
getInterSwiftCodeLIST.SortKeys=bnkdes:varchar:DESC




getInterBankSwiftCodeLIST_page.Query=select bnkdes, bnkcode, bnkswiftcode, bnkaddress1, bnkaddress2, bnkaddress3 from (select distinct bnkdes,bnkcode,bnkswiftcode,bnkaddress1,bnkaddress2,bnkaddress3 from DS_BANK_REF where upper(bnkdes) like #bnkdes:varchar# and deleteflag='N' #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getInterBankSwiftCodeLIST_page.TOColumnMap={bnkdes=bnkdes,bnkcode=bnkcode,bnkswiftcode=bnkswiftcode,bnkaddress1=bnkaddress1,bnkaddress2=bnkaddress2,bnkaddress3=bnkaddress3}
getInterBankSwiftCodeLIST_page.OutputType=java.util.ArrayList
getInterBankSwiftCodeLIST.PgnUniqueKeys=bnkcode:varchar:DESC
getInterBankSwiftCodeLIST.SortKeys=bnkdes:varchar:DESC




getPayStatusCombo.Query=select dmndomainval,dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainvaldesc in ('Sent Back','Incomplete')
#getPayStatusCombo.Query=select dmndomainval,dmndomainvaldesc from DS_DOMAINS where dmndomain='D_BeneStatusEdit'
getPayStatusCombo.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getPayStatusCombo.OutputType=java.util.Vector
getPayStatusCombo.IsSqlj=False
getPayStatusCombo.StmtType=Statement

getPayStatusComboSwift.Query=select dmndomainval,dmndomainvaldesc from DS_DOMAINS where dmndomain='D_BeneStatusView' and dmndomainvaldesc NOT IN ('Incomplete','Sent Back','Authorized')
getPayStatusComboSwift.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getPayStatusComboSwift.OutputType=java.util.Vector
getPayStatusComboSwift.IsSqlj=False
getPayStatusComboSwift.StmtType=Statement

#getBeneficiaryCombo.Query=select paypayeename1,paypayeename1 from  DS_ACC_MASTER a,DS_PAY_TXNS b where a.camqlcustid=#camqlcustid:numeric# and a.camaccnum=b.paydebitaccnum and length(trim(paypayeename1))>0 or  paypayeename1<> null
 
getBeneficiaryCombo.Query=select distinct paypayeename1,paypayeename1 from  ds_cust_acct_link a, ds_acc_master b,DS_PAY_TXNS c where a.camcustid=#camcustid:numeric# and a.camaccnum=c.paydebitaccnum and length(trim(c.paypayeename1))>0 or  c.paypayeename1<> null and  a.cmpapplsys='Payments' order by c.paypayeename1
getBeneficiaryCombo.TOColumnMap={paypayeename1=paypayeename1,paypayeename1=paypayeename1}
getBeneficiaryCombo.OutputType=java.util.Vector
getBeneficiaryCombo.IsSqlj=False
getBeneficiaryCombo.StmtType=Statement


#getBank.Query=select distinct bnkcode,bnkdes from  ds_bank_ref where deleteflag='N'
#getBank.TOColumnMap={bnkcode=bnkcode,bnkdes=bnkdes}
#getBank.OutputType=java.util.Vector


#getSwiftCode.Query=select distinct (a.bnkswiftcode  || '~' || a.bnkaddress1 || '~' ||a.bnkaddress2 || '~' || a.bnkaddress3 || '~' || a.bnkcode || '~' || a.bnkdes ) as bnkcode,a.bnkdes from  DS_BANK_REF a, DS_PAYEE_REF b where a.deleteflag='N'
#getSwiftCode.TOColumnMap={bnkcode=bnkcode,bnkdes=bnkdes,cpybankswiftcode=cpybankswiftcode}
#getSwiftCode.OutputType=java.util.Vector

getAmountType.Query=select dmndomainval,dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_AmountType'
getAmountType.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getAmountType.OutputType=java.util.Vector

#getBranch.Query=select distinct cbrbrname,cbrbrcode  from  DS_BR_REF where cbrbankcode=#cbrbankcode:varchar# and deleteflag='N'
#getBranch.TOColumnMap={cbrbrname=cbrbrname,cbrbrname=cbrbrname}
#getBranch.OutputType=java.util.Vector
#getBranch.StmtType=Statement

getBankName.Query=select distinct bnkcode,bnkdes from ds_bank_ref where deleteflag='N'
getBankName.TOColumnMap={bnkcode=bnkcode,bnkdes=bnkdes}
getBankName.OutputType=java.util.Vector

getBranchName.Query=select distinct cbrbrname,(cbrbankcode || '-' || cbrbrcode) from DS_BR_REF where cbrbankcode=#cbrbankcode:varchar# and deleteflag='N'

#getBranchName.Query=select distinct cbrbrname,cbrbrcode from DS_BR_REF where cbrbankcode=#cbrbankcode:varchar# and deleteflag='N'

getBranchName.TOColumnMap={cbrbrname=cbrbrname,cbrbrname=cbrbrname}
getBranchName.OutputType=java.util.Vector
getBranchName.StmtType=Statement

#getBranchCode.Query=select distinct a.cbrbrcode,a.cbrbrcode from  ds_br_ref a where a.cbrbrname=#cbrbrname:varchar#
getBranchCode.TOColumnMap={cbrbrcode=cbrbrcode,cbrbrcode=cbrbrcode}
getBranchCode.OutputType=java.util.Vector
getBranchCode.StmtType=Statement

getCurrency.Query=select distinct curcurrcode,curcurrcode from  DS_CURR_REF
getCurrency.TOColumnMap={curcurrcode,curcurrmajor}
getCurrency.OutputType=java.util.Vector

getBeneficiary.Query=select distinct dmndomainval,dmndomaindesc from  DS_DOMAINS where dmndomain='D_BeneficiaryType'
getBeneficiary.TOColumnMap={dmndomainval=dmndomainval,dmndomaindesc=dmndomaindesc}
getBeneficiary.OutputType=java.util.Vector

getEditStatus.Query=select distinct dmndomainval,dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_BeneStatusEdit'
getEditStatus.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getEditStatus.OutputType=java.util.Vector

getViewStatus.Query=select distinct dmndomainval,dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_BeneStatusView'
getViewStatus.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getViewStatus.OutputType=java.util.Vector



#getAccountPayments.Query=Select camaccbal from Ds_Acc_Master where camqlcustid=#camqlcustid:numeric#
#getAccountPayments.Query=Select distinct b.camaccbal from ds_cust_acct_link a,Ds_Acc_Master b where a.camcustid=#camcustid:numeric# and a.cmpapplsys='Payments' and camappsyscustid=camqlcustid and a.camaccnum=b.camaccnum
#getAccountPayments.TOColumnMap={camaccbal=camaccbal}
#getAccountPayments.OutputType=com.tcs.ebw.payments.transferobject.DsAccMasterTO[]
#getAccountPayments.IsSqlj=false
#getAccountPayments.StmtType=Statement

---------------------------------------------------------------
## Insert Queries for creation of Beneficiaries

#setLocalBeneficiary.Query=Insert into Ds_Payee_Ref(cpygrpid,cpypayeeid,cpypayeename1,cpyadd1,cpyadd2,cpyadd3,cpyaccnum,cpybankcode,cpybranchcode,createdby,createddate,modifiedby,modifieddate,deleteflag,versionnum,cpystatus,cpybenetype,cpypaymentscount,cpythresholdamt,cpycurrency) values (#cpygrpid:varchar#,#cpypayeeid:varchar#,#cpypayeename1:varchar#,#cpyadd1:varchar#,#cpyadd2:varchar#,#cpyadd3:varchar#,#cpyaccnum:varchar#,#cpybankcode:varchar#,#cpybranchcode:varchar#,#createdby:varchar#,sysdate,#modifiedby:varchar#,sysdate,#deleteflag:varchar#,#versionnum:numeric#,1,1,#cpypaymentscount:numeric#,#cpythresholdamt:numeric#,#cpycurrency:varchar#)

setLocalBeneficiary.Query=Insert into Ds_Payee_Ref(cpygrpid,cpypayeeid,cpypayeename1,cpyadd1,cpyadd2,cpyadd3,cpyaccnum,cpybankcode,cpybranchcode,createdby,createddate,modifiedby,modifieddate,deleteflag,versionnum,cpystatus,cpybenetype,cpypaymentscount,cpythresholdamt) values (#cpygrpid:varchar#,#cpypayeeid:varchar#,lower(#cpypayeename1:varchar#),#cpyadd1:varchar#,#cpyadd2:varchar#,#cpyadd3:varchar#,#cpyaccnum:varchar#,#cpybankcode:varchar#,#cpybranchcode:varchar#,#createdby:varchar#,sysdate,#modifiedby:varchar#,sysdate,#deleteflag:varchar#,#versionnum:numeric#,1,1,#cpypaymentscount:numeric#,#cpythresholdamt:numeric#)

setLocalBeneficiary.StmtType=Statement

setSwiftBeneficiary.Query=Insert into Ds_Payee_Ref(cpygrpid,cpypayeeid,cpypayeename1,cpypayeerefno,cpyadd1,cpyadd2,cpyadd3,cpyaccnum,cpybankcode,cpybankswiftcode,cpyinterbankswiftcode,cpyintermediarybankcode,cpyinterbankaccnum,cpypaymentscount,cpythresholdamt,createdby,createddate,modifiedby,modifieddate,deleteflag,versionnum,cpystatus,cpybenetype,cpysortcode) values (#cpygrpid:varchar#,#cpypayeeid:varchar#,lower(#cpypayeename1:varchar#),#cpypayeerefno:varchar#,#cpyadd1:varchar#,#cpyadd2:varchar#,#cpyadd3:varchar#,#cpyaccnum:varchar#,#cpybankcode:varchar#,#cpybankswiftcode:varchar#,#cpyinterbankswiftcode:varchar#,#cpyintermediarybankcode:varchar#,#cpyinterbankaccnum:varchar#,#cpypaymentscount:numeric#,#cpythresholdamt:numeric#,#createdby:varchar#,sysdate,#modifiedby:varchar#,sysdate,#deleteflag:varchar#,#versionnum:numeric#,1,2,#cpysortcode:numeric#)
setSwiftBeneficiary.StmtType=Statement

## Original Query
#setAccountTransfer.Query=Insert into DS_PAY_TXNS (paytrxkey,paygroupid,paybatchref,paypayref,paydebitaccnum,paycurrcode,paypymtdate,paypayeeaccnum,paypaydetails1,createdby,createddate,modifiedby,modifieddate,deleteflag,versionnum,paydebitamt,payccsstatuscode,paytypecode) values (#paytrxkey:numeric#,#paygroupid:varchar#,#paybatchref:varchar#,#paypayref:varchar#,#paydebitaccnum:varchar#,#paycurrcode:varchar#,#paypymtdate:date#,#paypayeeaccnum:varchar#,#paypaydetails1:varchar#,#createdby:varchar#,sysdate,#modifiedby:varchar#,sysdate,'N',#versionnum:numeric#,#paydebitamt:numeric#,'2',(select dmndomainval from ds_domains where dmndomain='D_PaymentTypeCode' and dmndomainvaldesc='Telegraphic Transfer'))

## For Demo

## Final Query 
#setAccountTransfer.Query=Insert into DS_PAY_TXNS (paytrxkey,paygroupid,paybatchref,paypayref,paydebitaccnum,paycurrcode,paypymtdate,paypayeeaccnum,paypaydetails1,createdby,createddate,modifiedby,modifieddate,deleteflag,versionnum,paydebitamt,payccsstatuscode,paytypecode,paycustref,paypayeebankcode,paypayeename1) values (#paytrxkey:numeric#,#paygroupid:varchar#,#paybatchref:varchar#,#paypayref:varchar#,#paydebitaccnum:varchar#,#paycurrcode:varchar#,#paypymtdate:date#,#paypayeeaccnum:varchar#,#paypaydetails1:varchar#,#createdby:varchar#,sysdate,#modifiedby:varchar#,sysdate,'N',#versionnum:numeric#,#paydebitamt:numeric#,#payccsstatuscode:varchar#,(select dmndomainval from ds_domains where dmndomain='D_PaymentTypeCode' and dmndomainvaldesc='Book Transfer'),#paycustref:varchar#,'4598','Self')

setAccountTransfer.Query=Insert into DS_PAY_TXNS (paytrxkey,paygroupid,paybatchref,paypayref,paydebitaccnum,paycurrcode,paypymtdate,paypayeeaccnum,paypaydetails1,createdby,createddate,modifiedby,modifieddate,deleteflag,versionnum,paydebitamt,payccsstatuscode,paytypecode,paycustref,paypayeebankcode,paypayeename1,payrecurring,payfxcustomerfxrate) values (#paytrxkey:numeric#,#paygroupid:varchar#,#paybatchref:varchar#,#paypayref:varchar#,#paydebitaccnum:varchar#,#paycurrcode:varchar#,#paypymtdate:date#,#paypayeeaccnum:varchar#,#paypaydetails1:varchar#,#createdby:varchar#,sysdate,#modifiedby:varchar#,sysdate,'N',#versionnum:numeric#,#paydebitamt:numeric#,#payccsstatuscode:varchar#,#paytypecode:varchar#,#paycustref:varchar#,'4598','Self','N',#payfxcustomerfxrate:numeric#)


setAccountTransfer.StmtType=PreparedStatement


-----------------------------------------------------------------
# Select Queries
##Queries to show the List for Local and Swift Beneficiary for Edit Screen

getLocalSearchLIST_page.Query=select cpypayeeid, cpypayeename1, bnkdes, cpybranchcode, cpyaccnum, status from (Select distinct cpypayeeid,cpypayeename1,bnk.bnkdes,cpybranchcode,cpyaccnum,(select dmndomainvaldesc from Ds_Domains where dmndomain='D_BeneStatusEdit' and dmndomainval=a.cpystatus) as status from Ds_Payee_Ref a,Ds_Bank_Ref bnk,Ds_Br_Ref br where a.cpybankcode=bnk.bnkcode and br.cbrbankcode=a.cpybankcode and br.cbrbrcode=a.cpybranchcode and bnk.bnkcode=br.cbrbankcode and bnk.bnkctrycode=br.cbrctrycode  and a.cpystatus in(1,2) and  cpygrpid=#cpygrpid:varchar# and cpybenetype=#cpybenetype:numeric# and upper(cpypayeename1) like #cpypayeename1:varchar# and cpybankcode like #cpybankcode:varchar# and cpyaccnum like #cpyaccnum:varchar# and cpystatus like #cpystatus:numeric# and a.deleteflag='N' #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getLocalSearchLIST_page.TOColumnMap={cpypayeeid=cpypayeeid,cpypayeename1=cpypayeename1,bnkdes=bnkdes,cpybranchcode=cpybranchcode,cpyaccnum=cpyaccnum,status=status}
getLocalSearchLIST_page.OutputType=java.util.ArrayList
getLocalSearchLIST.IsSqlj=false
getLocalSearchLIST.StmtType=Statement
getLocalSearchLIST.PgnUniqueKeys=cpypayeeid:varchar:DESC
getLocalSearchLIST.SortKeys=cpypayeeid:varchar:DESC




getSwiftSearchLIST_page.Query=select cpypayeeid, cpypayeename1, bnkdes, cpybankswiftcode, cpyaccnum, status from (Select distinct cpypayeeid,cpypayeename1,bnkdes,cpybankswiftcode,cpyaccnum,(select dmndomainvaldesc from Ds_Domains where dmndomain='D_BeneStatusEdit' and dmndomainval=a.cpystatus) as status from Ds_Payee_Ref a,Ds_Bank_Ref bnk,Ds_Br_Ref br where a.cpybankcode=bnk.bnkcode and bnk.bnkswiftcode=a.cpybankswiftcode and cpygrpid=#cpygrpid:varchar# and cpybenetype=#cpybenetype:numeric# and upper(cpypayeename1) like #cpypayeename1:varchar# and cpybankcode like #cpybankcode:varchar# and cpystatus in (1,2) and cpybankswiftcode like #cpybankswiftcode:varchar# and cpyaccnum like #cpyaccnum:varchar# and cpystatus like #cpystatus:numeric# and a.deleteflag='N' #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getSwiftSearchLIST_page.TOColumnMap={cpypayeeid=cpypayeeid,cpypayeename1=cpypayeename1,bnkdes=bnkdes,cpybankswiftcode=cpybankswiftcode,cpyaccnum=cpyaccnum,status=status}
getSwiftSearchLIST_page.OutputType=java.util.ArrayList
getSwiftSearchLIST.IsSqlj=false
getSwiftSearchLIST.StmtType=Statement
getSwiftSearchLIST.PgnUniqueKeys=cpypayeeid:varchar:DESC
getSwiftSearchLIST.SortKeys=cpypayeeid:varchar:DESC



## To show the Data on Edit Page for Local and Swift

getLocalData.Query=select cpypayeename1,cpybankcode,cpyadd1,cpyadd2,cpyadd3,cpyaccnum,(select cbrbrname from ds_br_ref where cbrbankcode=cpybankcode and cbrbrcode=cpybranchcode) as cbrbrname,cpybranchcode,cpythresholdamt,cpypaymentscount,cpycurrency from ds_payee_ref where cpygrpid=#cpygrpid:varchar# and cpypayeeid=#cpypayeeid:varchar# and cpypayeename1=#cpypayeename1:varchar#
getLocalData.TOColumnMap={cpypayeename1=cpypayeename1,cpybankcode=cpybankcode,cpyadd1=cpyadd1,cpyadd2=cpyadd2,cpyadd3=cpyadd3,cpyaccnum=cpyaccnum,cbrbrname=cbrbrname,cpybranchcode=cpybranchcode,cpythresholdamt=cpythresholdamt,cpypaymentscount=cpypaymentscount,cpycurrency=cpycurrency}
getLocalData.OutputType=com.tcs.ebw.payments.transferobject.DsPayeeRefNDBTO[]
getLocalData.IsSqlj=false
getLocalData.StmtType=Statement


#getSwiftData.Query=select cpypayeename1,cpybankcode,cpyadd1,cpyadd2,cpyadd3,cpypayeerefno,cpythresholdamt,cpypaymentscount,cpyaccnum,cpybankswiftcode,cpyintermediarybankcode,cpyinterbankswiftcode,cpyinterbankaccnum from ds_payee_ref where cpygrpid=#cpygrpid:varchar# and cpypayeeid=#cpypayeeid:varchar# and cpypayeename1=#cpypayeename1:varchar#

getSwiftData.Query=select distinct cpypayeename1,cpybankcode,cpyadd1,cpyadd2,cpyadd3,cpypayeerefno,cpythresholdamt,cpypaymentscount,cpyaccnum,cpybankswiftcode,cpyintermediarybankcode,cpyinterbankswiftcode,cpyinterbankaccnum,bnk.bnkaddress1 as address1,bnk.bnkaddress2 as address2,bnk.bnkaddress3 as address3,interbnk.bnkaddress1 as address4,interbnk.bnkaddress2 as address5,interbnk.bnkaddress3 as address6,cpysortcode from ds_payee_ref a,Ds_Bank_Ref bnk,Ds_Bank_Ref interbnk where a.cpybankcode=bnk.bnkcode and cpygrpid=#cpygrpid:varchar# and cpypayeeid=#cpypayeeid:varchar# and cpypayeename1=#cpypayeename1:varchar# and interbnk.bnkcode=cpyintermediarybankcode and interbnk.bnkswiftcode=cpyinterbankswiftcode 
getSwiftData.TOColumnMap={cpypayeename1=cpypayeename1,cpybankcode=cpybankcode,cpyadd1=cpyadd1,cpyadd2=cpyadd2,cpyadd3=cpyadd3,cpypayeerefno=cpypayeerefno,cpythresholdamt=cpythresholdamt,cpyaccnum=cpyaccnum,cpybankswiftcode=cpybankswiftcode,cpyintermediarybankcode=cpyintermediarybankcode,cpyinterbankswiftcode=cpyinterbankswiftcode,cpyinterbankaccnum=cpyinterbankaccnum,address1=address1,address2=address2,address3=address3,address4=address4,address5=address5,address6=address6,cpysortcode=cpysortcode}
getSwiftData.OutputType=com.tcs.ebw.payments.transferobject.DsPayeeRefNDBTO[]
getSwiftData.IsSqlj=false
getSwiftData.StmtType=Statement



##Authorize Bene Queries

getLocalAuthorizeLIST_page.Query=select cpypayeeid, cpypayeename1, bnkdes, cpybranchcode, cpyaccnum, status from (Select distinct cpypayeeid,cpypayeename1,bnkdes,cpybranchcode,cpyaccnum,(select dmndomainvaldesc from Ds_Domains where dmndomain='D_BeneStatusView' and dmndomainval=3) as status from Ds_Payee_Ref a,Ds_Bank_Ref bnk,Ds_Br_Ref br where a.cpybankcode=bnk.bnkcode and br.cbrbankcode=a.cpybankcode and br.cbrbrcode=a.cpybranchcode and bnk.bnkcode=br.cbrbankcode and bnk.bnkctrycode=br.cbrctrycode  and cpygrpid=#cpygrpid:varchar# and cpybenetype=#cpybenetype:numeric# and lower(cpypayeename1) like lower(#cpypayeename1:varchar#) and cpybankcode like #cpybankcode:varchar# and cpyaccnum like #cpyaccnum:varchar# and cpystatus=3 and a.authorisedby is NULL and a.authoriseddate is NULL and a.deleteflag='N' #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getLocalAuthorizeLIST_page.TOColumnMap={cpypayeeid=cpypayeeid,cpypayeename1=cpypayeename1,bnkdes=bnkdes,cpybranchcode=cpybranchcode,cpyaccnum=cpyaccnum,status=status}
getLocalAuthorizeLIST_page.OutputType=java.util.ArrayList
getLocalAuthorizeLIST.IsSqlj=false
getLocalAuthorizeLIST.StmtType=Statement
getLocalAuthorizeLIST.PgnUniqueKeys=cpypayeeid:varchar:DESC
getLocalAuthorizeLIST.SortKeys=cpypayeename1:varchar:DESC



getSwiftAuthorizeLIST_page.Query=select cpypayeeid, cpypayeename1, bnkdes, cpybankswiftcode, cpyaccnum, status from (Select distinct cpypayeeid,cpypayeename1,bnkdes,cpybankswiftcode,cpyaccnum,(select dmndomainvaldesc from Ds_Domains where dmndomain='D_BeneStatusView' and dmndomainval=3) as status from Ds_Payee_Ref a,Ds_Bank_Ref bnk,Ds_Br_Ref br where a.cpybankcode=bnk.bnkcode and bnk.bnkswiftcode=a.cpybankswiftcode and cpygrpid=#cpygrpid:varchar# and cpybenetype=#cpybenetype:numeric# and lower(cpypayeename1) like lower(#cpypayeename1:varchar#) and cpybankcode like #cpybankcode:varchar# and cpybankswiftcode like #cpybankswiftcode:varchar# and cpyaccnum like #cpyaccnum:varchar# and cpystatus=3 and a.authorisedby is NULL and a.authoriseddate is NULL and a.deleteflag='N' #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getSwiftAuthorizeLIST_page.TOColumnMap={cpypayeeid=cpypayeeid,cpypayeename1=cpypayeename1,bnkdes=bnkdes,cpybankswiftcode=cpybankswiftcode,cpyaccnum=cpyaccnum,status=status}
getSwiftAuthorizeLIST_page.OutputType=java.util.ArrayList
getSwiftAuthorizeLIST.IsSqlj=false
getSwiftAuthorizeLIST.StmtType=Statement
getSwiftAuthorizeLIST.PgnUniqueKeys=cpypayeeid:varchar:DESC
getSwiftAuthorizeLIST.SortKeys=cpypayeename1:varchar:DESC



##View Bene Queries to show the search data in List for Local and Swift

getLocalViewLIST_page.Query=select cpypayeeid, cpypayeename1, bnkdes, cpybranchcode, cpyaccnum, status from (Select distinct cpypayeeid,cpypayeename1,bnkdes,cpybranchcode,cpyaccnum,(select dmndomainvaldesc from Ds_Domains where dmndomain='D_BeneStatusView' and dmndomainval=a.cpystatus) as status from Ds_Payee_Ref a,Ds_Bank_Ref bnk,Ds_Br_Ref br where a.cpybankcode=bnk.bnkcode and br.cbrbankcode=a.cpybankcode and br.cbrbrcode=a.cpybranchcode and bnk.bnkcode=br.cbrbankcode and bnk.bnkctrycode=br.cbrctrycode  and cpygrpid=#cpygrpid:varchar# and cpybenetype=#cpybenetype:numeric# and upper(cpypayeename1) like #cpypayeename1:varchar# and cpybankcode like #cpybankcode:varchar# and cpyaccnum like #cpyaccnum:varchar# and cpystatus like #cpystatus:numeric# and a.deleteflag='N' #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getLocalViewLIST_page.TOColumnMap={cpypayeeid=cpypayeeid,cpypayeename1=cpypayeename1,bnkdes=bnkdes,cpybranchcode=cpybranchcode,cpyaccnum=cpyaccnum,status=status}
getLocalViewLIST_page.OutputType=java.util.ArrayList
getLocalViewLIST.IsSqlj=false
getLocalViewLIST.StmtType=Statement
getLocalViewLIST.PgnUniqueKeys=cpypayeeid:varchar:DESC
getLocalViewLIST.SortKeys=cpypayeeid:varchar:DESC



getSwiftViewLIST_page.Query=select cpypayeeid, cpypayeename1, bnkdes, cpybankswiftcode, cpyaccnum, status from (Select distinct cpypayeeid,cpypayeename1,bnkdes,cpybankswiftcode,cpyaccnum,(select dmndomainvaldesc from Ds_Domains where dmndomain='D_BeneStatusView' and dmndomainval=a.cpystatus) as status from Ds_Payee_Ref a,Ds_Bank_Ref bnk,Ds_Br_Ref br where a.cpybankcode=bnk.bnkcode and bnk.bnkswiftcode=a.cpybankswiftcode and cpygrpid=#cpygrpid:varchar# and cpybenetype=#cpybenetype:numeric# and upper(cpypayeename1) like #cpypayeename1:varchar# and cpybankcode like #cpybankcode:varchar# and cpybankswiftcode like #cpybankswiftcode:varchar# and cpyaccnum like #cpyaccnum:varchar# and cpystatus like #cpystatus:numeric# and a.deleteflag='N' #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getSwiftViewLIST_page.TOColumnMap={cpypayeeid=cpypayeeid,cpypayeename1=cpypayeename1,bnkdes=bnkdes,cpybankswiftcode=cpybankswiftcode,cpyaccnum=cpyaccnum,status=status}
getSwiftViewLIST_page.OutputType=java.util.ArrayList
getSwiftViewLIST.IsSqlj=false
getSwiftViewLIST.StmtType=Statement
getSwiftViewLIST.PgnUniqueKeys=cpypayeeid:varchar:DESC
getSwiftViewLIST.SortKeys=cpypayeeid:varchar:DESC



## Query to show the details For Local & Swift Beneficiary for View Mode:

getViewLocal.Query=select cpypayeename1,bnkdes,cpyadd1,cpyadd2,cpyadd3,cpyaccnum,(select cbrbrname from ds_br_ref where cbrbankcode=cpybankcode and cbrbrcode=cpybranchcode) as cbrbrname,cpybranchcode,cpythresholdamt,cpypaymentscount,cpycurrency from ds_payee_ref a,Ds_Bank_Ref bnk,Ds_Br_Ref br where a.cpybankcode=bnk.bnkcode and br.cbrbankcode=a.cpybankcode and br.cbrbrcode=a.cpybranchcode and bnk.bnkcode=br.cbrbankcode and bnk.bnkctrycode=br.cbrctrycode and cpygrpid=#cpygrpid:varchar# and cpypayeeid=#cpypayeeid:varchar# and cpypayeename1=#cpypayeename1:varchar#
getViewLocal.TOColumnMap={cpypayeename1=cpypayeename1,bnkdes=bnkdes,cpyadd1=cpyadd1,cpyadd2=cpyadd2,cpyadd3=cpyadd3,cpyaccnum=cpyaccnum,cbrbrname=cbrbrname,cpybranchcode=cpybranchcode,cpythresholdamt=cpythresholdamt,cpypaymentscount=cpypaymentscount,cpycurrency=cpycurrency}
getViewLocal.OutputType=com.tcs.ebw.payments.transferobject.DsPayeeRefNDBTO[]
getViewLocal.IsSqlj=false
getViewLocal.StmtType=Statement

getViewSwift.Query=select distinct cpypayeename1,bnk.bnkdes,cpyadd1,cpyadd2,cpyadd3,cpypayeerefno,cpythresholdamt,cpypaymentscount,cpyaccnum,cpybankswiftcode,interbnk.bnkdes as bnkdes1,cpyinterbankswiftcode,cpyinterbankaccnum,bnk.bnkaddress1 as address1,bnk.bnkaddress2 as address2,bnk.bnkaddress3 as address3,interbnk.bnkaddress1 as address4,interbnk.bnkaddress2 as address5,interbnk.bnkaddress3 as address6  from ds_payee_ref a,Ds_Bank_Ref bnk,Ds_Bank_Ref interbnk where a.cpybankcode=bnk.bnkcode and cpygrpid=#cpygrpid:varchar# and cpypayeeid=#cpypayeeid:varchar# and cpypayeename1=#cpypayeename1:varchar# and  interbnk.bnkswiftcode=cpyinterbankswiftcode 
getViewSwift.TOColumnMap={cpypayeename1=cpypayeename1,bnkdes=bnkdes,cpyadd1=cpyadd1,cpyadd2=cpyadd2,cpyadd3=cpyadd3,cpypayeerefno=cpypayeerefno,cpythresholdamt=cpythresholdamt,cpypaymentscount=cpypaymentscount,cpyaccnum=cpyaccnum,cpybankswiftcode=cpybankswiftcode,bnkdes1=bnkdes1,cpyinterbankswiftcode=cpyinterbankswiftcode,cpyinterbankaccnum=cpyinterbankaccnum,address1=address1,address2=address2,address3=address3,address4=address4,address5=address5,address6=address6}
getViewSwift.OutputType=com.tcs.ebw.payments.transferobject.DsPayeeRefNDBTO[]
getViewSwift.IsSqlj=false
getViewSwift.StmtType=Statement

#and bnk.bnkswiftcode=cpybankswiftcode
------------------------------------------------------------------

#Remitter Queries

setRemitter.Query=Insert into Ds_Remitter(drgrpid,dremitterid,dremittername1,drmandaterefno,dradd1,dradd2,dradd3,draccnum,drbankcode,drbranchcode,dreffectivedt,drenddt,dramounttype,drcurrency,dramount,createdby,createddate,modifiedby,modifieddate,deleteflag,versionnum,drstatus) values (#drgrpid:varchar#,#dremitterid:varchar#,lower(#dremittername1:varchar#),#drmandaterefno:varchar#,#dradd1:varchar#,#dradd2:varchar#,#dradd3:varchar#,#draccnum:varchar#,#drbankcode:varchar#,#drbranchcode:varchar#,#dreffectivedt:date#,#drenddt:date#,#dramounttype:numeric#,#drcurrency:varchar#,#dramount:numeric#,#createdby:varchar#,sysdate,#modifiedby:varchar#,sysdate,#deleteflag:varchar#,#versionnum:numeric#,1)
setRemitter.StmtType=Statement

#---Query to get the data in List Form for Edit,Authorize and View---


#getEditRemSearchLIST_page.Query=select dremitterid,drmandaterefno, dremittername1, bnkdes, drbranchcode, draccnum, status from (Select distinct dremitterid,drmandaterefno,dremittername1,bnkdes,drbranchcode,draccnum,(select dmndomainvaldesc from Ds_Domains where dmndomain='D_BeneStatusEdit' and dmndomainval=a.drstatus) as status from Ds_Remitter a,Ds_Bank_Ref bnk,Ds_Br_Ref br where a.drbankcode=bnk.bnkcode and br.cbrbankcode=a.drbankcode and br.cbrbrcode=a.drbranchcode and bnk.bnkcode=br.cbrbankcode and bnk.bnkctrycode=br.cbrctrycode and drgrpid=#drgrpid:varchar# and dremittername1 like #dremittername1:varchar# and draccnum like #draccnum:varchar# and dreffectivedt like #dreffectivedt:date# and drenddt like #drenddt:date#  and drstatus like #drstatus:numeric# and a.deleteflag='N' and a.drbankcode like #drbankcode:varchar#  #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

#getEditRemSearchLIST_page.Query=select dremitterid,drmandaterefno, dremittername1, bnkdes, drbranchcode, draccnum, status from (Select distinct dremitterid,drmandaterefno,dremittername1,bnkdes,drbranchcode,draccnum,(select dmndomainvaldesc from Ds_Domains where dmndomain='D_BeneStatusEdit' and dmndomainval=a.drstatus) as status from Ds_Remitter a,Ds_Bank_Ref bnk,Ds_Br_Ref br where a.drbankcode=bnk.bnkcode and br.cbrbankcode=a.drbankcode and br.cbrbrcode=a.drbranchcode and bnk.bnkcode=br.cbrbankcode and bnk.bnkctrycode=br.cbrctrycode and drgrpid=#drgrpid:varchar# and upper(dremittername1) like #dremittername1:varchar# and draccnum like #draccnum:varchar# and a.dreffectivedt BETWEEN (#dreffectivedt:date#) AND (#drenddt:date#)  and drstatus like #drstatus:numeric# and a.drmandaterefno like #drmandaterefno:varchar# and a.deleteflag='N' and a.drbankcode like #drbankcode:varchar#  #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getEditRemSearchLIST_page.Query=select dremitterid,drmandaterefno, dremittername1, bnkdes, drbranchcode, draccnum, status from (Select distinct dremitterid,drmandaterefno,dremittername1,bnkdes,drbranchcode,draccnum,(select dmndomainvaldesc from Ds_Domains where dmndomain='D_BeneStatusEdit' and dmndomainval=a.drstatus) as status from Ds_Remitter a,Ds_Bank_Ref bnk,Ds_Br_Ref br where a.drbankcode=bnk.bnkcode and br.cbrbankcode=a.drbankcode and br.cbrbrcode=a.drbranchcode and bnk.bnkcode=br.cbrbankcode and bnk.bnkctrycode=br.cbrctrycode and drgrpid=#drgrpid:varchar# and upper(dremittername1) like #dremittername1:varchar# and draccnum like #draccnum:varchar# and a.dreffectivedt BETWEEN (#dreffectivedt:date#) AND (#drenddt:date#)  and drstatus in ('1','2') and a.drmandaterefno like #drmandaterefno:varchar# and a.deleteflag='N' and a.drbankcode like #drbankcode:varchar#  #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getEditRemSearchLIST_page.TOColumnMap={dremitterid=dremitterid,drmandaterefno=drmandaterefno,dremittername1=dremittername1,bnkdes=bnkdes,drbranchcode=drbranchcode,draccnum=draccnum,status=status}
getEditRemSearchLIST_page.OutputType=java.util.ArrayList
getEditRemSearchLIST.IsSqlj=false
getEditRemSearchLIST.StmtType=Statement
getEditRemSearchLIST.PgnUniqueKeys=dremitterid:varchar:DESC
getEditRemSearchLIST.SortKeys=dremitterid:varchar:DESC




#getAuthoriseRemSearchLIST_page.Query=select dremitterid, drmandaterefno, dremittername1, bnkdes, drbranchcode, draccnum, status from (Select distinct dremitterid,drmandaterefno,dremittername1,bnkdes,drbranchcode,draccnum,(select dmndomainvaldesc from Ds_Domains where dmndomain='D_BeneStatusView' and dmndomainval=3) as status from Ds_Remitter a,Ds_Bank_Ref bnk,Ds_Br_Ref br where a.drbankcode=bnk.bnkcode and br.cbrbankcode=a.drbankcode and br.cbrbrcode=a.drbranchcode and bnk.bnkcode=br.cbrbankcode and bnk.bnkctrycode=br.cbrctrycode and drgrpid=#drgrpid:varchar# and dremittername1 like #dremittername1:varchar# and dreffectivedt like #dreffectivedt:date# and drenddt like #drenddt:date#  and draccnum like #draccnum:varchar# and drmandaterefno like #drmandaterefno:varchar# and drstatus=3 and a.authorisedby is NULL and a.authoriseddate is NULL and a.deleteflag='N' and a.drbankcode like #drbankcode:varchar#  #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getAuthoriseRemSearchLIST_page.Query=select dremitterid, drmandaterefno, dremittername1, bnkdes, drbranchcode, draccnum, status from (Select distinct dremitterid,drmandaterefno,dremittername1,bnkdes,drbranchcode,draccnum,(select dmndomainvaldesc from Ds_Domains where dmndomain='D_BeneStatusView' and dmndomainval=3) as status from Ds_Remitter a,Ds_Bank_Ref bnk,Ds_Br_Ref br where a.drbankcode=bnk.bnkcode and br.cbrbankcode=a.drbankcode and br.cbrbrcode=a.drbranchcode and bnk.bnkcode=br.cbrbankcode and bnk.bnkctrycode=br.cbrctrycode and drgrpid=#drgrpid:varchar# and upper(dremittername1) like #dremittername1:varchar# and dreffectivedt BETWEEN (#dreffectivedt:date#) AND (#drenddt:date#)  and draccnum like #draccnum:varchar# and drmandaterefno like #drmandaterefno:varchar# and drstatus=3 and a.authorisedby is NULL and a.authoriseddate is NULL and a.deleteflag='N' and a.drbankcode like #drbankcode:varchar#  #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getAuthoriseRemSearchLIST_page.TOColumnMap={dremitterid=dremitterid,drmandaterefno=drmandaterefno,dremittername1=dremittername1,bnkdes=bnkdes,drbranchcode=drbranchcode,draccnum=draccnum,status=status}
getAuthoriseRemSearchLIST_page.OutputType=java.util.ArrayList
getAuthoriseRemSearchLIST.IsSqlj=false
getAuthoriseRemSearchLIST.StmtType=Statement
getAuthoriseRemSearchLIST.PgnUniqueKeys=dremitterid:varchar:DESC
getAuthoriseRemSearchLIST.SortKeys=dremitterid:varchar:DESC




#getViewRemSearchLIST_page.Query=select dremitterid, drmandaterefno, dremittername1, bnkdes, drbranchcode, draccnum, status from (Select distinct dremitterid,drmandaterefno,dremittername1,bnkdes,drbranchcode,draccnum,(select dmndomainvaldesc from Ds_Domains where dmndomain='D_BeneStatusView' and dmndomainval=a.drstatus) as status from Ds_Remitter a,Ds_Bank_Ref bnk,Ds_Br_Ref br where a.drbankcode=bnk.bnkcode and br.cbrbankcode=a.drbankcode and br.cbrbrcode=a.drbranchcode and bnk.bnkcode=br.cbrbankcode and bnk.bnkctrycode=br.cbrctrycode and drgrpid=#drgrpid:varchar# and dremittername1 like #dremittername1:varchar# and drstatus like #drstatus:numeric# and draccnum like #draccnum:varchar# and drmandaterefno like #drmandaterefno:varchar# and dreffectivedt like #dreffectivedt:date# and drenddt like #drenddt:date# and drbankcode like #drbankcode:varchar# and a.deleteflag='N' #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getViewRemSearchLIST_page.Query=select dremitterid, drmandaterefno, dremittername1, bnkdes, drbranchcode, draccnum, status from (Select distinct dremitterid,drmandaterefno,dremittername1,bnkdes,drbranchcode,draccnum,(select dmndomainvaldesc from Ds_Domains where dmndomain='D_BeneStatusView' and dmndomainval=a.drstatus) as status from Ds_Remitter a,Ds_Bank_Ref bnk,Ds_Br_Ref br where a.drbankcode=bnk.bnkcode and br.cbrbankcode=a.drbankcode and br.cbrbrcode=a.drbranchcode and bnk.bnkcode=br.cbrbankcode and bnk.bnkctrycode=br.cbrctrycode and drgrpid=#drgrpid:varchar# and upper(dremittername1) like #dremittername1:varchar# and drstatus like #drstatus:numeric# and draccnum like #draccnum:varchar# and drmandaterefno like #drmandaterefno:varchar# and dreffectivedt BETWEEN (#dreffectivedt:date#) AND (#drenddt:date#) and drbankcode like #drbankcode:varchar# and a.deleteflag='N' #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getViewRemSearchLIST_page.TOColumnMap={dremitterid=dremitterid,drmandaterefno=drmandaterefno,dremittername1=dremittername1,bnkdes=bnkdes,drbranchcode=drbranchcode,draccnum=draccnum,status=status}
getViewRemSearchLIST_page.OutputType=java.util.ArrayList
getViewRemSearchLIST.IsSqlj=false
getViewRemSearchLIST.StmtType=Statement
getViewRemSearchLIST.PgnUniqueKeys=dremitterid:varchar:DESC
getViewRemSearchLIST.SortKeys=dremitterid:varchar:DESC


#---Query to show the details for Edit,Authorize and View---


getEditRemitterData.Query=select dremittername1,drmandaterefno,drbankcode,dradd1,dradd2,dradd3,draccnum,(select cbrbrname from ds_br_ref where cbrbankcode=drbankcode and cbrbrcode=drbranchcode) as cbrbrname,drbranchcode,dreffectivedt,drenddt,dramounttype,dramount,drcurrency From ds_remitter where drgrpid=#drgrpid:varchar# and dremitterid=#dremitterid:varchar# and dremittername1=#dremittername1:varchar#
getEditRemitterData.TOColumnMap={dremittername1=dremittername1,drmandaterefno=drmandaterefno,drbankcode=drbankcode,dradd1=dradd1,dradd2=dradd2,dradd3=dradd3,draccnum=draccnum,cbrbrname=cbrbrname,drbranchcode=drbranchcode,dreffectivedt=dreffectivedt,drenddt=drenddt,dramounttype=dramounttype,dramount=dramount,drcurrency=drcurrency}
getEditRemitterData.OutputType=com.tcs.ebw.payments.transferobject.DsRemitterRefNDBTO[]
getEditRemitterData.IsSqlj=false
getEditRemitterData.StmtType=Statement

getAuthoriseRemitterData.Query=select dremittername1,drmandaterefno,(select unique bnkdes from Ds_Bank_ref where bnkcode=cpybankcode) as bnkdes ,dradd1,dradd2,dradd3,draccnum,(select cbrbrname from ds_br_ref where cbrbankcode=drbankcode and cbrbrcode=drbranchcode) as cbrbrname,drbranchcode,dreffectivedt,drenddt,dramounttype,dramount from ds_remitter where drgrpid=#drgrpid:varchar# and dremitterid=#dremitterid:varchar# and dremittername1=#dremittername1:varchar#
getAuhtoriseRemitterData.TOColumnMap={dremittername1=dremittername1,drmandaterefno=drmandaterefno,bnkdes=bnkdes,dradd1=dradd1,dradd2=dradd2,dradd3=dradd3,draccnum=draccnum,cbrbrname=cbrbrname,drbranchcode=drbranchcode,dreffectivedt=dreffectivedt,drenddt=drenddt,dramounttype=dramounttype,dramount=dramount}
getAuthoriseRemitterData.OutputType=com.tcs.ebw.payments.transferobject.DsRemitterTO[]
getAuthoriseRemitterData.IsSqlj=false
getAuthoriseRemitterData.StmtType=Statement


getViewRemitterData.Query=select dremittername1,drmandaterefno,bnkdes,dradd1,dradd2,dradd3,draccnum,(select cbrbrname from ds_br_ref where cbrbankcode=drbankcode and cbrbrcode=drbranchcode) as cbrbrname,drbranchcode,dreffectivedt,drenddt,(select dmndomaindesc from ds_domains where dmndomain='D_AmountType' and dmndomainval=dramounttype) as amounttype,dramount,drcurrency from ds_remitter a,Ds_Bank_Ref bnk,Ds_Br_Ref br where a.drbankcode=bnk.bnkcode and br.cbrbankcode=a.drbankcode and br.cbrbrcode=a.drbranchcode and bnk.bnkcode=br.cbrbankcode and bnk.bnkctrycode=br.cbrctrycode and drgrpid=#drgrpid:varchar# and dremitterid=#dremitterid:varchar# and dremittername1=#dremittername1:varchar#
getViewRemitterData.TOColumnMap={dremittername1=dremittername1,drmandaterefno=drmandaterefno,bnkdes=bnkdes,dradd1=dradd1,dradd2=dradd2,dradd3=dradd3,draccnum=draccnum,cbrbrname=cbrbrname,drbranchcode=drbranchcode,dreffectivedt=dreffectivedt,drenddt=drenddt,amounttype=amounttype,dramount=dramount,drcurrency=drcurrency}
getViewRemitterData.OutputType=com.tcs.ebw.payments.transferobject.DsRemitterRefNDBTO[]
getViewRemitterData.IsSqlj=false
getViewRemitterData.StmtType=Statement

##--Update Queries for Remitter, Local Bene Authorization and Swift Bene Authorization and Remitter Authorization


updateRemitter.Query=Update DS_REMITTER set dremittername1=#dremittername1:varchar#,drmandaterefno=#drmandaterefno:varchar#,dradd1=#dradd1:varchar#,dradd2=#dradd2:varchar#,dradd3=#dradd3:varchar#,draccnum=#draccnum:varchar#,drbankcode=#drbankcode:varchar#,drbranchcode=#drbranchcode:varchar#,drcurrency=#drcurrency:varchar#,dramounttype=#dramounttype:numeric#,dramount=#dramount:numeric#,dreffectivedt=#dreffectivedt:date#,drenddt=#drenddt:date#,drstatus=3 where drgrpid=#drgrpid:varchar# and dremitterid=#dremitterid:varchar#
updateRemitter.StmtType=PreparedStatement


updateAuthoriseLocal.Query=Update DS_PAYEE_REF set cpystatus=4,authorisedby=#authorisedby:varchar#,authoriseddate=sysdate where cpygrpid=#cpygrpid:varchar# and cpypayeeid=#cpypayeeid:varchar# 
updateAuthoriseLocal.StmtType=Statement

updateAuthoriseSwift.Query=Update DS_PAYEE_REF set cpystatus=4,authorisedby=#authorisedby:varchar#,authoriseddate=sysdate where cpygrpid=#cpygrpid:varchar# and cpypayeeid=#cpypayeeid:varchar#
updateAuthoriseSwift.StmtType=Statement


updateAuthoriseRemitter.Query=Update DS_REMITTER set drstatus=4,authorisedby=#authorisedby:varchar#,authoriseddate=sysdate where drgrpid=#drgrpid:varchar# and dremitterid=#dremitterid:varchar#
updateAuthoriseRemitter.StmtType=Statement

#updateLocalBeneficiary.Query=Update DS_PAYEE_REF set cpypayeename1=#cpypayeename1:varchar#,cpyadd1=#cpyadd1:varchar#,cpyadd2=#cpyadd2:varchar#,cpyadd3=#cpyadd3:varchar#,cpyaccnum=#cpyaccnum:varchar#,cpybankcode=#cpybankcode:varchar#,cpybranchcode=#cpybranchcode:varchar#,cpycurrency=#cpycurrency:varchar#,cpystatus=3 where cpygrpid=#cpygrpid:varchar# and cpypayeeid=#cpypayeeid:varchar#

updateLocalBeneficiary.Query=Update DS_PAYEE_REF set cpypayeename1=#cpypayeename1:varchar#,cpyadd1=#cpyadd1:varchar#,cpyadd2=#cpyadd2:varchar#,cpyadd3=#cpyadd3:varchar#,cpyaccnum=#cpyaccnum:varchar#,cpybankcode=#cpybankcode:varchar#,cpybranchcode=#cpybranchcode:varchar#,cpystatus=3 where cpygrpid=#cpygrpid:varchar# and cpypayeeid=#cpypayeeid:varchar#

updateLocalBeneficiary.StmtType=Statement


updateSwiftBeneficiary.Query=Update DS_PAYEE_REF set cpypayeename1=#cpypayeename1:varchar#,cpyadd1=#cpyadd1:varchar#,cpyadd2=#cpyadd2:varchar#,cpyadd3=#cpyadd3:varchar#,cpyaccnum=#cpyaccnum:varchar#,cpybankcode=#cpybankcode:varchar#,cpybankswiftcode=#cpybankswiftcode:varchar#,cpypayeerefno=#cpypayeerefno:varchar#,cpythresholdamt=#cpythresholdamt:numeric#,cpypaymentscount=#cpypaymentscount:numeric#,cpyinterbankswiftcode=#cpyinterbankswiftcode:varchar#,cpyinterbankaccnum=#cpyinterbankaccnum:varchar#,cpyintermediarybankcode=#cpyintermediarybankcode:varchar#,cpystatus=3 where cpygrpid=#cpygrpid:varchar# and cpypayeeid=#cpypayeeid:varchar#
updateSwiftBeneficiary.StmtType=Statement

updateSentBackBene.Query=Update DS_PAYEE_REF set cpystatus=2 where cpygrpid=#cpygrpid:varchar# and cpypayeeid=#cpypayeeid:varchar# 
updateSentBackBene.StmtType=Statement

updateRejectBene.Query=Update DS_PAYEE_REF set cpystatus=5 where cpygrpid=#cpygrpid:varchar# and cpypayeeid=#cpypayeeid:varchar# 
updateRejectBene.StmtType=Statement

updateSentBackRemitter.Query=Update DS_REMITTER set drstatus=2 where drgrpid=#drgrpid:varchar# and dremitterid=#dremitterid:varchar#
updateSentBackRemitter.StmtType=PreparedStatement

updateRejectRemitter.Query=Update DS_REMITTER set drstatus=5 where drgrpid=#drgrpid:varchar# and dremitterid=#dremitterid:varchar#
updateRejectRemitter.StmtType=PreparedStatement



## Delete Queries for Edit,Authorize and View Beneficiary

deleteEditBeneficiary.Query=Update Ds_Payee_Ref set deleteflag='Y' where cpypayeeid=#cpypayeeid:varchar
deleteEditBeneficiary.StmtType=Statement

deleteSwiftBeneficiary.Query=Update Ds_Payee_Ref set deleteflag='Y' where cpypayeeid=#cpypayeeid:varchar#
deleteSwiftBeneficiary.StmtType=Statement

deleteEditRemitter.Query=Update Ds_Remitter set deleteflag='Y' where dremitterid=#dremitterid:varchar#
deleteEditRemitter.StmtType=Statement


################################### Deepti's DB Queries

#custody_geteventdetailstable.Query=SELECT distinct COP_OPTN_SEQ,SCO_LONG_DESC,COP_DESC,COP_DFLT_OPTN_IND FROM fmrdbo.COP_CA_OPTN,fmrdbo.SCO_SYSTEM_CODES WHERE SCO_CODE_VALUE=COP_OPTN_TYP AND SCO_CODE_TYPE=COP_OPTN_TYP_CD and COP_CA_ID=#COP_CA_ID:varchar# and COP_DFLT_OPTN_IND=1
custody_geteventdetailstable.Query=SELECT distinct COP_OPTN_SEQ,sco1.SCO_LONG_DESC,COP_DESC,sco2.SCO_LONG_DESC as COP_DFLT_OPTN_IND FROM fmrdbo.COP_CA_OPTN,fmrdbo.SCO_SYSTEM_CODES sco1, fmrdbo.SCO_SYSTEM_CODES sco2 WHERE sco1.SCO_CODE_VALUE=COP_OPTN_TYP AND sco1.SCO_CODE_TYPE=COP_OPTN_TYP_CD AND sco2.SCO_CODE_VALUE= COP_DFLT_OPTN_IND AND sco2.SCO_CODE_TYPE=185 and COP_CA_ID=#COP_CA_ID:varchar#
custody_geteventdetailstable.TOColumnMap ={COP_OPTN_SEQ=COP_OPTN_SEQ,SCO_LONG_DESC=SCO_LONG_DESC,COP_DESC=COP_DESC,COP_DFLT_OPTN_IND=COP_DFLT_OPTN_IND}
custody_geteventdetailstable.OutputType=java.util.ArrayList
custody_geteventdetailstable.StmtType=Statement


custody_geteligibleholdingstable.Query=SELECT distinct ELG_SCA_ID,SCA_ACCT_SHRT_NAME,ELG_CSTDY_BAL,ELG_ADJSTD_POS,SCO_LONG_DESC,ELG_SEC_ID,SEC_SHRT_NAME FROM fmrdbo.ELG_ELGBLTY,fmrdbo.SCA_SAFE_CTDY_ACT,fmrdbo.SEC_SEC,fmrdbo.SCO_SYSTEM_CODES WHERE SCA_SCA_ID=ELG_SCA_ID AND SEC_SEC_ID=ELG_SEC_ID AND SCO_CODE_VALUE=ELG_DB_CR_IND AND SCO_CODE_TYPE=ELG_DB_CR_IND_CD
custody_geteligibleholdingstable.TOColumnMap ={ELG_SCA_ID=ELG_SCA_ID,SCA_ACCT_SHRT_NAME=SCA_ACCT_SHRT_NAME,ELG_CSTDY_BAL=ELG_CSTDY_BAL,ELG_ADJSTD_POS=ELG_ADJSTD_POS,SCO_LONG_DESC=SCO_LONG_DESC,ELG_SEC_ID=ELG_SEC_ID,SEC_SHRT_NAME=SEC_SHRT_NAME}
custody_geteligibleholdingstable.OutputType=java.util.ArrayList
custody_geteligibleholdingstable.StmtType=Statement


getInstructionType.Query=select dmndomainvaldesc,dmndomainvaldesc from ds_domains where dmndomain='D_InstrType'
getInstructionType.TOColumnMap={dmndomainvaldesc=dmndomainvaldesc,dmndomainvaldesc=dmndomainvaldesc}
getInstructionType.OutputType=java.util.Vector


#custody_getClientOptionDetails.Query=SELECT distinct CAA_CA_ID,sco1.SCO_LONG_DESC as eventtype,CAA_NAME,sco2.SCO_LONG_DESC,CAA_SEC_ID,SEC_SHRT_NAME,NMS_SEC_NUM,CAA_CLNT_DDLN_DT FROM FMRDBO.CAA_CA,FMRDBO.SCO_SYSTEM_CODES sco1,FMRDBO.SCO_SYSTEM_CODES sco2,FMRDBO.SEC_SEC,FMRDBO.NMS_NUM_SCHM WHERE CAA_CA_ID =#CAA_CA_ID:varchar# AND sco1.SCO_CODE_VALUE=CAA_CA_TYP AND sco1.SCO_CODE_TYPE=CAA_CA_TYP_CD AND sco2.SCO_CODE_VALUE=CAA_STA AND sco2.SCO_CODE_TYPE=CAA_STA_CD AND SEC_SEC_ID=CAA_SEC_ID AND NMS_SEC_ID=CAA_SEC_ID AND NMS_NMBRNG_SCHM=1
custody_getClientOptionDetails.Query=SELECT distinct CAA_CA_ID,sco1.SCO_LONG_DESC as eventtype,CAA_NAME,sco2.SCO_LONG_DESC,CAA_SEC_ID,SEC_SHRT_NAME,NMS_SEC_NUM,CAA_CLNT_DDLN_DT FROM FMRDBO.CAA_CA,FMRDBO.SCO_SYSTEM_CODES sco1,FMRDBO.SCO_SYSTEM_CODES sco2,FMRDBO.SEC_SEC,FMRDBO.NMS_NUM_SCHM WHERE CAA_CA_ID =#CAA_CA_ID:varchar# AND sco1.SCO_CODE_VALUE=CAA_CA_TYP AND sco1.SCO_CODE_TYPE=CAA_CA_TYP_CD AND sco2.SCO_CODE_VALUE=CAA_STA AND sco2.SCO_CODE_TYPE=CAA_STA_CD AND SEC_SEC_ID=CAA_SEC_ID AND NMS_SEC_ID=CAA_SEC_ID AND NMS_NMBRNG_SCHM=1
custody_getClientOptionDetails.TOColumnMap={CAA_CA_ID=CAA_CA_ID,eventtype=eventtype,CAA_NAME=CAA_NAME,SCO_LONG_DESC=SCO_LONG_DESC,CAA_SEC_ID=CAA_SEC_ID,SEC_SHRT_NAME=SEC_SHRT_NAME,NMS_SEC_NUM=NMS_SEC_NUM,CAA_CLNT_DDLN_DT=CAA_CLNT_DDLN_DT}
custody_getClientOptionDetails.OutputType=com.tcs.ebw.custody.transferobject.CaaCaNONDBTO[]
custody_getClientOptionDetails.StmtType=PreparedStatement




#custody_getClientOptionList.Query=SELECT distinct COT_OPTN_SEQ as OPTIONNUMBER,COP_DESC as OPTIONDESC ,COT_EXRCSD_QTY as INSTRUCTEDQNTY,SCO_LONG_DESC as STATUS FROM FMRDBO.COT_CLNT_OPTN, FMRDBO.SCO_SYSTEM_CODES, FMRDBO.COP_CA_OPTN WHERE  COT_CA_ID =#COT_CA_ID:varchar# AND COT_SEC_ID=#COT_SEC_ID:varchar# AND SCO_CODE_VALUE=COT_STA AND SCO_CODE_TYPE=COT_STA_CD AND COP_CA_ID=COT_CA_ID AND COP_OPTN_SEQ = COT_OPTN_SEQ
custody_getClientOptionList.Query=SELECT distinct COT_OPTN_SEQ as OPTIONNUMBER,COP_DESC as OPTIONDESC ,COT_EXRCSD_QTY as INSTRUCTEDQNTY,SCO_LONG_DESC as STATUS FROM FMRDBO.COT_CLNT_OPTN, FMRDBO.SCO_SYSTEM_CODES, FMRDBO.COP_CA_OPTN WHERE  COT_CA_ID =#COT_CA_ID:varchar# AND COT_SCA_ID=#COT_SCA_ID:varchar# AND SCO_CODE_VALUE=COT_STA AND SCO_CODE_TYPE=COT_STA_CD AND COP_CA_ID=COT_CA_ID AND COP_OPTN_SEQ = COT_OPTN_SEQ
custody_getClientOptionList.TOColumnMap={OPTIONNUMBER=OPTIONNUMBER,OPTIONDESC=OPTIONDESC,INSTRUCTEDQNTY=INSTRUCTEDQNTY,STATUS=STATUS}
custody_getClientOptionList.OutputType=java.util.ArrayList

#custody_getCreateResponseList.Query=SELECT distinct CRS_TRANS_REFNUM,CRS_INSTR_TYPE as INSTRUCTIONTYPE,CRS_OPTN_NUM as OPTIONNUMBER, CRS_OPTN_DESC as OPTIONDESC,CRS_ADV_QTY as ADVISEDQNTY,CRS_INSTR_REF as INSTRUCTIONREF,CRS_INSTR_STA as INSTRUCTIONSTATUS FROM FMRDBO.CRS_CLNT_RESPNC WHERE  CRS_CA_ID =#CRS_CA_ID:varchar# 
custody_getCreateResponseList.Query=SELECT distinct CRS_TRANS_REFNUM,CRS_INSTR_TYPE as INSTRUCTIONTYPE,CRS_OPTN_NUM as OPTIONNUMBER, CRS_OPTN_DESC as OPTIONDESC,CRS_ADV_QTY as ADVISEDQNTY,CRS_INSTR_REF as INSTRUCTIONREF,CRS_INSTR_STA as INSTRUCTIONSTATUS FROM FMRDBO.CRS_CLNT_RESPNC WHERE  CRS_CA_ID =#CRS_CA_ID:varchar# AND CRS_SCA_ID=#CRS_SCA_ID:varchar# 
custody_getCreateResponseList.TOColumnMap={CRS_TRANS_REFNUM=CRS_TRANS_REFNUM,INSTRUCTIONTYPE=INSTRUCTIONTYPE,OPTIONNUMBER=OPTIONNUMBER,OPTIONDESC=OPTIONDESC,ADVISEDQNTY=ADVISEDQNTY,INSTRUCTIONREF=INSTRUCTIONREF,INSTRUCTIONSTATUS=INSTRUCTIONSTATUS}
custody_getCreateResponseList.OutputType=java.util.ArrayList

custody_setCreateResponses.Query=INSERT INTO FMRDBO.CRS_CLNT_RESPNC (CRS_TRANS_REFNUM,CRS_CA_ID,CRS_SCA_ID,CRS_SEC_ID,CRS_INSTR_TYPE,CRS_OPTN_NUM,CRS_OPTN_DESC,CRS_ADV_QTY,CRS_INSTR_REF,CRS_INSTR_STA,CRS_PREV_REF,CRS_NRRTV,BRANCHID,USERID,MODIFICATION_DATE,CRS_SEQNO) values (#CRS_TRANS_REFNUM:varchar#,#CRS_CA_ID:varchar#,#CRS_SCA_ID:varchar#,#CRS_SEC_ID:varchar#,#CRS_INSTR_TYPE:varchar#,#CRS_OPTN_NUM:varchar#,#CRS_OPTN_DESC:varchar#,#CRS_ADV_QTY:varchar#,#CRS_INSTR_REF:varchar#,'Captured',#CRS_PREV_REF:varchar#,#CRS_NRRTV:varchar#,'IE',#USERID:varchar#,current timestamp,1)
custody_setCreateResponses.TOColumnMap={CRS_TRANS_REFNUM=CRS_TRANS_REFNUM,CRS_CA_ID=CRS_CA_ID,CRS_SCA_ID=CRS_SCA_ID,CRS_INSTR_TYPE=CRS_INSTR_TYPE,CRS_OPTN_NUM=CRS_OPTN_NUM,CRS_ADV_QTY=CRS_ADV_QTY,CRS_INSTR_REF=CRS_INSTR_REF,CRS_INSTR_STA=CRS_INSTR_STA,CRS_PREV_REF=CRS_PREV_REF,CRS_NRRTV=CRS_NRRTV,USERID=USERID,MODIFICATION_DATE=MODIFICATION_DATE,CRS_SEQNO=CRS_SEQNO}
custody_setCreateResponses.OutputType=com.tcs.ebw.custody.transferobject.CrsClntRespncTO[]
custody_setCreateResponses.StmtType=PreparedStatement


custody_getCustodyAuthoriseSend.Query=select a.batbatchref,a.batnooftxns,b.dmndomainvaldesc as batstatus,a.batmodifiedby,a.batmodifieddate from fmrdbo.ds_batch a,fmrdbo.ds_domains b where a.batgrpid=#batgrpid:varchar# and b.dmndomainval=a.batstatus and b.dmndomain='D_CLSTiStatus' and a.deleteflag='N'
custody_getCustodyAuthoriseSend.TOColumnMap={batbatchref=batbatchref,batnooftxns=batnooftxns,batstatus=batstatus,batmodifiedby=batmodifiedby,batmodifieddate=batmodifieddate}
custody_getCustodyAuthoriseSend.StmtType=Statement
custody_getCustodyAuthoriseSend.OutputType=java.util.ArrayList


custody_setBatchDetails.Query=insert into FMRDBO.DS_BATCH (batbatchref,batnooftxns,batgrpid,batcreatedby,batcreateddate,batmodifiedby,batmodifieddate,batversionnum,deleteflag,batstatus) values(#batbatchref:varchar#,#batnooftxns:numeric#,#batgrpid:varchar#,#batcreatedby:varchar#,'09/11/2006',#batmodifiedby:varchar#,'09/11/2006',1,'N','5') 
custody_setBatchDetails.StmtType=PreparedStatement  

custody_updateCreateResponse.Query=update FMRDBO.CRS_CLNT_RESPNC set CRS_BATCH_REF=#CRS_BATCH_REF:varchar# where CRS_TRANS_REFNUM=#CRS_TRANS_REFNUM:varchar#
custody_updateCreateResponse.StmtType=Statement


custody_getCreateResponseBatchList.Query=SELECT distinct CRS_TRANS_REFNUM,CRS_INSTR_TYPE as INSTRUCTIONTYPE,CRS_OPTN_NUM as OPTIONNUMBER, CRS_OPTN_DESC as OPTIONDESC,CRS_ADV_QTY as ADVISEDQNTY,CRS_INSTR_REF as INSTRUCTIONREF,CRS_INSTR_STA as INSTRUCTIONSTATUS FROM FMRDBO.CRS_CLNT_RESPNC WHERE  CRS_BATCH_REF =#CRS_BATCH_REF:varchar# 
custody_getCreateResponseBatchList.TOColumnMap={CRS_TRANS_REFNUM=CRS_TRANS_REFNUM,INSTRUCTIONTYPE=INSTRUCTIONTYPE,OPTIONNUMBER=OPTIONNUMBER,OPTIONDESC=OPTIONDESC,ADVISEDQNTY=ADVISEDQNTY,INSTRUCTIONREF=INSTRUCTIONREF,INSTRUCTIONSTATUS=INSTRUCTIONSTATUS}
custody_getCreateResponseBatchList.OutputType=java.util.ArrayList

custody_updateRemoveFrBatchResponse.Query=update FMRDBO.CRS_CLNT_RESPNC set CRS_BATCH_REF='' where CRS_TRANS_REFNUM=#CRS_TRANS_REFNUM:varchar# 
custody_updateRemoveFrBatchResponse.StmtType=Statement

custody_updateDeBatch.Query=update FMRDBO.ds_batch set deleteflag='Y' where batbatchref=#batbatchref:varchar#
custody_updateDeBatch.StmtType=Statement

custody_updateDeBatchCreateResponse.Query=update FMRDBO.CRS_CLNT_RESPNC set CRS_BATCH_REF='' where CRS_BATCH_REF=#CRS_BATCH_REF:varchar#
custody_updateDeBatchCreateResponse.StmtType=Statement


custody_updateAuthoriseBatch.Query=update FMRDBO.ds_batch set batstatus='8' where batbatchref=#batbatchref:varchar# and deleteflag='N'
custody_updateAuthoriseBatch.StmtType=Statement

custody_updateAuthoriseCreateResponse.Query=update FMRDBO.CRS_CLNT_RESPNC set CRS_INSTR_STA='Sent' where CRS_BATCH_REF=#CRS_BATCH_REF:varchar#
custody_updateAuthoriseCreateResponse.StmtType=Statement



insertPayments_setCreateResponses.Query=Insert into Ds_Payee_Ref(cpygrpid,cpypayeeid,cpypayeename1,cpypayeerefno,cpyadd1,cpyadd2,cpyadd3,cpyaccnum,cpybankcode,cpybankswiftcode,cpyinterbankswiftcode,cpyintermediarybankcode,cpyinterbankaccnum,cpypaymentscount,cpythresholdamt,createdby,createddate,modifiedby,modifieddate,deleteflag,versionnum,cpystatus,cpybenetype) values (#cpygrpid:varchar#,#cpypayeeid:varchar#,#cpypayeename1:varchar#,#cpypayeerefno:varchar#,#cpyadd1:varchar#,#cpyadd2:varchar#,#cpyadd3:varchar#,#cpyaccnum:varchar#,#cpybankcode:varchar#,#cpybankswiftcode:varchar#,#cpyinterbankswiftcode:varchar#,#cpyintermediarybankcode:varchar#,#cpyinterbankaccnum:varchar#,#cpypaymentscount:numeric#,#cpythresholdamt:numeric#,#createdby:varchar#,sysdate,#modifiedby:varchar#,sysdate,#deleteflag:varchar#,#versionnum:numeric#,3,2)
insertPayments_setCreateResponses.StmtType=PreparedStatement

insertSetSwiftBeneficiary.Query=Insert into Ds_Payee_Ref(cpygrpid,cpypayeeid,cpypayeename1,cpypayeerefno,cpyadd1,cpyadd2,cpyadd3,cpyaccnum,cpybankcode,cpybankswiftcode,cpyinterbankswiftcode,cpyintermediarybankcode,cpyinterbankaccnum,cpypaymentscount,cpythresholdamt,createdby,createddate,modifiedby,modifieddate,deleteflag,versionnum,cpystatus,cpybenetype) values (#cpygrpid:varchar#,#cpypayeeid:varchar#,#cpypayeename1:varchar#,#cpypayeerefno:varchar#,#cpyadd1:varchar#,#cpyadd2:varchar#,#cpyadd3:varchar#,#cpyaccnum:varchar#,#cpybankcode:varchar#,#cpybankswiftcode:varchar#,#cpyinterbankswiftcode:varchar#,#cpyintermediarybankcode:varchar#,#cpyinterbankaccnum:varchar#,#cpypaymentscount:numeric#,#cpythresholdamt:numeric#,#createdby:varchar#,#createddate:date#,#modifiedby:varchar#,#modifieddate:date#,#deleteflag:varchar#,#versionnum:numeric#,1,2)
insertSetSwiftBeneficiary.StmtType=PreparedStatement

insertSetRemitter.Query=Insert into Ds_Remitter(drgrpid,dremitterid,dremittername1,drmandaterefno,dradd1,dradd2,dradd3,draccnum,drbankcode,drbranchcode,dreffectivedt,drenddt,dramounttype,drcurrency,dramount,createdby,createddate,modifiedby,modifieddate,deleteflag,versionnum,drstatus) values (#drgrpid:varchar#,#dremitterid:varchar#,#dremittername1:varchar#,#drmandaterefno:varchar#,#dradd1:varchar#,#dradd2:varchar#,#dradd3:varchar#,#draccnum:varchar#,#drbankcode:varchar#,#drbranchcode:varchar#,#dreffectivedt:date#,#drenddt:date#,#dramounttype:numeric#,#drcurrency:varchar#,#dramount:numeric#,#createdby:varchar#,sysdate,#modifiedby:varchar#,sysdate,#deleteflag:varchar#,#versionnum:numeric#,1)
insertSetRemitter.StmtType=PreparedStatement


insertSetLocalBeneficiary.Query=Insert into Ds_Payee_Ref(cpygrpid,cpypayeeid,cpypayeename1,cpyadd1,cpyadd2,cpyadd3,cpyaccnum,cpybankcode,cpybranchcode,createdby,createddate,modifiedby,modifieddate,deleteflag,versionnum,cpystatus,cpybenetype,cpypaymentscount,cpythresholdamt,cpycurrency) values (#cpygrpid:varchar#,#cpypayeeid:varchar#,#cpypayeename1:varchar#,#cpyadd1:varchar#,#cpyadd2:varchar#,#cpyadd3:varchar#,#cpyaccnum:varchar#,#cpybankcode:varchar#,#cpybranchcode:varchar#,#createdby:varchar#,sysdate,#modifiedby:varchar#,sysdate,#deleteflag:varchar#,#versionnum:numeric#,1,1,#cpypaymentscount:numeric#,#cpythresholdamt:numeric#,#cpycurrency:varchar#)
insertSetLocalBeneficiary.StmtType=PreparedStatement

####User Activity Log


getGroupCombo.Query=select distinct cgrgrpid,cgrgrpid from ds_cust_grp_ref where deleteflag='N'
getGroupCombo.TOColumnMap={cgrgrpid=cgrgrpid}
getGroupCombo.OutputType=java.util.Vector

getUserGrpCombo.Query=select distinct usruserid,usruserid from ds_user where usrgrpid=#usrgrpid:varchar# AND deleteflag='N'
getUserGrpCombo.TOColumnMap={usruserid=usruserid}
getUserGrpCombo.OutputType=java.util.Vector



getUserActivityList.Query=select activity_id,userid,grpid,custid,datetime,service_id,activity_name,result,serviceparams from EBW_ACTIVITY_LOG_MASTER where userid like #userid:varchar# and grpid like #grpid:varchar# and custid like #custid:varchar# and activity_id IS NOT NULL and service_id like #serviceId :varchar# and activity_name like #activityName:varchar# and datetime BETWEEN (#fromdate:date#) and (#todate:date#)
getUserActivityList.TOColumnMap={ACTIVITY_ID=ACTIVITY_ID,userid=userid,grpid=grpid,custid=custid,datetime=datetime,SERVICE_ID=SERVICE_ID,ACTIVITY_NAME=ACTIVITY_NAME,result=result,serviceparams=serviceparams}
getUserActivityList.OutputType=java.util.ArrayList
getUserActivityList.StmtType=PreparedStatement

getDomainValues.Query=SELECT dmndomain||'~'||dmndomainval,dmndomainvaldesc FROM ds_domains
getDomainValues.TOColumnMap={dmndomain=dmndomain,dmndomainvaldesc=dmndomainvaldesc}
getDomainValues.OutputType=java.util.HashMap
getDomainValues.StmtType=Statement

getPayFrequency.Query=select payfrequency from ds_pay_txns where paybatchref=#paybatchref:varchar#
getPayFrequency.TOColumnMap={payfrequency=payfrequency}
getPayFrequency.OutputType=com.tcs.ebw.payments.transferobject.DsPayTxnsTO
getPayFrequency.StmtType=Statement

#getBackEndProcessedPaymentsLIST_page.Query=select paypayref, paytypecode, paydebitaccnum, paypymtdate, paypayeename1,paypriority,paycurrcode,paydebitamt, status from (select distinct c.batbatchref as paypayref,b.paytypecode,b.paydebitaccnum,b.paypymtdate as paypymtdate,to_char(max(paypayeename1)) as paypayeename1, b.paypriority,b.paycurrcode, b.paydebitamt as paydebitamt, (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=batstatus) as status from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where a.camcustid=923 and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and batstatus=4 AND c.deleteflag='N' and b.deleteflag='N' group by c.batbatchref,b.paytypecode,b.paydebitaccnum,b.paypymtdate,b.paydebitamt, c.batstatus,b.paypriority,b.paycurrcode  having count(*) < 2 UNION select distinct c.batbatchref as paypayref ,b.paytypecode,b.paydebitaccnum,b.paypymtdate as paypymtdate,'Multiple Beneficieries' as paypayeename1,b.paypriority,b.paycurrcode, b.paydebitamt as paydebitamt, (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=batstatus) as status from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where a.camcustid=923 and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and batstatus=4 and c.deleteflag='N' and b.deleteflag='N' group by c.batbatchref,b.paytypecode,b.paydebitaccnum,b.paypymtdate, b.paydebitamt,c.batstatus ,b.paypriority,b.paycurrcode having count(*) > 1 #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

####    ARUN--Existing Query 

#getBackEndProcessedPaymentsLIST_page.Query=select paypayref, paytypecode, paydebitaccnum, paypymtdate, paypayeename1,paypriority,paycurrcode,paydebitamt, status from (select distinct c.batbatchref as paypayref,b.paytypecode,b.paydebitaccnum,b.paypymtdate as paypymtdate,to_char(max(paypayeename1)) as paypayeename1, b.paypriority,b.paycurrcode, b.paydebitamt as paydebitamt, (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=batstatus) as status from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where a.camcustid=923 and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and batstatus=4 AND c.deleteflag='N' and b.deleteflag='N' group by c.batbatchref,b.paytypecode,b.paydebitaccnum,b.paypymtdate,b.paydebitamt, c.batstatus,b.paypriority,b.paycurrcode  having count(*) > 1  #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)
#getBackEndProcessedPaymentsLIST_page.TOColumnMap={paypayref=paypayref,paytypecode=paytypecode,paydebitaccnum=paydebitaccnum,paypymtdate=paypymtdate,paypayeename1=paypayeename1,paypriority=paypriority,paycurrcode=paycurrcode,paydebitamt=paydebitamt,status=status}
#getBackEndProcessedPaymentsLIST_page.OutputType=java.util.ArrayList
#getBackEndProcessedPaymentsLIST.StmtType=Statement
#getBackEndProcessedPaymentsLIST.PgnUniqueKeys=paypayref:varchar:DESC
#getBackEndProcessedPaymentsLIST.SortKeys=paypayref:varchar:DESC



##### View PAyments Query

#getBackEndProcessedPaymentsLIST_page.Query=select PAYPAYREF,PAYTYPECODE,PAYDEBITACCNUM,paypymtdate,PAYPAYEENAME1,PAYPRIORITY,PAYCURRCODE,PAYDEBITAMT,STATUS from viewPayments where rownum<10
#getBackEndProcessedPaymentsLIST_page.Query=select PAYPAYREF, PAYTYPECODE, PAYDEBITACCNUM, paypymtdate, PAYPAYEENAME1,PAYPRIORITY,PAYCURRCODE,PAYDEBITAMT, STATUS from ( select distinct posnum,PAYPAYREF, PAYTYPECODE, PAYDEBITACCNUM, paypymtdate, PAYPAYEENAME1,PAYPRIORITY,PAYCURRCODE,PAYDEBITAMT, STATUS from viewPayments,ds_dap_usracc where dua_userid='User2' and dua_grpid='HNItest' and dua_custid='1683' and dua_accnum = debitaccnum)  where posnum>1650600
## ds_
## dua_userid=#userID:varchar# and dua_grpid=#groupID:varchar# and
## dua_userid=#usruserid:varchar# and dua_grpid=#usrgrpid:varchar# and
## or debitaccnum = '6500'

# final VIEW OTHER PAYMENTS
#getBackEndProcessedPaymentsLIST_page.Query=select PAYPAYREF, PAYTYPECODE, PAYDEBITACCNUM, paypymtdate, PAYPAYEENAME1,PAYPRIORITY,PAYCURRCODE,PAYDEBITAMT, STATUS from ( select distinct posnum,PAYPAYREF, PAYTYPECODE, PAYDEBITACCNUM, paypymtdate, PAYPAYEENAME1,PAYPRIORITY,PAYCURRCODE,PAYDEBITAMT, STATUS from viewPayments,ds_dap_usracc where dua_userid=#userid:varchar# and dua_grpid=#cmpgrpid:varchar# and dua_custid=#camcustid:varchar# and dua_accnum = debitaccnum  #sortlogic:varchar# ) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)


# order by paypymtdate DESC,posnum DESC


getBackEndProcessedPaymentsLIST_page.Query=select PAYPAYREF, PAYTYPECODE, PAYDEBITACCNUM, paypymtdate, PAYPAYEENAME1,PAYPRIORITY,PAYCURRCODE,PAYDEBITAMT, STATUS from ( select distinct posnum,PAYPAYREF, PAYTYPECODE, PAYDEBITACCNUM, paypymtdate, PAYPAYEENAME1,PAYPRIORITY,PAYCURRCODE,PAYDEBITAMT, STATUS from viewPayments,ds_dap_usracc where dua_custid=#camcustid:varchar# and dua_accnum = debitaccnum  #sortlogic:varchar# ) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)
getBackEndProcessedPaymentsLIST_page.TOColumnMap={paypayref=paypayref,paytypecode=paytypecode,paydebitaccnum=paydebitaccnum,paypymtdate=paypymtdate,paypayeename1=paypayeename1,paypriority=paypriority,paycurrcode=paycurrcode,paydebitamt=paydebitamt,status=status}
getBackEndProcessedPaymentsLIST_page.OutputType=java.util.ArrayList
getBackEndProcessedPaymentsLIST.StmtType=Statement
getBackEndProcessedPaymentsLIST.PgnUniqueKeys=paypayref:varchar:DESC
getBackEndProcessedPaymentsLIST.SortKeys=paypymtdate:date:DESC



getUserLimit.Query=SELECT MIN_VALUE,MAX_VALUE from limits_master WHERE GROUPID=#groupid:varchar# AND ROLETYPE IN (select distinct ROLETYPE from ds_user where USRGRPID=#groupid:varchar# and USRUSERID=#userid:varchar#)
getUserLimit.TOColumnMap={MIN_VALUE=MIN_VALUE,MAX_VALUE=MAX_VALUE}
getUserLimit.OutputType=java.util.ArrayList

getLevel.Query=SELECT LIMIT FROM DS_PRIVILEGE_MAPPINGS WHERE groupid=#groupid:varchar# and role IN (SELECT distinct ROLETYPE from ds_user where USRGRPID=#groupid:varchar# and USRUSERID=#userid:varchar#)
getLevel.TOColumnMap={LIMIT=LIMIT}
getLevel.OutputType=java.util.ArrayList


# reports query from smisha
getReportData.Query=select catg_name as catgName ,catg_pattern as catgPattern,catg_folder as catgFolder,catg_desc as catgDesc,catg_freq as catgFreq from catg where catg_id=#catgId:numeric# union select catg_name as catgName ,catg_pattern as catgPattern,catg_folder as catgFolder,catg_desc as catgDesc,catg_freq as catgFreq from catg where parent_catg_id=#catgId:numeric#
getReportData.TOColumnMap ={catgName=catgName,catgPattern=catgPattern,catgFolder=catgFolder,catgDesc=catgDesc,catgFreq=catgFreq}
getReportData.OutputType=com.tcs.ebw.payments.transferobject.CatgTO[]
getReportData.StmtType=Statement


getViewSearchLIST_page.Query=select paypayref, paytypecode, paydebitaccnum, paypymtdate, paypayeename1, paypriority, paycurrcode, paydebitamt, status from (select c.batbatchref as paypayref,b.paytypecode,max(b.paydebitaccnum) as paydebitaccnum,b.paypymtdate as paypymtdate,'Multiple Beneficieries' as paypayeename1,b.paypriority,b.paycurrcode,sum(b.paydebitamt) as paydebitamt,(select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where a.camcustid=#camcustid:numeric# and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and payccsstatuscode in ('3','44','2','6','12','20','4','16','48') and c.batstatus=b.payccsstatuscode and b.paypayeename1 like #paypayeename1:varchar# and b.paypymtdate BETWEEN (#fromdate:date#) AND (#todate:date#) AND b.paydebitamt BETWEEN (#fromamount:numeric#) AND (#toamount:numeric#) and c.deleteflag='N' and b.deleteflag='N' and paybatchref like #paybatchref:varchar# group by b.payccsstatuscode,b.paytypecode,c.batbatchref,b.paydebitaccnum,b.paypriority,b.paycurrcode,b.paypymtdate having count(*) > 1 union select c.batbatchref as paypayref,b.paytypecode,max(b.paydebitaccnum) as paydebitaccnum,b.paypymtdate as paypymtdate,to_char(max(b.paypayeename1)) as paypayeename1,b.paypriority,b.paycurrcode,sum(b.paydebitamt) as paydebitamt,(select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where a.camcustid=#camcustid:numeric# and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and payccsstatuscode in ('3','44','2','6','12','20','4','16','48') and c.batstatus=b. payccsstatuscode and b.paypayeename1 like #paypayeename1:varchar# and b.paypymtdate BETWEEN (#fromdate:date#) AND (#todate:date#) AND b.paydebitamt BETWEEN (#fromamount:numeric#) AND (#toamount:numeric#) and c.deleteflag='N' and b.deleteflag='N' and paybatchref like #paybatchref:varchar# group by b.payccsstatuscode,b.paytypecode,c.batbatchref,b.paydebitaccnum,b.paypriority,b.paycurrcode,b.paypymtdate having count(*) < 2 #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)


#Query for View Search
getViewSearchLIST_page.TOColumnMap={paypayref=paypayref,paytypecode=paytypecode,paydebitaccnum=paydebitaccnum,paypymtdate=paypymtdate,paypayeename1=paypayeename1,paypriority=paypriority,paycurrcode=paycurrcode,paydebitamt=paydebitamt,status=status}
getViewSearchLIST_page.OutputType=java.util.ArrayList
getViewSearchLIST.IsSqlj=False
getViewSearchLIST.StmtType=Statement
getViewSearchLIST.PgnUniqueKeys=paypayref:varchar:DESC
getViewSearchLIST.SortKeys=paypayref:varchar:DESC


#Ticker Query for MS Demo 
getPendingAuthorizations.Query=select (select count(*) from ds_pay_txns where paytypecode='TT' and deleteflag='N' and  paygroupid=#userGrpId:varchar# and createdby=#userId:varchar#) as swiftcount, (select count(*) from ds_pay_txns where  (paytypecode='ACH' or paytypecode='WIRE') and deleteflag='N' and paygroupid=#userGrpId:varchar# and createdby=#userId:varchar#) as localcount,(select count(*) from ds_pay_txns where paytypecode='BT' and deleteflag='N' and paygroupid=#userGrpId:varchar# and createdby=#userId:varchar#) as intercount from dual
getPendingAuthorizations.TOColumnMap ={swiftcount=swiftcount,localcount=localcount,intercount=intercount}
getPendingAuthorizations.OutputType=java.util.ArrayList




#getBackOfficeViewSearchLIST_page.Query=select paypayref, paytypecode, paydebitaccnum, paypymtdate, paypayeename1, paypriority, paycurrcode, paydebitamt, status from (select c.batbatchref as paypayref,b.paytypecode,max(b.paydebitaccnum) as paydebitaccnum,b.paypymtdate as paypymtdate,'Multiple Beneficieries' as paypayeename1,b.paypriority,b.paycurrcode,b.paydebitamt as paydebitamt,(select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where a.camcustid=923 and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and payccsstatuscode=4 and c.batstatus=b.payccsstatuscode and b.paypayeename1 like #paypayeename1:varchar# and b.paypymtdate BETWEEN (#fromdate:date#) AND (#todate:date#) AND b.paydebitamt BETWEEN (#fromamount:numeric#) AND (#toamount:numeric#) and c.deleteflag='N' and b.deleteflag='N' group by b.payccsstatuscode,b.paytypecode,c.batbatchref,b.paydebitaccnum,b.paypriority,b.paycurrcode,b.paydebitamt,b.paypymtdate having count(*) > 1 union select c.batbatchref as paypayref,b.paytypecode,max(b.paydebitaccnum) as paydebitaccnum,b.paypymtdate as paypymtdate,to_char(max(b.paypayeename1)) as paypayeename1,b.paypriority,b.paycurrcode,b.paydebitamt as paydebitamt,(select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status from DS_CUST_ACCT_LINK a,DS_PAY_TXNS b ,ds_batch c where a.camcustid=923 and a.camaccnum=b.paydebitaccnum and b.paybatchref=c.batbatchref and payccsstatuscode=4 and c.batstatus=b. payccsstatuscode and b.paypayeename1 like #paypayeename1:varchar# and b.paypymtdate BETWEEN (#fromdate:date#) AND (#todate:date#) AND b.paydebitamt BETWEEN (#fromamount:numeric#) AND (#toamount:numeric#) and c.deleteflag='N' and b.deleteflag='N' group by b.payccsstatuscode,b.paytypecode,c.batbatchref,b.paydebitaccnum,b.paypriority,b.paycurrcode,b.paydebitamt,b.paypymtdate having count(*) < 2 #sortlogic:varchar#) where #conditionlogic:varchar#  rownum<=((#rowsinapage:numeric#)+1)

getBackOfficeViewSearchLIST_page.Query=select PAYPAYREF, PAYTYPECODE, PAYDEBITACCNUM, paypymtdate, PAYPAYEENAME1,PAYPRIORITY,PAYCURRCODE,PAYDEBITAMT, STATUS from ( select distinct posnum,PAYPAYREF, PAYTYPECODE, PAYDEBITACCNUM, paypymtdate, PAYPAYEENAME1,PAYPRIORITY,PAYCURRCODE,PAYDEBITAMT, STATUS from viewPayments,ds_dap_usracc where dua_userid=#userid:varchar# and dua_grpid=#groupid:varchar# and dua_custid=#camcustid:numeric# and dua_accnum = debitaccnum and  PAYPAYEENAME1 like  #paypayeename1:varchar#  and paypymtdate BETWEEN (#fromdate:date#) AND (#todate:date#) AND PAYDEBITAMT BETWEEN (#fromamount:numeric#) AND (#toamount:numeric#) and PAYPAYREF like #paybatchref:varchar# order by paypymtdate DESC,posnum DESC) where rownum<=((#rowsinapage:numeric#)+1) 

getBackOfficeViewSearchLIST_page.TOColumnMap={paypayref=paypayref,paytypecode=paytypecode,paydebitaccnum=paydebitaccnum,paypymtdate=paypymtdate,paypayeename1=paypayeename1,paypriority=paypriority,paycurrcode=paycurrcode,paydebitamt=paydebitamt,status=status}
getBackOfficeViewSearchLIST_page.OutputType=java.util.ArrayList
getBackOfficeViewSearchLIST.IsSqlj=False
getBackOfficeViewSearchLIST.StmtType=PreparedStatement
getBackOfficeViewSearchLIST.PgnUniqueKeys=paypayref:varchar:DESC
getBackOfficeViewSearchLIST.SortKeys=paypayref:varchar:DESC

deleteExtFapPrograms.Query=delete from ds_fap_pgm_action where UFAGRPID=#usrgrpid:varchar# and ufafapid not like 'Dummy FAP' and UFAFAPID in (select UFDFAPID from ds_user_fap_dap_link where UFDGRPID=#usrgrpid:varchar# and UFDUSERID=#usruserid:varchar# )
deleteExtFapPrograms.StmtType=PreparedStatement

deleteExtAccounts.Query=delete from ds_dap_acct_cd where UDAFIELDVALUE \
in (select distinct UDAFIELDVALUE from ds_dap_acct_cd where UDAFIELDNAME='Acct Initiation' and \
udagrpid=#usrgrpid:varchar# and udadapid in (select ufddapid from ds_user_fap_dap_link where \
ufdgrpid=#usrgrpid:varchar# and ufduserid=#usruserid:varchar# and ufddapid not in ('Dummy Dap')))
deleteExtAccounts.StmtType=PreparedStatement

#dummyService.Query=select '' as paypayref, '' as paydebitaccnum, 'EUR' as paypymtdate, ''  as paytypecode, rownum as paybatchref , '' as paypayeebankcode from ds_pay_txns where rownum <= 5

dummyService.Query=select '' as paypayeename1, rownum as paytrxkey, rownum as paydebitamt, 'EUR'  as paycurrcode, '' as paytypecode , '' as payconsolidate , '' as paypayeeaccnum ,'' as paypayeebranchcode ,'' as paybatchref , '' as paypayeeid , '' as paypayeebankcode from ds_pay_txns where rownum <= 5

dummyService.TOColumnMap={paypayeename1=paypayeename1,paytrxkey=paytrxkey,paydebitamt=paydebitamt,paycurrcode=paycurrcode,paytypecode=paytypecode,payconsolidate=payconsolidate,paypayeeaccnum=paypayeeaccnum,paypayeebranchcode=paypayeebranchcode,paybatchref=paybatchref,paypayeeid=paypayeeid,paypayeebankcode=paypayeebankcode}
dummyService.OutputType=java.util.ArrayList
dummyService.StmtType=PreparedStatement

dummyService2.Query=select '' as paypayeename1, rownum as paytrxkey,rownum as paycurrcode,rownum as paydebitamt,'' as payfxcustomerfxrate,'' as paytypecode , '' as payconsolidate , '' as paypayeeaccnum ,'' as paypayeebranchcode ,'' as paybatchref , '' as paypayeeid , '' as paypayeebankcode from ds_pay_txns where rownum <= 5

dummyService2.TOColumnMap={paypayeename1=paypayeename1,paytrxkey=paytrxkey,paydebitamt=paydebitamt,paycurrcode=paycurrcode,payfxcustomerfxrate=payfxcustomerfxrate,paytypecode=paytypecode,payconsolidate=payconsolidate,paypayeeaccnum=paypayeeaccnum,paypayeebranchcode=paypayeebranchcode,paybatchref=paybatchref,paypayeeid=paypayeeid,paypayeebankcode=paypayeebankcode}
dummyService2.OutputType=java.util.ArrayList
dummyService2.StmtType=PreparedStatement

dummyServiceDebitDirect.Query=select '' as didcustname, rownum as didinstrnbr, '' as didcustacc, rownum  as didref, '' as diderrorid, '' as didintstatus, '' as versionnum,'' as didachbank, '' as didachbranch, '' as didinstramt   from ds_ti_ddt_det where rownum <= 5
dummyServiceDebitDirect.TOColumnMap={didcustname=didcustname,didinstrnbr=didinstrnbr,didcustacc=didcustacc,didref=didref,diderrorid=diderrorid,didintstatus=didintstatus,versionnum=versionnum,didachbank=didachbank,didachbranch=didachbranch,didinstramt=didinstramt}
dummyServiceDebitDirect.OutputType=java.util.ArrayList
dummyServiceDebitDirect.StmtType=PreparedStatement

dummyServiceinter.Query=select '' as paydebitaccnum,'' as paycurrcode,rownum as paydebitamt,'' as  payfxcustomerfxrate,'' as paytypecode from ds_pay_txns where rownum <= 5
dummyServiceinter.TOColumnMap={paydebitaccnum=paydebitaccnum,paycurrcode=paycurrcode,paydebitamt=paydebitamt,payfxcustomerfxrate=payfxcustomerfxrate,paytypecode=paytypecode}
dummyServiceinter.OutputType=java.util.ArrayList
dummyServiceinter.StmtType=PreparedStatement


# Added by Seshagiri for multiselection

#This query is for CreatePayments_LocalEditSave Multi

getPaymentsBenficiaryMultiDetails.Query=select paypayeename1,paytrxkey,paydebitamt,paycurrcode, paytypecode,payconsolidate,paypayeeaccnum,paypayeebranchcode,paybatchref,paypayeeid,payfxcustomerfxrate,paypayeebankcode,payrecurring,payfrequency,payfreqpaymentcount,payfreqenddate,paypayref from (select a.paypayeename1,rownum as paytrxkey,a.paydebitamt,a.paycurrcode,a.paydebitamt*a.payfxcustomerfxrate as paytypecode,a.payconsolidate,a.paypayeeaccnum,a.paypayeebranchcode,a.paybatchref,a.paypayeeid,a.payfxcustomerfxrate,a.paypayeebankcode,a.payrecurring,a.payfrequency,a.payfreqpaymentcount,a.payfreqenddate,a.paypayref from ds_pay_txns a where a.paybatchref=#paybatchref:varchar#)
getPaymentsBenficiaryMultiDetails.TOColumnMap={paypayeename1=paypayeename1,paytrxkey=paytrxkey,paydebitamt=paydebitamt,paycurrcode=paycurrcode,paytypecode=paytypecode,payconsolidate=payconsolidate,paypayeeaccnum=paypayeeaccnum,paypayeebranchcode=paypayeebranchcode,paybatchref=paybatchref,paypayeeid=paypayeeid,payfxcustomerfxrate=payfxcustomerfxrate,paypayeebankcode=paypayeebankcode,payrecurring=payrecurring,payfrequency=payfrequency,payfreqpaymentcount=payfreqpaymentcount,payfreqenddate=payfreqenddate,paypayref=paypayref}
getPaymentsBenficiaryMultiDetails.OutputType=java.util.ArrayList
getPaymentsBenficiaryMultiDetails.StmtType=PreparedStatement


#This query is for CreatePayments_SwiftEditSave Multi

getSwiftmultiBeneficairyDetails.Query=select paypayeename1,paytrxkey,paycurrcode,paydebitamt,payfxcustomerfxrate,paytypecode,payconsolidate,paypayeeaccnum,paypayeebranchcode,paybatchref,paypayeeid,paypayeebankcode,payrecurring,payfrequency,payfreqpaymentcount,payfreqenddate,paypayref from (select a.paypayeename1,rownum as paytrxkey,a.paycurrcode,a.paydebitamt,a.payfxcustomerfxrate,a.paydebitamt*a.payfxcustomerfxrate as paytypecode,a.payconsolidate,a.paypayeeaccnum,a.paypayeebranchcode,a.paybatchref,a.paypayeeid,a.paypayeebankcode,a.payrecurring,a.payfrequency,a.payfreqpaymentcount,a.payfreqenddate,a.paypayref from ds_pay_txns a where a.paybatchref=#paybatchref:varchar#)
getSwiftmultiBeneficairyDetails.TOColumnMap={paypayeename1=paypayeename1,paytrxkey=paytrxkey,paycurrcode=paycurrcode,paydebitamt=paydebitamt,payfxcustomerfxrate=payfxcustomerfxrate,paytypecode=paytypecode,payconsolidate=payconsolidate,paypayeeaccnum=paypayeeaccnum,paypayeebranchcode=paypayeebranchcode,paybatchref=paybatchref,paypayeeid=paypayeeid,paypayeebankcode=paypayeebankcode,payrecurring=payrecurring,payfrequency=payfrequency,payfreqpaymentcount=payfreqpaymentcount,payfreqenddate=payfreqenddate,paypayref=paypayref}
getSwiftmultiBeneficairyDetails.OutputType=java.util.ArrayList
getSwiftmultiBeneficairyDetails.StmtType=PreparedStatement





# End..



#added by seshagiri

updatemultiBatch.Query=update ds_batch set batnooftxns=#batnooftxns:numeric# where batbatchref=#batbatchref:varchar#
updatemultiBatch.StmtType=Statement

updatemultipayTransaction.Query=update ds_pay_txns set paydebitaccnum=#paydebitaccnum:varchar#,paypymtdate=#paypymtdate:date#,paypayeename1=#paypayeename1:varchar#,paydebitamt=#paydebitamt:numeric#,paypayeebankcode=#paypayeebankcode:varchar#,paypayeebranchcode=#paypayeebranchcode:varchar#,paypayeeaccnum=#Paypayeeaccnum:varchar# where paypayref=#paypayref:varchar#
updatemultipayTransaction.StmtType=Statement

#This is for Swift
updatemultiswiftpayTransaction.Query=update ds_pay_txns set paydebitaccnum=#paydebitaccnum:varchar#,paypymtdate=#paypymtdate:date#,paypayeename1=#paypayeename1:varchar#,paydebitamt=#paydebitamt:numeric#,paypayeebankcode=#paypayeebankcode:varchar#,paypayeebranchcode=#paypayeebranchcode:varchar#,paypayeeaccnum=#Paypayeeaccnum:varchar#,paycurrcode=#paycurrcode:varchar#,payfxcustomerfxrate=#payfxcustomerfxrate:numeric# where paypayref=#paypayref:varchar#
updatemultiswiftpayTransaction.StmtType=Statement


#This is for deleting the records for multi things

deletePaymentsTxnsBatch.Query=update ds_batch set deleteflag='Y' where batbatchref=#batbatchref:varchar#

deletePaymentsTxnsDsPay.Query=update ds_pay_txns set deleteflag='Y' where paybatchref=#paybatchref:varchar#


#end

#added by malli for Directdebits multi edit screen (Save Changes).

updatemultiDirectDebitBatch.Query=update ds_ti_ddt_hdr set dihcreditacc=#dihcreditacc:varchar#,dihcurr=#dihcurr:varchar#,modifeddate=#modifeddate:date# where dihbatchnbr=#dihbatchnbr:varchar#
updatemultiDirectDebitBatch.StmtType=PreparedStatement


updatemultiDirectDebitpayTransaction.Query=update ds_ti_ddt_det set didcustname=#didcustname:varchar#,didcustacc=#didcustacc:varchar#,didachbank=#didachbank:varchar#,didachbranch=#didachbranch:varchar#,didinstramt=#didinstramt:numeric#,didfxrate=#didfxrate:numeric#,didcurrcode=#didcurrcode:varchar# where didinstrnbr=#didinstrnbr:numeric#
updatemultiDirectDebitpayTransaction.StmtType=PreparedStatement

updateDirectDebitBatch.Query=update ds_ti_ddt_hdr set dihstatus='C',dihbatchdt=#dihbatchdt:date# where dihbatchnbr=#dihbatchnbr:varchar#
updateDirectDebitBatch.StmtType=PreparedStatement

updateDirectDebittxns.Query=update ds_ti_ddt_det set didintstatus='C',didvaldt=#didvaldt:date#,modifieddate=#modifieddate:date# where didbatchnbr=#didbatchnbr:varchar#
updateDirectDebittxns.StmtType=PreparedStatement

#end

# added by seshagiri for Inter Account Transfer Edit Screen

getPaymentsInterAccMultiDetails.Query=select paydebitaccnum,paycurrcode,paydebitamt,payfxcustomerfxrate,paytypecode,paypayref from (select a.paypayeeaccnum as paydebitaccnum ,a.paycurrcode,a.paydebitamt,a.payfxcustomerfxrate,a.paydebitamt*a.payfxcustomerfxrate as paytypecode,a.paypayref from ds_pay_txns a where a.paybatchref=#paybatchref:varchar# order by paypayref DESC)
getPaymentsInterAccMultiDetails.TOColumnMap={paydebitaccnum=paydebitaccnum,paycurrcode=paycurrcode,paydebitamt=paydebitamt,payfxcustomerfxrate=payfxcustomerfxrate,paytypecode=paytypecode,paypayref=paypayref}
getPaymentsInterAccMultiDetails.OutputType=java.util.ArrayList
getPaymentsInterAccMultiDetails.StmtType=PreparedStatement

# This is for Inter multi savechanges update query

updatemultiBatchInter.Query=update ds_batch set batnooftxns=#batnooftxns:numeric# where batbatchref=#batbatchref:varchar#
updatemultiBatchInter.StmtType=Statement

updatemultipayTransactionInter.Query=update ds_pay_txns set paydebitaccnum=#paydebitaccnum:varchar#,paypymtdate=#paypymtdate:date#,paydebitamt=#paydebitamt:numeric#,paypayeeaccnum=#Paypayeeaccnum:varchar#,paycurrcode=#paycurrcode:varchar#,payfxcustomerfxrate=#payfxcustomerfxrate:numeric# where paypayref=#paypayref:varchar#
updatemultipayTransactionInter.StmtType=PreparedStatement

# Added For Account Summary Screen By Malli (Nithyas changes)

############  AccViewDetails Screen Query #################

#distinct added because of multiple data
#CustOne_getAccDetails.Query=select distinct  a.ACCOUNT_NO, a.ACCOUNT_DESCRIPTION,a.CURRENCY_IND,a.ACCT_BRANCH_CODE || '-' || domain.DMNDOMAINVALDESC as ACCT_BRANCH_CODE,a.ACC_LIMIT ,a.BOOK_BALANCE- a. CLEAR_BALANCE as BLOCKED_FUND ,a. CLEAR_BALANCE,a.BOOK_BALANCE FROM ACC_BALANCE a,ds_domains domain WHERE A.ACCOUNT_NO = #ACCOUNT_NO:VARCHAR#  and domain.DMNDOMAINVAL=a.ACCT_BRANCH_CODE and a.EFFECTIVE_DATE  = ( select max(effective_date) from acc_balance where account_no = #ACCOUNT_NO:VARCHAR#  and a.EFFECTIVE_DATE <= to_date(#TRANS_TO_DATE:VARCHAR#,'DD/MM/YYYY')) 

CustOne_getAccDetails.Query=select distinct  a.ACCOUNT_NO, a.ACCOUNT_DESCRIPTION,a.CURRENCY_IND,a.ACCT_BRANCH_CODE || '-' || domain.DMNDOMAINVALDESC as ACCT_BRANCH_CODE,a.ACC_LIMIT ,a.BOOK_BALANCE- a. CLEAR_BALANCE as BLOCKED_FUND ,a. CLEAR_BALANCE,a.BOOK_BALANCE FROM ACC_BALANCE a,ds_domains domain WHERE A.ACCOUNT_NO = #ACCOUNT_NO:VARCHAR#  and domain.DMNDOMAINVAL=a.ACCT_BRANCH_CODE and a.EFFECTIVE_DATE  = ( select max(effective_date) from acc_balance where account_no = #ACCOUNT_NO:VARCHAR#  and EFFECTIVE_DATE <= to_date(#TRANS_TO_DATE:VARCHAR#,'DD/MM/YYYY')) 

CustOne_getAccDetails.TOColumnMap={ACCOUNT_NO=ACCOUNT_NO,ACCOUNT_DESCRIPTION=ACCOUNT_DESCRIPTION,CURRENCY_IND=CURRENCY_IND,ACCT_BRANCH_CODE=ACCT_BRANCH_CODE,ACC_LIMIT=ACC_LIMIT,BLOCKED_FUND=BLOCKED_FUND,CLEAR_BALANCE=CLEAR_BALANCE,BOOK_BALANCE=BOOK_BALANCE}
CustOne_getAccDetails.StmtType=PreparedStatement
CustOne_getAccDetails.OutputType=java.util.ArrayList


#CustOne_getAccDataDetails.Query=select a.ACCOUNT_NO,to_char(a.EFFECTIVE_DATE,'DD/MM/YYYY') as EFFECTIVE_DATE,'0' as DEBIT_INTEREST,'0' AS CREDIT_INTEREST,A.ACCRUED_INTEREST,a.BOOK_BALANCE from ACC_BALANCE a,ds_custid_map cust_map WHERE cust_map.CMPQLCUSTID = #CUSTOMER_NO:varchar#  and a.CUSTOMER_NO = cust_map.CMPAPPLCUSTID  AND a.EFFECTIVE_DATE between to_date(#TRANS_FRM_DATE:VARCHAR#,'Mon-DD-YYYY') AND to_date(#TRANS_TO_DATE:VARCHAR#,'Mon-DD-YYYY') AND A.ACCOUNT_NO = #ACCOUNT_NO:VARCHAR#
#prev one is coprrect, as of now hard coded the cust value since 925 has no data
CustOne_getAccDataDetails.Query=select a.ACCOUNT_NO,to_char(a.EFFECTIVE_DATE,'DD/MM/YYYY') as EFFECTIVE_DATE,'0' as DEBIT_INTEREST,'0' AS CREDIT_INTEREST,A.ACCRUED_INTEREST,a.BOOK_BALANCE from ACC_BALANCE a,ds_custid_map cust_map WHERE cust_map.CMPQLCUSTID = '81868209'  and a.CUSTOMER_NO = cust_map.CMPAPPLCUSTID  AND a.EFFECTIVE_DATE between to_date(#TRANS_FRM_DATE:VARCHAR#,'DD/MM/YYYY') AND to_date(#TRANS_TO_DATE:VARCHAR#,'DD/MM/YYYY') AND A.ACCOUNT_NO = #ACCOUNT_NO:VARCHAR#
CustOne_getAccDataDetails.TOColumnMap={ACCOUNT_NO=ACCOUNT_NO,EFFECTIVE_DATE=EFFECTIVE_DATE,DEBIT_INTEREST=DEBIT_INTEREST,CREDIT_INTEREST=CREDIT_INTEREST,ACCRUED_INTEREST=ACCRUED_INTEREST,BOOK_BALANCE=BOOK_BALANCE}
CustOne_getAccDataDetails.StmtType=PreparedStatement
CustOne_getAccDataDetails.OutputType=java.util.ArrayList

 ##### AccView combo Screen Query ####
       
#CustOne_getAccDetailsCombo.Query=select distinct a.ACCOUNT_NO as ACCOUNT_NO,a.ACCOUNT_NO || '-' || a.ACCOUNT_DESCRIPTION as ACCOUNT_DESCRIPTION  from ACC_BALANCE a, ds_custid_map cust_map Where cust_map.cmpqlcustid like #CMPQLCUSTID:varchar# and  a.CUSTOMER_NO = cust_map.CMPAPPLCUSTID   order by ACCOUNT_DESCRIPTION
#prev one is coprrect, as of now hard coded the cust value since 925 has no data
CustOne_getAccDetailsCombo.Query=select distinct a.ACCOUNT_NO as ACCOUNT_NO,a.ACCOUNT_NO || '-' || a.ACCOUNT_DESCRIPTION as ACCOUNT_DESCRIPTION  from ACC_BALANCE a, ds_custid_map cust_map Where cust_map.cmpqlcustid like '81868209' and  a.CUSTOMER_NO = cust_map.CMPAPPLCUSTID   order by ACCOUNT_DESCRIPTION
CustOne_getAccDetailsCombo.TOColumnMap={ACCOUNT_NO=ACCOUNT_NO,ACCOUNT_DESCRIPTION=ACCOUNT_DESCRIPTION}
CustOne_getAccDetailsCombo.StmtType=Statement
CustOne_getAccDetailsCombo.OutputType=java.util.Vector
#81868209
#69381651

############  Account Statement Screen Query #################


CustOne_getAccNumbers.Query=select distinct a.ACCOUNT_NO as ACCOUNT_NO, REPLACE( a.ACCOUNT_DESCRIPTION,CHR(10),'') as ACCOUNT_DESCRIPTION ,a.ACCT_BRANCH_CODE || '-' || domain.DMNDOMAINVALDESC as ACCT_BRANCH_CODE,a.ACCOUNT_TYPE || '-' || a.ACCOUNT_SUBTYPE as ACCOUNT_TYPE,a.CURRENCY_IND FROM ACC_BALANCE a,ds_domains domain, ds_custid_map cust_map Where cust_map.cmpqlcustid = '69381651' and  a.CUSTOMER_NO = cust_map.CMPAPPLCUSTID and domain.DMNDOMAINVAL=a.ACCT_BRANCH_CODE   order by ACCOUNT_DESCRIPTION
#below one is coprrect, as of now hard coded the cust value since 925 has no data
#CustOne_getAccNumbers.Query=select distinct a.ACCOUNT_NO as ACCOUNT_NO, REPLACE( a.ACCOUNT_DESCRIPTION,CHR(10),'') as ACCOUNT_DESCRIPTION ,a.ACCT_BRANCH_CODE || '-' || domain.DMNDOMAINVALDESC as ACCT_BRANCH_CODE,a.ACCOUNT_TYPE || '-' || a.ACCOUNT_SUBTYPE as ACCOUNT_TYPE,a.CURRENCY_IND FROM ACC_BALANCE a,ds_domains domain, ds_custid_map cust_map Where cust_map.cmpqlcustid = #CUSTOMER_NO:varchar# and  a.CUSTOMER_NO = cust_map.CMPAPPLCUSTID and domain.DMNDOMAINVAL=a.ACCT_BRANCH_CODE   order by ACCOUNT_DESCRIPTION
CustOne_getAccNumbers.TOColumnMap={ACCOUNT_NO=ACCOUNT_NO,ACCOUNT_DESCRIPTION=ACCOUNT_DESCRIPTION,ACCT_BRANCH_CODE=ACCT_BRANCH_CODE,ACCOUNT_TYPE=ACCOUNT_TYPE,CURRENCY_IND=CURRENCY_IND}
CustOne_getAccNumbers.StmtType=PreparedStatement
CustOne_getAccNumbers.OutputType=java.util.ArrayList

#distinct added in subquery because of multiple data


#CustOne_getAccStmtDetails.Query=select  distinct a.ACCOUNT_NO ,a.ACCOUNT_TYPE || '-' || a.ACCOUNT_SUBTYPE as ACCOUNT_TYPE , a.CURRENCY_IND ,a.ACCT_BRANCH_CODE || '-' || domain.DMNDOMAINVALDESC as ACCT_BRANCH_CODE  ,a. CLEAR_BALANCE ,a.BOOK_BALANCE ,(SELECT distinct coalesce(a.book_balance,0)  FROM acc_balance a,ds_custid_map cust_map Where cust_map.cmpqlcustid = '69381651' and  a.CUSTOMER_NO = cust_map.CMPAPPLCUSTID AND account_no = #ACCOUNT_NO:varchar#  and a.EFFECTIVE_DATE  = ( select max(effective_date) from acc_balance,ds_custid_map cust_map where cust_map.cmpqlcustid = '69381651' and  CUSTOMER_NO = cust_map.CMPAPPLCUSTID AND account_no = #ACCOUNT_NO:varchar# and effective_date <= to_date(#TO_DATE:varchar#,'DD/MM/YYYY')))  as OPEN_BALANCE FROM ACC_BALANCE a,ds_domains domain WHERE a.ACCOUNT_NO = #ACCOUNT_NO:varchar#  and domain.DMNDOMAINVAL=a.ACCT_BRANCH_CODE and a.EFFECTIVE_DATE between to_date(#FROM_DATE:varchar#,'DD/MM/YYYY') and to_date(#TO_DATE:varchar#,'DD/MM/YYYY')

CustOne_getAccStmtDetails.Query=select  distinct a.ACCOUNT_NO ,a.ACCOUNT_TYPE || '-' || a.ACCOUNT_SUBTYPE as ACCOUNT_TYPE , a.CURRENCY_IND ,a.ACCT_BRANCH_CODE || '-' || domain.DMNDOMAINVALDESC as ACCT_BRANCH_CODE  ,a. CLEAR_BALANCE ,a.BOOK_BALANCE ,(SELECT distinct coalesce(a.book_balance,0)  FROM acc_balance a,ds_custid_map cust_map Where cust_map.cmpqlcustid = '69381651' and  a.CUSTOMER_NO = cust_map.CMPAPPLCUSTID AND account_no = #ACCOUNT_NO:varchar#  and a.EFFECTIVE_DATE  = ( select max(effective_date) from acc_balance,ds_custid_map cust_map where cust_map.cmpqlcustid = '69381651' and  CUSTOMER_NO = cust_map.CMPAPPLCUSTID AND account_no = #ACCOUNT_NO:varchar# and effective_date <= to_date(#TO_DATE:varchar#,'DD/MM/YYYY')))  as OPEN_BALANCE FROM ACC_BALANCE a,ds_domains domain WHERE a.ACCOUNT_NO = #ACCOUNT_NO:varchar#  and domain.DMNDOMAINVAL=a.ACCT_BRANCH_CODE and a.EFFECTIVE_DATE = to_date(#TO_DATE:varchar#,'DD/MM/YYYY')

#below one is coprrect, as of now hard coded the cust value since 925 has no data
#CustOne_getAccStmtDetails.Query= select  distinct a.ACCOUNT_NO ,a.ACCOUNT_TYPE || '-' || a.ACCOUNT_SUBTYPE as ACCOUNT_TYPE , a.CURRENCY_IND ,a.ACCT_BRANCH_CODE || '-' || domain.DMNDOMAINVALDESC as ACCT_BRANCH_CODE  ,a. CLEAR_BALANCE ,a.BOOK_BALANCE ,(SELECT distinct coalesce(a.book_balance,0)  FROM acc_balance a,ds_custid_map cust_map Where cust_map.cmpqlcustid = #CUSTOMER_NO:varchar# and  a.CUSTOMER_NO = cust_map.CMPAPPLCUSTID AND account_no = #ACCOUNT_NO:varchar#  and a.EFFECTIVE_DATE  = ( select max(effective_date) from acc_balance,ds_custid_map cust_map where cust_map.cmpqlcustid = #CUSTOMER_NO:varchar# and  CUSTOMER_NO = cust_map.CMPAPPLCUSTID AND account_no = #ACCOUNT_NO:varchar# and To_char(effective_date,'Mon-DD-YYYY') <= #TO_DATE:varchar#))  as OPEN_BALANCE FROM ACC_BALANCE a,ds_domains domain WHERE a.ACCOUNT_NO = #ACCOUNT_NO:varchar#  and domain.DMNDOMAINVAL=a.ACCT_BRANCH_CODE and to_char(a.EFFECTIVE_DATE, 'Mon-DD-YYYY')  between #FROM_DATE:varchar# and #TO_DATE:varchar#
CustOne_getAccStmtDetails.TOColumnMap={ACCOUNT_NO=ACCOUNT_NO,ACCOUNT_TYPE=ACCOUNT_TYPE,CURRENCY_IND=CURRENCY_IND,ACCT_BRANCH_CODE=ACCT_BRANCH_CODE,CLEAR_BALANCE=CLEAR_BALANCE,BOOK_BALANCE=BOOK_BALANCE,OPEN_BALANCE=OPEN_BALANCE}
CustOne_getAccStmtDetails.StmtType=PreparedStatement
CustOne_getAccStmtDetails.OutputType=java.util.ArrayList

##CustOne_getAccStmtDataDetails.Query=SELECT rownum,posting_date,  to_char( value_date,'DD/MM/YYYY') as value_date,  narration_1,reference_no,  decode(sign(transaction_amount),'1',transaction_amount) as credit_amt,    decode(sign(transaction_amount),'-1',transaction_amount) as debit_amt,	(SELECT coalesce(a.book_balance,0)  FROM acc_balance a,ds_custid_map cust_map Where cust_map.cmpqlcustid = '69381651' and  a.CUSTOMER_NO = cust_map.CMPAPPLCUSTID AND account_no = #ACCOUNT_NO:varchar#  and a.EFFECTIVE_DATE  = ( select max(effective_date) from acc_balance,ds_custid_map cust_map where cust_map.cmpqlcustid = '69381651' and  CUSTOMER_NO = cust_map.CMPAPPLCUSTID AND account_no = #ACCOUNT_NO:varchar# and effective_date <= to_date(#TO_DATE:varchar#,'DD/MM/YYYY'))) AS RUNNING_BAL FROM cagmis,ds_custid_map cust_map Where cust_map.cmpqlcustid = '69381651' and  CUSTOMER_NO = cust_map.CMPAPPLCUSTID AND account_no = #ACCOUNT_NO:varchar# AND value_date between to_date(#FROM_DATE:varchar#,'DD/MM/YYYY') and to_date(#TO_DATE:varchar#,'DD/MM/YYYY')

CustOne_getAccStmtDataDetails.Query=SELECT rownum,posting_date,  to_char( value_date,'DD/MM/YYYY') as value_date,  narration_1,reference_no,  decode(sign(transaction_amount),'1',transaction_amount) as credit_amt,    decode(sign(transaction_amount),'-1',transaction_amount) as debit_amt,	(SELECT coalesce(a.book_balance,0)  FROM acc_balance a,ds_custid_map cust_map Where cust_map.cmpqlcustid = '69381651' and  a.CUSTOMER_NO = cust_map.CMPAPPLCUSTID AND account_no = #ACCOUNT_NO:varchar#  and a.EFFECTIVE_DATE  = ( select max(effective_date) from acc_balance,ds_custid_map cust_map where cust_map.cmpqlcustid = '69381651' and  CUSTOMER_NO = cust_map.CMPAPPLCUSTID AND account_no = #ACCOUNT_NO:varchar# and effective_date <= to_date(#TO_DATE:varchar#,'DD/MM/YYYY'))) AS RUNNING_BAL FROM cagmis,ds_custid_map cust_map Where cust_map.cmpqlcustid = '69381651' and  CUSTOMER_NO = cust_map.CMPAPPLCUSTID AND account_no = #ACCOUNT_NO:varchar# AND value_date between to_date(#FROM_DATE:varchar#,'DD/MM/YYYY') and to_date(#TO_DATE:varchar#,'DD/MM/YYYY')
#below one is coprrect, as of now hard coded the cust value since 925 has no data
#CustOne_getAccStmtDataDetails.Query=  SELECT rownum,posting_date,  to_char( value_date,'DD/MM/YYYY') as value_date,  narration_1,reference_no,  decode(sign(transaction_amount),'1',transaction_amount) as credit_amt,    decode(sign(transaction_amount),'-1',transaction_amount) as debit_amt,	(SELECT coalesce(a.book_balance,0)  FROM acc_balance a,ds_custid_map cust_map Where cust_map.cmpqlcustid = #CUSTOMER_NO:varchar# and  a.CUSTOMER_NO = cust_map.CMPAPPLCUSTID AND account_no = #ACCOUNT_NO:varchar#  and a.EFFECTIVE_DATE  = ( select max(effective_date) from acc_balance,ds_custid_map cust_map where cust_map.cmpqlcustid = #CUSTOMER_NO:varchar# and  CUSTOMER_NO = cust_map.CMPAPPLCUSTID AND account_no = #ACCOUNT_NO:varchar# and To_char(effective_date,'Mon-DD-YYYY') <= #TO_DATE:varchar#)) AS RUNNING_BAL FROM cagmis,ds_custid_map cust_map Where cust_map.cmpqlcustid = #CUSTOMER_NO:varchar# and  CUSTOMER_NO = cust_map.CMPAPPLCUSTID AND account_no = #ACCOUNT_NO:varchar# AND To_char(value_date,'Mon-DD-YYYY') between #FROM_DATE:varchar# and #TO_DATE:varchar#
CustOne_getAccStmtDataDetails.TOColumnMap={rownum=rownum,posting_date=posting_date,value_date=value_date,narration_1=narration_1,reference_no=reference_no,credit_amt=credit_amt,debit_amt=debit_amt,RUNNING_BAL=RUNNING_BAL}
CustOne_getAccStmtDataDetails.StmtType=PreparedStatement
CustOne_getAccStmtDataDetails.OutputType=java.util.ArrayList

# added for bulk import by basavesh

insertSetStatusTranscation.Query=insert into ds_pay_statuses (psttrxkey,pststatusdate,pstfileid,pststatuscode,pstdebitdate,pstnetamount,pstfxcontractno,pstfxdirectrate,pstcustomerfxrate,pstdebitcurr,pstdebitamount,pstpayeeamt,createdby,createddate,modifiedby,modifieddate,deleteflag,versionnum) values (#psttrxkey:numeric#,sysdate,1,#pststatuscode:numeric#,#pstdebitdate:date#,#pstnetamount:numeric#,#pstfxcontractno:varchar#,#pstfxdirectrate:numeric#,#pstcustomerfxrate:numeric#,#pstdebitcurr:varchar#,#pstdebitamount:numeric#,#pstpayeeamt:numeric#,#createdby:varchar#,#createddate:date#,#modifiedby:varchar#,#modifieddate:date#,#deleteflag:varchar#,#versionnum:numeric#)

insertSetStatusTranscation.StmtType=PreparedStatement

insertSetBatch.Query=insert into ds_batch (batbatchref,batgrpid,batapplicationid,batnooftxns,batstatus,batcreatedby) values(#batbatchref:varchar#,#batgrpid:varchar#,'',#batnooftxns:numeric#,#batstatus:varchar#,#batcreatedby:varchar#)

insertSetBatch.StmtType=PreparedStatement


insertSetswiftpayTransaction.Query=insert into ds_pay_txns (payccsstatuscode,paytrxkey,paygroupid,paybatchref,paypayref,paytypecode,paydebitaccnum,paycurrcode,paydebitamt,paypymtdate,paypayeeaccnum,paypayeename1,paypayeebankcode,payfxtypecode,payfxrate,payfxcustomerfxrate,paypayeeid,payconsolidate,payrecurring,payfreqpaymentcount,payfreqenddate,payfrequency) values (#payccsstatuscode:varchar#,#paytrxkey:numeric#,#paygroupid:varchar#,#paybatchref:varchar#,#paypayref:varchar#,'TT',#paydebitaccnum:varchar#,#paycurrcode:varchar#,#paydebitamt:numeric#,#paypymtdate:date#,#paypayeeaccnum:varchar#,#paypayeename1:varchar#,#paypayeebankcode:varchar#,#payfxtypecode:varchar#,#payfxrate:numeric#,#payfxcustomerfxrate:numeric#,#paypayeeid:varchar#,#payconsolidate:varchar#,#payrecurring:varchar#,#payfreqpaymentcount:numeric#,#payfreqenddate:date#,#payfrequency:varchar#)

insertsetswiftpayTransaction.StmtType=PreparedStatement


updtBIStatus.Query=update ds_bulkimp_filestatus set status='FAILURE' where bfsfilereferenceno=#bfsfilereferenceno:varchar#


#setTransactionLog.Query=insert into DS_PAY_TXNS_LOG (TRX_LOG_KEY,CREATED_MODIFIED_BY_NAME,PAYGROUPID,PAYBATCHREF,PAYPAYREF,DEBIT_ACCT_NO,CREDIT_ACT_NO,FA_ID,BRANCH_ID,CREATED_MODIFIED_DATE,CREATED_MODIFIED_BY_ID,CREATED_MODIFIED_BY_EMP_ID,CREATED_MODIFIED_BY_ROLE,PAYINVOICEAMT,CREATED_MODIFIED_BY_COMMENTS,LAST_ACTION,AMOUNT,REQUEST_DATE,FREQUENCY,RECURRING_FREQ,REPEAT_UNTILL) values (123412,'abhi','HNITEST','345','234234','234',#credit_act_no:varchar#,34,34,CURRENT DATE,'234234',#created_modified_by_emp_id:varchar#,'HNITEST',#payinvoiceamt:numeric#,#created_modified_by_comments:varchar#,'submitted',#amount:numeric#,#request_date:date#,#frequency:varchar#,#recurring_freq:varchar#,#repeat_untill:varchar#)


#Pending Transfer List Starts

getFrequencyValues.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_FrequencyValue'
getFrequencyValues.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getFrequencyValues.OutputType=java.util.Vector

getStatusValues.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_StatusCode' and dmndomainval in ('2','6', '46')
getStatusValues.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getStatusValues.OutputType=java.util.Vector

#getCompletePaymentsList.Query=select PAYPYMTDATE,(select dmndomainvaldesc from msowner.DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING) || '<br> (' || (select dmndomainvaldesc from msowner.DS_DOMAINS where   dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY) || ')'  as PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYPAYREF,'$'||rtrim (char (integer (PAYDEBITAMT))) || '.'|| substr (char (PAYDEBITAMT), locate ('.', char (PAYDEBITAMT))+1,length (char (PAYDEBITAMT)) - locate ('.', char (PAYDEBITAMT))) as PAYDEBITAMT,(select dmndomainvaldesc from msowner.DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,'Edit' as EDITLINK,'x' as DURATION,PAYFREQPAYMENTCOUNT,PAYTYPECODE,PAYFREQENDDATE,PAYFREQUENCY from msowner.DS_PAY_TXNS DPT 

#getPendingTransfersLIST_page.Query= select REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM, PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,EDITLINK,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) as PAYDEBITACCNUM,COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) as PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,(select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,'Edit,View,Cancel' as EDITLINK,PAYTYPECODE,PAYBATCHREF from  DS_PAY_TXNS DPT,SSO_ACCOUNT_PROPERTIES A, SSO_ACCOUNT_PROPERTIES B where DPT.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and DPT.KEYACCOUNTNUMBER_TO=B.KEY_ACCOUNT_NO and DPT.PAYCCSSTATUSCODE in ('2','6') or (DPT.PAYCCSSTATUSCODE='46' and DPT.REQUESTED_EXE_DT > CURRENT_TIMESTAMP) union select REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,CASE WHEN KEYACCOUNTNUMBER_FROM IS NULL THEN PAYPAYEENAME1 ELSE COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) END AS PAYDEBITACCNUM,CASE WHEN KEYACCOUNTNUMBER_TO IS NULL THEN PAYPAYEENAME1 ELSE COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) END AS PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,'Edit,View,Cancel' as EDITLINK,PAYTYPECODE,PAYBATCHREF from  DS_PAY_TXNS DPT, DS_PAYEE_REF DPR, SSO_ACCOUNT_PROPERTIES A where DPR.LIFE_USER_ID=#lifeUserId:varchar# and DPR.CPYPAYEEID = DPT.PAYPAYEEACCNUM and (DPT.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO OR DPT.KEYACCOUNTNUMBER_TO=A.KEY_ACCOUNT_NO) and  DPT.PAYCCSSTATUSCODE in ('2','6')  or (DPT.PAYCCSSTATUSCODE='46' and DPT.REQUESTED_EXE_DT > CURRENT_TIMESTAMP) #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only
#getPendingTransfersLIST_page.Query= select REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM, PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,EDITLINK,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) as PAYDEBITACCNUM,COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) as PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,(select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,'Edit,View,Cancel' as EDITLINK,PAYTYPECODE,PAYBATCHREF from  DS_PAY_TXNS DPT,SSO_ACCOUNT_PROPERTIES A, SSO_ACCOUNT_PROPERTIES B where DPT.LIFE_USER_ID=#lifeUserId:varchar# and DPT.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and DPT.KEYACCOUNTNUMBER_TO=B.KEY_ACCOUNT_NO and DPT.LIFE_USER_ID=A.LIFEUSERID and DPT.LIFE_USER_ID=B.LIFEUSERID and DPT.PAYCCSSTATUSCODE in ('2','6','46') or (DPT.PAYCCSSTATUSCODE='46' and DPT.REQUESTED_EXE_DT > CURRENT_TIMESTAMP) union select REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,CASE WHEN KEYACCOUNTNUMBER_FROM IS NULL THEN PAYPAYEENAME1 ELSE COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) END AS PAYDEBITACCNUM,CASE WHEN KEYACCOUNTNUMBER_TO IS NULL THEN PAYPAYEENAME1 ELSE COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) END AS PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,'Edit,View,Cancel' as EDITLINK,PAYTYPECODE,PAYBATCHREF from  DS_PAY_TXNS DPT, DS_PAYEE_REF DPR, SSO_ACCOUNT_PROPERTIES A where DPT.LIFE_USER_ID=#lifeUserId:varchar# and DPR.CPYPAYEEID = DPT.PAYPAYEEACCNUM and (DPT.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO OR DPT.KEYACCOUNTNUMBER_TO=A.KEY_ACCOUNT_NO) and DPT.LIFE_USER_ID=A.LIFEUSERID and  DPT.PAYCCSSTATUSCODE in ('2','6','46')  or (DPT.PAYCCSSTATUSCODE='46' and DPT.REQUESTED_EXE_DT > CURRENT_TIMESTAMP) #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only
###getPendingTransfersLIST_page.Query= select versionnum,REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM, PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,EDITLINK,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select DPT.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) as PAYDEBITACCNUM,COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) as PAYPAYEEACCNUM,CAST(PAYPAYREF AS BIGINT) as PAYPAYREF,PAYDEBITAMT,(select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,'Edit,View,Cancel' as EDITLINK,PAYTYPECODE,PAYBATCHREF from  DS_PAY_TXNS DPT,SSO_ACCOUNT_PROPERTIES A, SSO_ACCOUNT_PROPERTIES B where DPT.LIFE_USER_ID=#lifeUserId:varchar# and DPT.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and DPT.KEYACCOUNTNUMBER_TO=B.KEY_ACCOUNT_NO and DPT.LIFE_USER_ID=A.LIFEUSERID and DPT.LIFE_USER_ID=B.LIFEUSERID and (DPT.payccsstatuscode in ('2','6') or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT)> CURRENT DATE)) union select DPT.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,CASE WHEN KEYACCOUNTNUMBER_FROM IS NULL THEN PAYPAYEENAME1 ELSE COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) END AS PAYDEBITACCNUM,CASE WHEN KEYACCOUNTNUMBER_TO IS NULL THEN PAYPAYEENAME1 ELSE COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) END AS PAYPAYEEACCNUM,CAST(PAYPAYREF AS BIGINT) as PAYPAYREF,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,'Edit,View,Cancel' as EDITLINK,PAYTYPECODE,PAYBATCHREF from  DS_PAY_TXNS DPT, DS_PAYEE_REF DPR, SSO_ACCOUNT_PROPERTIES A where DPT.LIFE_USER_ID=#lifeUserId:varchar# and DPR.CPYPAYEEID = DPT.PAYPAYEEACCNUM and (DPT.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO OR DPT.KEYACCOUNTNUMBER_TO=A.KEY_ACCOUNT_NO) and DPT.LIFE_USER_ID=A.LIFEUSERID and  (DPT.payccsstatuscode in ('2','6') or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT)> CURRENT DATE)) #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only
##with out stargetPendingTransfersLIST_page.Query=select versionnum,REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM, PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,EDITLINK,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select txn_data1.versionnum ,txn_data1.REQUESTED_EXE_DT ,txn_data1.PAYFREQUENCYDESC , txn_data1.PAYDEBITACCNUM ,case when txn_data1.KEYACCOUNTNUMBER_TO = B.KEY_ACCOUNT_NO then COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) when txn_data1.KEYACCOUNTNUMBER_TO is null then txn_data1.PAYPAYEENAME1 when txn_data1.txn_type='INT' then concat('XXX-',RIGHT(TXN_DATA1.PAYPAYEEACCNUM,4)) else concat('XXX-',RIGHT(TXN_DATA1.tempdebit,4)) end  as PAYPAYEEACCNUM, txn_data1.PAYPAYREF ,txn_data1.PAYDEBITAMT ,txn_data1.status,txn_data1.EDITLINK,txn_data1.PAYTYPECODE ,txn_data1.PAYBATCHREF from(select txn_data.versionnum,txn_data.REQUESTED_EXE_DT,txn_data.PAYFREQUENCYDESC,case when txn_data.KEYACCOUNTNUMBER_from = A.KEY_ACCOUNT_NO then cOALESCE(A.NICK_NAME,A.FRIENDLY_NAME) when TXN_DATA.KEYACCOUNTNUMBER_from is null then TXN_DATA.PAYPAYEENAME1 else CONCAT('XXX-',right(TXN_DATA.PAYDEBITACCNUM,4)) END as PAYDEBITACCNUM,txn_data.PAYPAYEEACCNUM,txn_data.tempdebit,txn_data.PAYPAYEENAME1,txn_data.KEYACCOUNTNUMBER_TO,txn_data.txn_type,  txn_data.PAYPAYREF,txn_data.PAYDEBITAMT,txn_data.status,'Edit,View,Cancel' as EDITLINK,txn_data.PAYTYPECODE,txn_data.PAYBATCHREF,txn_data.life_user_id from (select dpt.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,dpt.paydebitaccnum as tempdebit,PAYPAYEENAME1,DPT.KEYACCOUNTNUMBER_TO ,DPT.KEYACCOUNTNUMBER_FROM,dpt.LIFE_USER_ID  ,dpt.txn_type ,CAST(PAYPAYREF AS BIGINT) as PAYPAYREF,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,PAYTYPECODE,PAYBATCHREF   from DS_PAY_TXNS DPT WHERE dpt.LIFE_USER_ID=#lifeUserId:varchar# and TRIAL_DEPO='N'  and  (DPT.payccsstatuscode in ('2','6') or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT)> CURRENT DATE))) as txn_data left outer join sso_account_properties A on txn_data.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and txn_data.LIFE_USER_ID=a.LIFEUSERID ) as txn_data1 left outer join sso_account_properties B on txn_data1.KEYACCOUNTNUMBER_TO =b.KEY_ACCOUNT_NO and txn_data1.LIFE_USER_ID=b.LIFEUSERID #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only
##with out stargetPendingTransfersLIST_page.TOColumnMap={versionnum=versionnum,REQUESTED_EXE_DT=REQUESTED_EXE_DT,PAYFREQUENCYDESC=PAYFREQUENCYDESC,PAYDEBITACCNUM=PAYDEBITACCNUM,PAYPAYEEACCNUM=PAYPAYEEACCNUM,PAYPAYREF=PAYPAYREF,PAYDEBITAMT=PAYDEBITAMT,STATUS=STATUS,EDITLINK=EDITLINK,PAYTYPECODE=PAYTYPECODE,PAYBATCHREF=PAYBATCHREF,total_rows=total_rows}
#getPendingTransfersLIST.PgnUniqueKeys=REQUESTED_EXE_DT:Date:ASC#PAYPAYREF:numeric:ASC
#getPendingTransfersLIST.SortKeys=REQUESTED_EXE_DT:Date:ASC#PAYPAYREF:numeric:ASC
#getPendingTransfersLIST_page.Query=select versionnum,REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM, PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,txn_type,EDITLINK,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select txn_data1.versionnum ,txn_data1.REQUESTED_EXE_DT ,txn_data1.PAYFREQUENCYDESC , txn_data1.PAYDEBITACCNUM ,case when txn_data1.KEYACCOUNTNUMBER_TO = B.KEY_ACCOUNT_NO then COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) when txn_data1.KEYACCOUNTNUMBER_TO is null then txn_data1.PAYPAYEENAME1 when txn_data1.txn_type='INT' then concat('XXX-',RIGHT(TXN_DATA1.PAYPAYEEACCNUM,4)) else concat('XXX-',RIGHT(TXN_DATA1.tempdebit,4)) end  as PAYPAYEEACCNUM, txn_data1.PAYPAYREF ,txn_data1.PAYDEBITAMT ,txn_data1.txn_type,txn_data1.status,txn_data1.EDITLINK,txn_data1.PAYTYPECODE ,txn_data1.PAYBATCHREF from(select txn_data.versionnum,txn_data.REQUESTED_EXE_DT,txn_data.PAYFREQUENCYDESC,case when txn_data.KEYACCOUNTNUMBER_from = A.KEY_ACCOUNT_NO then cOALESCE(A.NICK_NAME,A.FRIENDLY_NAME) when TXN_DATA.KEYACCOUNTNUMBER_from is null then TXN_DATA.PAYPAYEENAME1 else CONCAT('XXX-',right(TXN_DATA.PAYDEBITACCNUM,4)) END as PAYDEBITACCNUM,txn_data.PAYPAYEEACCNUM,txn_data.tempdebit,txn_data.PAYPAYEENAME1,txn_data.KEYACCOUNTNUMBER_TO,txn_data.txn_type,  txn_data.PAYPAYREF,txn_data.PAYDEBITAMT,txn_data.status,'Edit,View,Cancel' as EDITLINK,txn_data.PAYTYPECODE,txn_data.PAYBATCHREF,txn_data.life_user_id from (select dpt.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,dpt.paydebitaccnum as tempdebit,(select dr.cpypayeename1||' '||'(XX-'||trim(coalesce(right(dr.cpyaccnum,4), right(dr.cpyaccnum,3), right(dr.cpyaccnum,2)))||')' from ds_payee_ref dr where dr.cpypayeeid=dpt.paypayeeaccnum) as PAYPAYEENAME1,DPT.KEYACCOUNTNUMBER_TO ,DPT.KEYACCOUNTNUMBER_FROM,dpt.LIFE_USER_ID  ,dpt.txn_type ,CAST(PAYPAYREF AS BIGINT) as PAYPAYREF,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,PAYTYPECODE,PAYBATCHREF   from DS_PAY_TXNS DPT WHERE ((DPT.TXN_TYPE in ('INT','ACH-OUT') and KEYACCOUNTNUMBER_from in (select KEY_ACCOUNT_NO from sso_account_properties where LIFEUSERID = #lifeUserId:varchar#)) OR ((DPT.TXN_TYPE ='ACH-IN') and DPT.PAYPAYEEACCNUM in (select CPYPAYEEID from DS_PAYEE_REF where KEY_CLIENT=#lifeUserId:varchar# and KEY_LINK=#lifeUserId:varchar#)) )  and TRIAL_DEPO='N'  and  (DPT.payccsstatuscode in ('2','6') or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT)> CURRENT DATE))) as txn_data left outer join sso_account_properties A on txn_data.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and txn_data.LIFE_USER_ID=a.LIFEUSERID ) as txn_data1 left outer join sso_account_properties B on txn_data1.KEYACCOUNTNUMBER_TO =b.KEY_ACCOUNT_NO and txn_data1.LIFE_USER_ID=b.LIFEUSERID #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with UR


getPendingTransfersLIST_page.Query=select versionnum,REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM, PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,txn_type,EDITLINK,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select txn_data1.versionnum ,txn_data1.REQUESTED_EXE_DT ,txn_data1.PAYFREQUENCYDESC , txn_data1.PAYDEBITACCNUM ,case when txn_data1.KEYACCOUNTNUMBER_TO = B.KEY_ACCOUNT_NO then COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) when txn_data1.KEYACCOUNTNUMBER_TO is null then txn_data1.PAYPAYEENAME1 when txn_data1.txn_type='INT' then concat('XXX-',RIGHT(TXN_DATA1.PAYPAYEEACCNUM,4)) else concat('XXX-',RIGHT(TXN_DATA1.tempdebit,4)) end  as PAYPAYEEACCNUM, txn_data1.PAYPAYREF ,txn_data1.PAYDEBITAMT ,txn_data1.txn_type,txn_data1.status,txn_data1.EDITLINK,txn_data1.PAYTYPECODE ,txn_data1.PAYBATCHREF from(select txn_data.versionnum,txn_data.REQUESTED_EXE_DT,txn_data.PAYFREQUENCYDESC,case when txn_data.KEYACCOUNTNUMBER_from = A.KEY_ACCOUNT_NO then cOALESCE(A.NICK_NAME,A.FRIENDLY_NAME) when TXN_DATA.KEYACCOUNTNUMBER_from is null then TXN_DATA.PAYPAYEENAME1 else CONCAT('XXX-',right(TXN_DATA.PAYDEBITACCNUM,4)) END as PAYDEBITACCNUM,txn_data.PAYPAYEEACCNUM,txn_data.tempdebit,txn_data.PAYPAYEENAME1,txn_data.KEYACCOUNTNUMBER_TO,txn_data.txn_type,  txn_data.PAYPAYREF,txn_data.PAYDEBITAMT,txn_data.status,'Edit,View,Cancel' as EDITLINK,txn_data.PAYTYPECODE,txn_data.PAYBATCHREF,txn_data.life_user_id from (select dpt.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,dpt.paydebitaccnum as tempdebit,(select dr.cpypayeename1||' '||'(XX-'||trim(coalesce(right(dr.cpyaccnum,4), right(dr.cpyaccnum,3), right(dr.cpyaccnum,2)))||')' from ds_payee_ref dr where dr.cpypayeeid=dpt.paypayeeaccnum) as PAYPAYEENAME1,DPT.KEYACCOUNTNUMBER_TO ,DPT.KEYACCOUNTNUMBER_FROM,dpt.LIFE_USER_ID  ,dpt.txn_type ,CAST(PAYPAYREF AS BIGINT) as PAYPAYREF,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,PAYTYPECODE,PAYBATCHREF   from DS_PAY_TXNS DPT WHERE ((DPT.TXN_TYPE in ('INT','ACH-OUT') and KEYACCOUNTNUMBER_from in (select KEY_ACCOUNT_NO from sso_account_properties where LIFEUSERID = #lifeUserId:varchar#)) OR ((DPT.TXN_TYPE ='ACH-IN') and DPT.PAYPAYEEACCNUM in (select CPYPAYEEID from DS_PAYEE_REF where KEY_CLIENT=#keyClientId:varchar# )) )  and TRIAL_DEPO='N' and RETIREMENT_MNEMONIC is null and  (DPT.payccsstatuscode in ('2','6','80') or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT)> CURRENT DATE))) as txn_data left outer join sso_account_properties A on txn_data.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and a.LIFEUSERID=#lifeUserId:varchar# ) as txn_data1 left outer join sso_account_properties B on txn_data1.KEYACCOUNTNUMBER_TO =b.KEY_ACCOUNT_NO and b.LIFEUSERID=#lifeUserId:varchar# #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with UR

##New##getPendingTransfersLIST_page.Query=select versionnum,REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM, PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,txn_type,EDITLINK,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select txn_data1.versionnum ,txn_data1.REQUESTED_EXE_DT ,txn_data1.PAYFREQUENCYDESC , txn_data1.PAYDEBITACCNUM ,case when txn_data1.KEYACCOUNTNUMBER_TO = B.KEY_ACCOUNT_NO then COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) when txn_data1.KEYACCOUNTNUMBER_TO is null then txn_data1.PAYPAYEENAME1 when txn_data1.txn_type='INT' then concat('XXX-',RIGHT(TXN_DATA1.PAYPAYEEACCNUM,4)) else concat('XXX-',RIGHT(TXN_DATA1.tempdebit,4)) end  as PAYPAYEEACCNUM, txn_data1.PAYPAYREF ,txn_data1.PAYDEBITAMT ,txn_data1.txn_type,txn_data1.status,txn_data1.EDITLINK,txn_data1.PAYTYPECODE ,txn_data1.PAYBATCHREF from(select txn_data.versionnum,txn_data.REQUESTED_EXE_DT,txn_data.PAYFREQUENCYDESC,case when txn_data.KEYACCOUNTNUMBER_from = A.KEY_ACCOUNT_NO then cOALESCE(A.NICK_NAME,A.FRIENDLY_NAME) when TXN_DATA.KEYACCOUNTNUMBER_from is null then TXN_DATA.PAYPAYEENAME1 else CONCAT('XXX-',right(TXN_DATA.PAYDEBITACCNUM,4)) END as PAYDEBITACCNUM,txn_data.PAYPAYEEACCNUM,txn_data.tempdebit,txn_data.PAYPAYEENAME1,txn_data.KEYACCOUNTNUMBER_TO,txn_data.txn_type,  txn_data.PAYPAYREF,txn_data.PAYDEBITAMT,txn_data.status,'Edit,View,Cancel' as EDITLINK,txn_data.PAYTYPECODE,txn_data.PAYBATCHREF,txn_data.life_user_id from (select dpt.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,dpt.paydebitaccnum as tempdebit,(select dr.cpypayeename1||' '||'(XX-'||trim(coalesce(right(dr.cpyaccnum,4), right(dr.cpyaccnum,3), right(dr.cpyaccnum,2)))||')' from ds_payee_ref dr where dr.cpypayeeid=dpt.paypayeeaccnum) as PAYPAYEENAME1,DPT.KEYACCOUNTNUMBER_TO ,DPT.KEYACCOUNTNUMBER_FROM,dpt.LIFE_USER_ID  ,dpt.txn_type ,CAST(PAYPAYREF AS BIGINT) as PAYPAYREF,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,PAYTYPECODE,PAYBATCHREF   from DS_PAY_TXNS DPT WHERE ((DPT.TXN_TYPE in ('INT','ACH-OUT') and KEYACCOUNTNUMBER_from in (select KEY_ACCOUNT_NO from sso_account_properties where LIFEUSERID = #lifeUserId:varchar#)) OR ((DPT.TXN_TYPE ='ACH-IN') and DPT.PAYPAYEEACCNUM in (select CPYPAYEEID from DS_PAYEE_REF where KEY_CLIENT=#keyClientId:varchar# )) )  and TRIAL_DEPO='N' and RETIREMENT_MNEMONIC is null  and  (DPT.payccsstatuscode in ('2','6') or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT)> CURRENT DATE))) as txn_data left outer join sso_account_properties A on txn_data.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO  ) as txn_data1 left outer join sso_account_properties B on txn_data1.KEYACCOUNTNUMBER_TO =b.KEY_ACCOUNT_NO  #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with UR
getPendingTransfersLIST_page.TOColumnMap={versionnum=versionnum,REQUESTED_EXE_DT=REQUESTED_EXE_DT,PAYFREQUENCYDESC=PAYFREQUENCYDESC,PAYDEBITACCNUM=PAYDEBITACCNUM,PAYPAYEEACCNUM=PAYPAYEEACCNUM,PAYPAYREF=PAYPAYREF,PAYDEBITAMT=PAYDEBITAMT,STATUS=STATUS,txn_type=txn_type,EDITLINK=EDITLINK,PAYTYPECODE=PAYTYPECODE,PAYBATCHREF=PAYBATCHREF,total_rows=total_rows}

getPendingTransfersLIST_page.OutputType=java.util.ArrayList
getPendingTransfersLIST.StmtType=PreparedStatement
getPendingTransfersLIST.PgnUniqueKeys=PAYPAYREF:numeric:DESC
getPendingTransfersLIST.SortKeys=PAYPAYREF:numeric:DESC

#getSearchPaymentsLIST_page.Query=select REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,EDITLINK,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) as PAYDEBITACCNUM,COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) as PAYPAYEEACCNUM,CAST(PAYPAYREF AS BIGINT) as PAYPAYREF,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,'Edit,View,Cancel' as EDITLINK,PAYTYPECODE,PAYBATCHREF from  DS_PAY_TXNS DPT, SSO_ACCOUNT_PROPERTIES A, SSO_ACCOUNT_PROPERTIES B where DPT.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and DPT.KEYACCOUNTNUMBER_TO=B.KEY_ACCOUNT_NO and  DATE(DPT.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND DPT.paydebitamt BETWEEN (#minAmount:numeric#) AND (#maxAmount:numeric#) AND (  UPPER(A.NICK_NAME) like #accountNo:varchar# OR UPPER(B.NICK_NAME) like #accountNo:varchar# OR UPPER(A.FRIENDLY_NAME) like  #accountNo:varchar# OR UPPER(B.FRIENDLY_NAME) like  #accountNo:varchar# OR UPPER(A.ACCOUNT_NO) like #accountNo:varchar# OR UPPER(B.ACCOUNT_NO) like #accountNo:varchar# ) AND DPT.PAYPAYREF like #confirmationNo:varchar# AND DPT.payccsstatuscode like #status:varchar# AND DPT.payccsstatuscode in ('2','6', '46')  AND DPT.PAYRECURRING like #frequency:varchar# union select REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,CASE WHEN KEYACCOUNTNUMBER_FROM IS NULL THEN PAYPAYEENAME1 ELSE COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) END AS PAYDEBITACCNUM,CASE WHEN KEYACCOUNTNUMBER_TO IS NULL THEN PAYPAYEENAME1 ELSE COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) END AS PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT, (select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS ,'Edit,View,Cancel' as EDITLINK,PAYTYPECODE,PAYBATCHREF from  DS_PAY_TXNS DPT,  DS_PAYEE_REF DPR, SSO_ACCOUNT_PROPERTIES A where DPR.LIFE_USER_ID like #lifeUserId:varchar# AND (DPT.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO OR DPT.KEYACCOUNTNUMBER_TO=A.KEY_ACCOUNT_NO) AND (UPPER(DPR.CPYACCNUM) like #accountNo:varchar# OR UPPER(DPT.PAYPAYEENAME1) like  #accountNo:varchar# OR UPPER(A.NICK_NAME) like #accountNo:varchar# OR UPPER(A.FRIENDLY_NAME) like  #accountNo:varchar# OR UPPER(A.ACCOUNT_NO) like #accountNo:varchar# ) and DPR.CPYPAYEEID = DPT.PAYPAYEEACCNUM and DATE(DPT.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND DPT.paydebitamt BETWEEN (#minAmount:numeric#) AND (#maxAmount:numeric#) AND DPT.PAYPAYREF like #confirmationNo:varchar# AND DPT.payccsstatuscode like #status:varchar# AND DPT.payccsstatuscode in ('2','6','46')  AND DPT.PAYRECURRING like #frequency:varchar#   #sortlogic:varchar#   )  as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only 
#getSearchPaymentsLIST_page.Query=select REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,EDITLINK,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) as PAYDEBITACCNUM,COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) as PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,'Edit,View,Cancel' as EDITLINK,PAYTYPECODE,PAYBATCHREF from  DS_PAY_TXNS DPT, SSO_ACCOUNT_PROPERTIES A, SSO_ACCOUNT_PROPERTIES B where DPT.LIFE_USER_ID=#lifeUserId:varchar# and DPT.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and DPT.KEYACCOUNTNUMBER_TO=B.KEY_ACCOUNT_NO and DPT.LIFE_USER_ID=A.LIFEUSERID and DPT.LIFE_USER_ID=B.LIFEUSERID and  DATE(DPT.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND DPT.paydebitamt BETWEEN (#minAmount:numeric#) AND (#maxAmount:numeric#) AND (  UPPER(A.NICK_NAME) like #accountNo:varchar# OR UPPER(B.NICK_NAME) like #accountNo:varchar# OR UPPER(A.FRIENDLY_NAME) like  #accountNo:varchar# OR UPPER(B.FRIENDLY_NAME) like  #accountNo:varchar# OR UPPER(A.ACCOUNT_NO) like #accountNo:varchar# OR UPPER(B.ACCOUNT_NO) like #accountNo:varchar# ) AND DPT.PAYPAYREF like #confirmationNo:varchar# AND DPT.payccsstatuscode like #status:varchar# AND DPT.payccsstatuscode in ('2','6', '46')  or (DPT.PAYCCSSTATUSCODE='46' and DPT.REQUESTED_EXE_DT > CURRENT_TIMESTAMP) AND DPT.PAYRECURRING like #frequency:varchar# union select REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,CASE WHEN KEYACCOUNTNUMBER_FROM IS NULL THEN PAYPAYEENAME1 ELSE COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) END AS PAYDEBITACCNUM,CASE WHEN KEYACCOUNTNUMBER_TO IS NULL THEN PAYPAYEENAME1 ELSE COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) END AS PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT, (select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS ,'Edit,View,Cancel' as EDITLINK,PAYTYPECODE,PAYBATCHREF from  DS_PAY_TXNS DPT,  DS_PAYEE_REF DPR, SSO_ACCOUNT_PROPERTIES A where DPT.LIFE_USER_ID like #lifeUserId:varchar# AND (DPT.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO OR DPT.KEYACCOUNTNUMBER_TO=A.KEY_ACCOUNT_NO) and DPT.LIFE_USER_ID=A.LIFEUSERID AND (UPPER(DPR.CPYACCNUM) like #accountNo:varchar# OR UPPER(DPT.PAYPAYEENAME1) like  #accountNo:varchar# OR UPPER(A.NICK_NAME) like #accountNo:varchar# OR UPPER(A.FRIENDLY_NAME) like  #accountNo:varchar# OR UPPER(A.ACCOUNT_NO) like #accountNo:varchar# ) and DPR.CPYPAYEEID = DPT.PAYPAYEEACCNUM and DATE(DPT.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND DPT.paydebitamt BETWEEN (#minAmount:numeric#) AND (#maxAmount:numeric#) AND DPT.PAYPAYREF like #confirmationNo:varchar# AND DPT.payccsstatuscode like #status:varchar# AND DPT.payccsstatuscode in ('2','6','46')  or (DPT.PAYCCSSTATUSCODE='46' and DPT.REQUESTED_EXE_DT > CURRENT_TIMESTAMP) AND DPT.PAYRECURRING like #frequency:varchar#   #sortlogic:varchar#   )  as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only
##getSearchPaymentsLIST_page.Query=select versionnum, REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,EDITLINK,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select DPT.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) as PAYDEBITACCNUM,COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) as PAYPAYEEACCNUM,CAST(PAYPAYREF AS BIGINT) as PAYPAYREF,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,'Edit,View,Cancel' as EDITLINK,PAYTYPECODE,PAYBATCHREF from  DS_PAY_TXNS DPT, SSO_ACCOUNT_PROPERTIES A, SSO_ACCOUNT_PROPERTIES B where DPT.LIFE_USER_ID=#lifeUserId:varchar# and DPT.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and DPT.KEYACCOUNTNUMBER_TO=B.KEY_ACCOUNT_NO and DPT.LIFE_USER_ID=A.LIFEUSERID and DPT.LIFE_USER_ID=B.LIFEUSERID and  date(DPT.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND DPT.paydebitamt BETWEEN (#minAmount:numeric#) AND (#maxAmount:numeric#) AND (  UPPER(A.NICK_NAME) like #accountNo:varchar# OR UPPER(B.NICK_NAME) like #accountNo:varchar# OR UPPER(A.FRIENDLY_NAME) like  #accountNo:varchar# OR UPPER(B.FRIENDLY_NAME) like  #accountNo:varchar# OR UPPER(A.ACCOUNT_NO) like #accountNo:varchar# OR UPPER(B.ACCOUNT_NO) like #accountNo:varchar# ) AND DPT.PAYPAYREF like #confirmationNo:varchar# AND DPT.payccsstatuscode like #status:varchar# AND (DPT.payccsstatuscode in ('2','6') or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT) > CURRENT DATE)) AND DPT.PAYRECURRING like #frequency:varchar# union select DPT.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,CASE WHEN KEYACCOUNTNUMBER_FROM IS NULL THEN PAYPAYEENAME1 ELSE COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) END AS PAYDEBITACCNUM,CASE WHEN KEYACCOUNTNUMBER_TO IS NULL THEN PAYPAYEENAME1 ELSE COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) END AS PAYPAYEEACCNUM,CAST(PAYPAYREF AS BIGINT) as PAYPAYREF,PAYDEBITAMT, (select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS ,'Edit,View,Cancel' as EDITLINK,PAYTYPECODE,PAYBATCHREF from  DS_PAY_TXNS DPT,  DS_PAYEE_REF DPR, SSO_ACCOUNT_PROPERTIES A where DPT.LIFE_USER_ID like #lifeUserId:varchar# AND (DPT.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO OR DPT.KEYACCOUNTNUMBER_TO=A.KEY_ACCOUNT_NO) and DPT.LIFE_USER_ID=A.LIFEUSERID AND (UPPER(DPR.CPYACCNUM) like #accountNo:varchar# OR UPPER(DPT.PAYPAYEENAME1) like  #accountNo:varchar# OR UPPER(A.NICK_NAME) like #accountNo:varchar# OR UPPER(A.FRIENDLY_NAME) like  #accountNo:varchar# OR UPPER(A.ACCOUNT_NO) like #accountNo:varchar# ) and DPR.CPYPAYEEID = DPT.PAYPAYEEACCNUM and DATE(DPT.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND DPT.paydebitamt BETWEEN (#minAmount:numeric#) AND (#maxAmount:numeric#) AND DPT.PAYPAYREF like #confirmationNo:varchar# AND DPT.payccsstatuscode like #status:varchar# AND (DPT.payccsstatuscode in ('2','6') or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT) > CURRENT DATE)) AND DPT.PAYRECURRING like #frequency:varchar#   #sortlogic:varchar#   )  as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only
###getSearchPaymentsLIST_page.Query=select versionnum,REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM, PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,EDITLINK,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select txn_data1.versionnum ,txn_data1.REQUESTED_EXE_DT ,txn_data1.PAYFREQUENCYDESC , txn_data1.PAYDEBITACCNUM ,case when txn_data1.KEYACCOUNTNUMBER_TO = B.KEY_ACCOUNT_NO then COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) when txn_data1.KEYACCOUNTNUMBER_TO is null then txn_data1.PAYPAYEENAME1 when txn_data1.txn_type='INT' then concat('XXX-',RIGHT(TXN_DATA1.PAYPAYEEACCNUM,4)) else concat('XXX-',RIGHT(TXN_DATA1.tempdebit,4)) end  as PAYPAYEEACCNUM, txn_data1.PAYPAYREF ,txn_data1.PAYDEBITAMT ,txn_data1.status,txn_data1.EDITLINK,txn_data1.PAYTYPECODE ,txn_data1.PAYBATCHREF from(select txn_data.versionnum,txn_data.REQUESTED_EXE_DT,txn_data.PAYFREQUENCYDESC,case when txn_data.KEYACCOUNTNUMBER_from = A.KEY_ACCOUNT_NO then cOALESCE(A.NICK_NAME,A.FRIENDLY_NAME) when TXN_DATA.KEYACCOUNTNUMBER_from is null then TXN_DATA.PAYPAYEENAME1 else CONCAT('XXX-',right(TXN_DATA.PAYDEBITACCNUM,4)) END as PAYDEBITACCNUM,txn_data.PAYPAYEEACCNUM,txn_data.tempdebit,txn_data.PAYPAYEENAME1,txn_data.KEYACCOUNTNUMBER_TO,txn_data.txn_type,  txn_data.PAYPAYREF,txn_data.payccsstatuscode,txn_data.PAYRECURRING,txn_data.PAYDEBITAMT,txn_data.status,'Edit,View,Cancel' as EDITLINK,txn_data.PAYTYPECODE,txn_data.PAYBATCHREF,txn_data.life_user_id from (select dpt.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,dpt.paydebitaccnum as tempdebit,PAYPAYEENAME1,DPT.KEYACCOUNTNUMBER_TO ,DPT.KEYACCOUNTNUMBER_FROM,dpt.LIFE_USER_ID  ,dpt.txn_type ,PAYPAYREF  ,payccsstatuscode,PAYRECURRING,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,PAYTYPECODE,PAYBATCHREF   from DS_PAY_TXNS DPT WHERE dpt.LIFE_USER_ID=#lifeUserId:varchar# and TRIAL_DEPO='N'  and  (DPT.payccsstatuscode in ('2','6') or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT)> CURRENT DATE))) as txn_data left outer join sso_account_properties A on txn_data.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and txn_data.LIFE_USER_ID=a.LIFEUSERID ) as txn_data1 left outer join sso_account_properties B on txn_data1.KEYACCOUNTNUMBER_TO =b.KEY_ACCOUNT_NO and txn_data1.LIFE_USER_ID=b.LIFEUSERID  where DATE(txn_data1.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND ( UPPER(B.NICK_NAME) like #accountNo:varchar# OR UPPER(B.FRIENDLY_NAME) like  #accountNo:varchar# OR UPPER(B.ACCOUNT_NO) like #accountNo:varchar# OR UPPER(txn_data1.PAYPAYEENAME1) like  #accountNo:varchar# )  AND txn_data1.paydebitamt BETWEEN (#minAmount:numeric#) AND (#maxAmount:numeric#) AND txn_data1.PAYPAYREF like #confirmationNo:varchar# AND txn_data1.payccsstatuscode like #status:varchar# AND (txn_data1.payccsstatuscode in ('2','6') or (txn_data1.PAYCCSSTATUSCODE='46' and date(txn_data1.REQUESTED_EXE_DT) > CURRENT DATE)) AND txn_data1.PAYRECURRING like #frequency:varchar# #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only
# with out start getSearchPaymentsLIST_page.Query=select versionnum,REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM, PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,EDITLINK,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select txn_data1.versionnum ,txn_data1.REQUESTED_EXE_DT ,txn_data1.PAYFREQUENCYDESC , txn_data1.PAYDEBITACCNUM ,case when txn_data1.KEYACCOUNTNUMBER_TO = B.KEY_ACCOUNT_NO then COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) when txn_data1.KEYACCOUNTNUMBER_TO is null then txn_data1.PAYPAYEENAME1 when txn_data1.txn_type='INT' then concat('XXX-',RIGHT(TXN_DATA1.PAYPAYEEACCNUM,4)) else concat('XXX-',RIGHT(TXN_DATA1.tempdebit,4)) end  as PAYPAYEEACCNUM, txn_data1.PAYPAYREF,txn_data1.PAYPAYREF1 ,txn_data1.PAYDEBITAMT ,txn_data1.status,txn_data1.EDITLINK,txn_data1.PAYTYPECODE ,txn_data1.PAYBATCHREF from(select txn_data.versionnum,txn_data.REQUESTED_EXE_DT,txn_data.PAYFREQUENCYDESC,case when txn_data.KEYACCOUNTNUMBER_from = A.KEY_ACCOUNT_NO then cOALESCE(A.NICK_NAME,A.FRIENDLY_NAME) when TXN_DATA.KEYACCOUNTNUMBER_from is null then TXN_DATA.PAYPAYEENAME1 else CONCAT('XXX-',right(TXN_DATA.PAYDEBITACCNUM,4)) END as PAYDEBITACCNUM,txn_data.PAYPAYEEACCNUM,txn_data.tempdebit,txn_data.PAYPAYEENAME1,txn_data.KEYACCOUNTNUMBER_TO,txn_data.txn_type,  txn_data.PAYPAYREF,txn_data.PAYPAYREF1,txn_data.payccsstatuscode,txn_data.PAYRECURRING,txn_data.PAYDEBITAMT,txn_data.status,'Edit,View,Cancel' as EDITLINK,txn_data.PAYTYPECODE,txn_data.PAYBATCHREF,txn_data.life_user_id from (select dpt.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,dpt.paydebitaccnum as tempdebit,PAYPAYEENAME1,DPT.KEYACCOUNTNUMBER_TO ,DPT.KEYACCOUNTNUMBER_FROM,dpt.LIFE_USER_ID  ,dpt.txn_type ,CAST(PAYPAYREF as bigint) as PAYPAYREF,PAYPAYREF as PAYPAYREF1 ,payccsstatuscode,PAYRECURRING,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,PAYTYPECODE,PAYBATCHREF   from DS_PAY_TXNS DPT WHERE dpt.LIFE_USER_ID=#lifeUserId:varchar# and TRIAL_DEPO='N'  and  (DPT.payccsstatuscode in ('2','6') or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT)> CURRENT DATE))) as txn_data left outer join sso_account_properties A on txn_data.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and txn_data.LIFE_USER_ID=a.LIFEUSERID ) as txn_data1 left outer join sso_account_properties B on txn_data1.KEYACCOUNTNUMBER_TO =b.KEY_ACCOUNT_NO and txn_data1.LIFE_USER_ID=b.LIFEUSERID  where DATE(txn_data1.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND ( UPPER(B.NICK_NAME) like #accountNo:varchar# OR UPPER(B.FRIENDLY_NAME) like  #accountNo:varchar# OR UPPER(B.ACCOUNT_NO) like #accountNo:varchar# OR UPPER(txn_data1.PAYPAYEENAME1) like  #accountNo:varchar# )  AND txn_data1.paydebitamt BETWEEN (#minAmount:numeric#) AND (#maxAmount:numeric#) AND txn_data1.PAYPAYREF1 like #confirmationNo:varchar# AND txn_data1.payccsstatuscode like #status:varchar# AND (txn_data1.payccsstatuscode in ('2','6') or (txn_data1.PAYCCSSTATUSCODE='46' and date(txn_data1.REQUESTED_EXE_DT) > CURRENT DATE)) AND txn_data1.PAYRECURRING like #frequency:varchar# #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only
# with out star getSearchPaymentsLIST_page.TOColumnMap={versionnum=versionnum,REQUESTED_EXE_DT=REQUESTED_EXE_DT,PAYFREQUENCYDESC=PAYFREQUENCYDESC,PAYDEBITACCNUM=PAYDEBITACCNUM,PAYPAYEEACCNUM=PAYPAYEEACCNUM,PAYPAYREF=PAYPAYREF,PAYDEBITAMT=PAYDEBITAMT,STATUS=STATUS,EDITLINK=EDITLINK,PAYTYPECODE=PAYTYPECODE,PAYBATCHREF=PAYBATCHREF,total_rows=total_rows}
##getSearchPaymentsLIST_page.Query=select versionnum,REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM, PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,txn_type,EDITLINK,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select txn_data1.versionnum ,txn_data1.REQUESTED_EXE_DT ,txn_data1.PAYFREQUENCYDESC , txn_data1.PAYDEBITACCNUM ,case when txn_data1.KEYACCOUNTNUMBER_TO = B.KEY_ACCOUNT_NO then COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) when txn_data1.KEYACCOUNTNUMBER_TO is null then txn_data1.PAYPAYEENAME1 when txn_data1.txn_type='INT' then concat('XXX-',RIGHT(TXN_DATA1.PAYPAYEEACCNUM,4)) else concat('XXX-',RIGHT(TXN_DATA1.tempdebit,4)) end  as PAYPAYEEACCNUM, txn_data1.PAYPAYREF,txn_data1.PAYPAYREF1 ,txn_data1.PAYDEBITAMT ,txn_data1.status,txn_data1.txn_type,txn_data1.EDITLINK,txn_data1.PAYTYPECODE ,txn_data1.PAYBATCHREF from(select txn_data.versionnum,txn_data.REQUESTED_EXE_DT,txn_data.PAYFREQUENCYDESC,case when txn_data.KEYACCOUNTNUMBER_from = A.KEY_ACCOUNT_NO then cOALESCE(A.NICK_NAME,A.FRIENDLY_NAME) when TXN_DATA.KEYACCOUNTNUMBER_from is null then TXN_DATA.PAYPAYEENAME1 else CONCAT('XXX-',right(TXN_DATA.PAYDEBITACCNUM,4)) END as PAYDEBITACCNUM,txn_data.PAYPAYEEACCNUM,txn_data.tempdebit,txn_data.PAYPAYEENAME1,txn_data.KEYACCOUNTNUMBER_TO,txn_data.txn_type,  txn_data.PAYPAYREF,txn_data.PAYPAYREF1,txn_data.payccsstatuscode,txn_data.PAYRECURRING,txn_data.PAYDEBITAMT,txn_data.status,'Edit,View,Cancel' as EDITLINK,txn_data.PAYTYPECODE,txn_data.PAYBATCHREF,txn_data.life_user_id from (select dpt.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,dpt.paydebitaccnum as tempdebit,PAYPAYEENAME1,DPT.KEYACCOUNTNUMBER_TO ,DPT.KEYACCOUNTNUMBER_FROM,dpt.LIFE_USER_ID  ,dpt.txn_type ,CAST(PAYPAYREF as bigint) as PAYPAYREF,PAYPAYREF as PAYPAYREF1 ,payccsstatuscode,PAYRECURRING,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,PAYTYPECODE,PAYBATCHREF   from DS_PAY_TXNS DPT WHERE dpt.LIFE_USER_ID=#lifeUserId:varchar# and TRIAL_DEPO='N'  and  (DPT.payccsstatuscode in ('2','6') or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT)> CURRENT DATE))) as txn_data left outer join sso_account_properties A on txn_data.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and txn_data.LIFE_USER_ID=a.LIFEUSERID ) as txn_data1 left outer join sso_account_properties B on txn_data1.KEYACCOUNTNUMBER_TO =b.KEY_ACCOUNT_NO and txn_data1.LIFE_USER_ID=b.LIFEUSERID  where DATE(txn_data1.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND ( UPPER(B.NICK_NAME) like #accountNo:varchar# OR UPPER(B.FRIENDLY_NAME) like  #accountNo:varchar# OR UPPER(B.ACCOUNT_NO) like #accountNo:varchar# OR UPPER(txn_data1.PAYPAYEENAME1) like  #accountNo:varchar# OR UPPER(txn_data1.PAYDEBITACCNUM) like #accountNo:varchar#)  AND txn_data1.paydebitamt BETWEEN (#minAmount:numeric#) AND (#maxAmount:numeric#) AND txn_data1.PAYPAYREF1 like #confirmationNo:varchar# AND txn_data1.payccsstatuscode like #status:varchar# AND (txn_data1.payccsstatuscode in ('2','6') or (txn_data1.PAYCCSSTATUSCODE='46' and date(txn_data1.REQUESTED_EXE_DT) > CURRENT DATE)) AND txn_data1.PAYRECURRING like #frequency:varchar# #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only
###getSearchPaymentsLIST_page.Query=select versionnum,REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM, PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,txn_type,EDITLINK,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select txn_data1.versionnum ,txn_data1.REQUESTED_EXE_DT ,txn_data1.PAYFREQUENCYDESC , txn_data1.PAYDEBITACCNUM ,case when txn_data1.KEYACCOUNTNUMBER_TO = B.KEY_ACCOUNT_NO then COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) when txn_data1.KEYACCOUNTNUMBER_TO is null then txn_data1.PAYPAYEENAME1 when txn_data1.txn_type='INT' then concat('XXX-',RIGHT(TXN_DATA1.PAYPAYEEACCNUM,4)) else concat('XXX-',RIGHT(TXN_DATA1.tempdebit,4)) end  as PAYPAYEEACCNUM, txn_data1.PAYPAYREF,txn_data1.PAYPAYREF1 ,txn_data1.PAYDEBITAMT ,txn_data1.status,txn_data1.txn_type,txn_data1.EDITLINK,txn_data1.PAYTYPECODE ,txn_data1.PAYBATCHREF from(select txn_data.versionnum,txn_data.REQUESTED_EXE_DT,txn_data.PAYFREQUENCYDESC,case when txn_data.KEYACCOUNTNUMBER_from = A.KEY_ACCOUNT_NO then cOALESCE(A.NICK_NAME,A.FRIENDLY_NAME) when TXN_DATA.KEYACCOUNTNUMBER_from is null then TXN_DATA.PAYPAYEENAME1 else CONCAT('XXX-',right(TXN_DATA.PAYDEBITACCNUM,4)) END as PAYDEBITACCNUM,txn_data.PAYPAYEEACCNUM,txn_data.tempdebit,txn_data.PAYPAYEENAME1,txn_data.KEYACCOUNTNUMBER_TO,txn_data.txn_type,  txn_data.PAYPAYREF,txn_data.PAYPAYREF1,txn_data.payccsstatuscode,txn_data.PAYRECURRING,txn_data.PAYDEBITAMT,txn_data.status,'Edit,View,Cancel' as EDITLINK,txn_data.PAYTYPECODE,txn_data.PAYBATCHREF,txn_data.life_user_id from (select dpt.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,dpt.paydebitaccnum as tempdebit,PAYPAYEENAME1,DPT.KEYACCOUNTNUMBER_TO ,DPT.KEYACCOUNTNUMBER_FROM,dpt.LIFE_USER_ID  ,dpt.txn_type ,CAST(PAYPAYREF as bigint) as PAYPAYREF,PAYPAYREF as PAYPAYREF1 ,payccsstatuscode,PAYRECURRING,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,PAYTYPECODE,PAYBATCHREF   from DS_PAY_TXNS DPT WHERE dpt.LIFE_USER_ID=#lifeUserId:varchar# and TRIAL_DEPO='N'  and  (DPT.payccsstatuscode in ('2','6') or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT)> CURRENT DATE))) as txn_data left outer join sso_account_properties A on txn_data.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and txn_data.LIFE_USER_ID=a.LIFEUSERID ) as txn_data1 left outer join sso_account_properties B on txn_data1.KEYACCOUNTNUMBER_TO =b.KEY_ACCOUNT_NO and txn_data1.LIFE_USER_ID=b.LIFEUSERID  where DATE(txn_data1.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND ( UPPER(B.NICK_NAME) like #accountNo:varchar# OR UPPER(B.FRIENDLY_NAME) like  #accountNo:varchar# OR UPPER(B.ACCOUNT_NO) like #accountNo:varchar# OR UPPER(txn_data1.PAYPAYEENAME1) like  #accountNo:varchar# OR UPPER(txn_data1.PAYDEBITACCNUM) like #accountNo:varchar# )  AND txn_data1.paydebitamt BETWEEN (#minAmount:numeric#) AND (#maxAmount:numeric#) AND txn_data1.PAYPAYREF1 like #confirmationNo:varchar# AND txn_data1.payccsstatuscode like #status:varchar# AND (txn_data1.payccsstatuscode in ('2','6') or (txn_data1.PAYCCSSTATUSCODE='46' and date(txn_data1.REQUESTED_EXE_DT) > CURRENT DATE)) AND txn_data1.PAYRECURRING like #frequency:varchar# #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only
##getSearchPaymentsLIST_page.Query=select versionnum,REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM, PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,txn_type,EDITLINK,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select txn_data1.versionnum ,txn_data1.REQUESTED_EXE_DT ,txn_data1.PAYFREQUENCYDESC , txn_data1.PAYDEBITACCNUM ,case when txn_data1.KEYACCOUNTNUMBER_TO = B.KEY_ACCOUNT_NO then COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) when txn_data1.KEYACCOUNTNUMBER_TO is null then txn_data1.PAYPAYEENAME1 when txn_data1.txn_type='INT' then concat('XXX-',RIGHT(TXN_DATA1.PAYPAYEEACCNUM,4)) else concat('XXX-',RIGHT(TXN_DATA1.tempdebit,4)) end  as PAYPAYEEACCNUM, txn_data1.PAYPAYREF,txn_data1.PAYPAYREF1 ,txn_data1.PAYDEBITAMT ,txn_data1.status,txn_data1.txn_type,txn_data1.EDITLINK,txn_data1.PAYTYPECODE ,txn_data1.PAYBATCHREF from(select txn_data.versionnum,txn_data.REQUESTED_EXE_DT,txn_data.PAYFREQUENCYDESC,case when txn_data.KEYACCOUNTNUMBER_from = A.KEY_ACCOUNT_NO then cOALESCE(A.NICK_NAME,A.FRIENDLY_NAME) when TXN_DATA.KEYACCOUNTNUMBER_from is null then TXN_DATA.PAYPAYEENAME1 else CONCAT('XXX-',right(TXN_DATA.PAYDEBITACCNUM,4)) END as PAYDEBITACCNUM,txn_data.PAYPAYEEACCNUM,txn_data.tempdebit,txn_data.PAYPAYEENAME1,txn_data.KEYACCOUNTNUMBER_TO,txn_data.txn_type,  txn_data.PAYPAYREF,txn_data.PAYPAYREF1,txn_data.payccsstatuscode,txn_data.PAYRECURRING,txn_data.PAYDEBITAMT,txn_data.status,'Edit,View,Cancel' as EDITLINK,txn_data.PAYTYPECODE,txn_data.PAYBATCHREF,txn_data.life_user_id from (select dpt.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,dpt.paydebitaccnum as tempdebit,PAYPAYEENAME1,DPT.KEYACCOUNTNUMBER_TO ,DPT.KEYACCOUNTNUMBER_FROM,dpt.LIFE_USER_ID  ,dpt.txn_type ,CAST(PAYPAYREF as bigint) as PAYPAYREF,PAYPAYREF as PAYPAYREF1 ,payccsstatuscode,PAYRECURRING,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,PAYTYPECODE,PAYBATCHREF   from DS_PAY_TXNS DPT WHERE dpt.LIFE_USER_ID=#lifeUserId:varchar# and TRIAL_DEPO='N'  and  (DPT.payccsstatuscode in ('2','6') or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT)> CURRENT DATE))) as txn_data left outer join sso_account_properties A on txn_data.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and txn_data.LIFE_USER_ID=a.LIFEUSERID ) as txn_data1 left outer join sso_account_properties B on txn_data1.KEYACCOUNTNUMBER_TO =b.KEY_ACCOUNT_NO and txn_data1.LIFE_USER_ID=b.LIFEUSERID  where DATE(txn_data1.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND ( coalesce(UPPER(B.NICK_NAME),UPPER(B.FRIENDLY_NAME)) like  #accountNo:varchar# escape'+' OR UPPER(B.ACCOUNT_NO) like #accountNo:varchar# escape'+' OR coalesce(txn_data1.KEYACCOUNTNUMBER_TO,UPPER(txn_data1.PAYPAYEENAME1)) like #accountNo:varchar# escape'+' OR UPPER(txn_data1.PAYDEBITACCNUM) like #accountNo:varchar# escape'+'  )  AND txn_data1.paydebitamt BETWEEN (#minAmount:numeric#) AND (#maxAmount:numeric#) AND txn_data1.PAYPAYREF1 like #confirmationNo:varchar# AND txn_data1.payccsstatuscode like #status:varchar# AND (txn_data1.payccsstatuscode in ('2','6') or (txn_data1.PAYCCSSTATUSCODE='46' and date(txn_data1.REQUESTED_EXE_DT) > CURRENT DATE)) AND txn_data1.PAYRECURRING like #frequency:varchar# #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only
#getSearchPaymentsLIST_page.Query=select versionnum,REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM, PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,txn_type,EDITLINK,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select txn_data1.versionnum ,txn_data1.REQUESTED_EXE_DT ,txn_data1.PAYFREQUENCYDESC , txn_data1.PAYDEBITACCNUM ,case when txn_data1.KEYACCOUNTNUMBER_TO = B.KEY_ACCOUNT_NO then COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) when txn_data1.KEYACCOUNTNUMBER_TO is null then txn_data1.PAYPAYEENAME1 when txn_data1.txn_type='INT' then concat('XXX-',RIGHT(TXN_DATA1.PAYPAYEEACCNUM,4)) else concat('XXX-',RIGHT(TXN_DATA1.tempdebit,4)) end  as PAYPAYEEACCNUM, txn_data1.PAYPAYREF,txn_data1.PAYPAYREF1 ,txn_data1.PAYDEBITAMT ,txn_data1.status,txn_data1.txn_type,txn_data1.EDITLINK,txn_data1.PAYTYPECODE ,txn_data1.PAYBATCHREF from(select txn_data.versionnum,txn_data.REQUESTED_EXE_DT,txn_data.PAYFREQUENCYDESC,case when txn_data.KEYACCOUNTNUMBER_from = A.KEY_ACCOUNT_NO then cOALESCE(A.NICK_NAME,A.FRIENDLY_NAME) when TXN_DATA.KEYACCOUNTNUMBER_from is null then TXN_DATA.PAYPAYEENAME1 else CONCAT('XXX-',right(TXN_DATA.PAYDEBITACCNUM,4)) END as PAYDEBITACCNUM,txn_data.PAYPAYEEACCNUM,txn_data.tempdebit,txn_data.PAYPAYEENAME1,txn_data.KEYACCOUNTNUMBER_TO,txn_data.txn_type,  txn_data.PAYPAYREF,txn_data.PAYPAYREF1,txn_data.payccsstatuscode,txn_data.PAYRECURRING,txn_data.PAYDEBITAMT,txn_data.status,'Edit,View,Cancel' as EDITLINK,txn_data.PAYTYPECODE,txn_data.PAYBATCHREF,txn_data.life_user_id from (select dpt.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,dpt.paydebitaccnum as tempdebit,(select dr.cpypayeename1||' '||'(XX-'||trim(coalesce(right(dr.cpyaccnum,4), right(dr.cpyaccnum,3), right(dr.cpyaccnum,2)))||')' from ds_payee_ref dr where dr.cpypayeeid=dpt.paypayeeaccnum) as PAYPAYEENAME1,DPT.KEYACCOUNTNUMBER_TO ,DPT.KEYACCOUNTNUMBER_FROM,dpt.LIFE_USER_ID  ,dpt.txn_type ,CAST(PAYPAYREF as bigint) as PAYPAYREF,PAYPAYREF as PAYPAYREF1 ,payccsstatuscode,PAYRECURRING,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,PAYTYPECODE,PAYBATCHREF   from DS_PAY_TXNS DPT WHERE ((DPT.TXN_TYPE in ('INT','ACH-OUT') and KEYACCOUNTNUMBER_from in (select KEY_ACCOUNT_NO from sso_account_properties where LIFEUSERID = #lifeUserId:varchar#)) OR ((DPT.TXN_TYPE ='ACH-IN') and DPT.PAYPAYEEACCNUM in (select CPYPAYEEID from DS_PAYEE_REF where KEY_CLIENT=#lifeUserId:varchar# and KEY_LINK=#lifeUserId:varchar#)) ) and TRIAL_DEPO='N'  and  (DPT.payccsstatuscode in ('2','6') or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT)> CURRENT DATE))) as txn_data left outer join sso_account_properties A on txn_data.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and txn_data.LIFE_USER_ID=a.LIFEUSERID ) as txn_data1 left outer join sso_account_properties B on txn_data1.KEYACCOUNTNUMBER_TO =b.KEY_ACCOUNT_NO and txn_data1.LIFE_USER_ID=b.LIFEUSERID  where DATE(txn_data1.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND ( coalesce(UPPER(B.NICK_NAME),UPPER(B.FRIENDLY_NAME)) like  #accountNo:varchar# escape'+' OR UPPER(B.ACCOUNT_NO) like #accountNo:varchar# escape'+' OR UPPER(txn_data1.PAYPAYEENAME1) like #accountNo:varchar# escape'+' OR UPPER(txn_data1.PAYDEBITACCNUM) like #accountNo:varchar# escape'+'  )  AND txn_data1.paydebitamt BETWEEN (#minAmount:numeric#) AND (#maxAmount:numeric#) AND txn_data1.PAYPAYREF1 like #confirmationNo:varchar# AND txn_data1.payccsstatuscode like #status:varchar# AND (txn_data1.payccsstatuscode in ('2','6') or (txn_data1.PAYCCSSTATUSCODE='46' and date(txn_data1.REQUESTED_EXE_DT) > CURRENT DATE)) AND txn_data1.PAYRECURRING like #frequency:varchar# #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with UR


getSearchPaymentsLIST_page.Query=select versionnum,REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM, PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,txn_type,EDITLINK,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select txn_data1.versionnum ,txn_data1.REQUESTED_EXE_DT ,txn_data1.PAYFREQUENCYDESC , txn_data1.PAYDEBITACCNUM ,case when txn_data1.KEYACCOUNTNUMBER_TO = B.KEY_ACCOUNT_NO then COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) when txn_data1.KEYACCOUNTNUMBER_TO is null then txn_data1.PAYPAYEENAME1 when txn_data1.txn_type='INT' then concat('XXX-',RIGHT(TXN_DATA1.PAYPAYEEACCNUM,4)) else concat('XXX-',RIGHT(TXN_DATA1.tempdebit,4)) end  as PAYPAYEEACCNUM, txn_data1.PAYPAYREF,txn_data1.PAYPAYREF1 ,txn_data1.PAYDEBITAMT ,txn_data1.status,txn_data1.txn_type,txn_data1.EDITLINK,txn_data1.PAYTYPECODE ,txn_data1.PAYBATCHREF from(select txn_data.versionnum,txn_data.REQUESTED_EXE_DT,txn_data.PAYFREQUENCYDESC,case when txn_data.KEYACCOUNTNUMBER_from = A.KEY_ACCOUNT_NO then cOALESCE(A.NICK_NAME,A.FRIENDLY_NAME) when TXN_DATA.KEYACCOUNTNUMBER_from is null then TXN_DATA.PAYPAYEENAME1 else CONCAT('XXX-',right(TXN_DATA.PAYDEBITACCNUM,4)) END as PAYDEBITACCNUM,txn_data.PAYPAYEEACCNUM,txn_data.tempdebit,txn_data.PAYPAYEENAME1,txn_data.KEYACCOUNTNUMBER_TO,txn_data.txn_type,  txn_data.PAYPAYREF,txn_data.PAYPAYREF1,txn_data.payccsstatuscode,txn_data.PAYRECURRING,txn_data.PAYDEBITAMT,txn_data.status,'Edit,View,Cancel' as EDITLINK,txn_data.PAYTYPECODE,txn_data.PAYBATCHREF,txn_data.life_user_id from (select dpt.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,dpt.paydebitaccnum as tempdebit,(select dr.cpypayeename1||' '||'(XX-'||trim(coalesce(right(dr.cpyaccnum,4), right(dr.cpyaccnum,3), right(dr.cpyaccnum,2)))||')' from ds_payee_ref dr where dr.cpypayeeid=dpt.paypayeeaccnum) as PAYPAYEENAME1,DPT.KEYACCOUNTNUMBER_TO ,DPT.KEYACCOUNTNUMBER_FROM,dpt.LIFE_USER_ID  ,dpt.txn_type ,CAST(PAYPAYREF as bigint) as PAYPAYREF,PAYPAYREF as PAYPAYREF1 ,payccsstatuscode,PAYRECURRING,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,PAYTYPECODE,PAYBATCHREF   from DS_PAY_TXNS DPT WHERE ((DPT.TXN_TYPE in ('INT','ACH-OUT') and KEYACCOUNTNUMBER_from in (select KEY_ACCOUNT_NO from sso_account_properties where LIFEUSERID = #lifeUserId:varchar#)) OR ((DPT.TXN_TYPE ='ACH-IN') and DPT.PAYPAYEEACCNUM in (select CPYPAYEEID from DS_PAYEE_REF where KEY_CLIENT=#keyClientId:varchar# )) ) and TRIAL_DEPO='N' and RETIREMENT_MNEMONIC is null and  (DPT.payccsstatuscode in ('2','6','80') or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT)> CURRENT DATE))) as txn_data left outer join sso_account_properties A on txn_data.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and a.LIFEUSERID=#lifeUserId:varchar# ) as txn_data1 left outer join sso_account_properties B on txn_data1.KEYACCOUNTNUMBER_TO =b.KEY_ACCOUNT_NO and b.LIFEUSERID=#lifeUserId:varchar#  where DATE(txn_data1.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND ( coalesce(UPPER(B.NICK_NAME),UPPER(B.FRIENDLY_NAME)) like  #accountNo:varchar# escape'+' OR UPPER(B.ACCOUNT_NO) like #accountNo:varchar# escape'+' OR UPPER(txn_data1.PAYPAYEENAME1) like #accountNo:varchar# escape'+' OR UPPER(txn_data1.PAYDEBITACCNUM) like #accountNo:varchar# escape'+'  )  AND txn_data1.paydebitamt BETWEEN (#minAmount:numeric#) AND (#maxAmount:numeric#) AND txn_data1.PAYPAYREF1 like #confirmationNo:varchar# AND txn_data1.payccsstatuscode like #status:varchar# AND (txn_data1.payccsstatuscode in ('2','6','80') or (txn_data1.PAYCCSSTATUSCODE='46' and date(txn_data1.REQUESTED_EXE_DT) > CURRENT DATE)) AND txn_data1.PAYRECURRING like #frequency:varchar# #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with UR

####New##getSearchPaymentsLIST_page.Query=select versionnum,REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM, PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,txn_type,EDITLINK,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select txn_data1.versionnum ,txn_data1.REQUESTED_EXE_DT ,txn_data1.PAYFREQUENCYDESC , txn_data1.PAYDEBITACCNUM ,case when txn_data1.KEYACCOUNTNUMBER_TO = B.KEY_ACCOUNT_NO then COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) when txn_data1.KEYACCOUNTNUMBER_TO is null then txn_data1.PAYPAYEENAME1 when txn_data1.txn_type='INT' then concat('XXX-',RIGHT(TXN_DATA1.PAYPAYEEACCNUM,4)) else concat('XXX-',RIGHT(TXN_DATA1.tempdebit,4)) end  as PAYPAYEEACCNUM, txn_data1.PAYPAYREF,txn_data1.PAYPAYREF1 ,txn_data1.PAYDEBITAMT ,txn_data1.status,txn_data1.txn_type,txn_data1.EDITLINK,txn_data1.PAYTYPECODE ,txn_data1.PAYBATCHREF from(select txn_data.versionnum,txn_data.REQUESTED_EXE_DT,txn_data.PAYFREQUENCYDESC,case when txn_data.KEYACCOUNTNUMBER_from = A.KEY_ACCOUNT_NO then cOALESCE(A.NICK_NAME,A.FRIENDLY_NAME) when TXN_DATA.KEYACCOUNTNUMBER_from is null then TXN_DATA.PAYPAYEENAME1 else CONCAT('XXX-',right(TXN_DATA.PAYDEBITACCNUM,4)) END as PAYDEBITACCNUM,txn_data.PAYPAYEEACCNUM,txn_data.tempdebit,txn_data.PAYPAYEENAME1,txn_data.KEYACCOUNTNUMBER_TO,txn_data.txn_type,  txn_data.PAYPAYREF,txn_data.PAYPAYREF1,txn_data.payccsstatuscode,txn_data.PAYRECURRING,txn_data.PAYDEBITAMT,txn_data.status,'Edit,View,Cancel' as EDITLINK,txn_data.PAYTYPECODE,txn_data.PAYBATCHREF,txn_data.life_user_id from (select dpt.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,dpt.paydebitaccnum as tempdebit,(select dr.cpypayeename1||' '||'(XX-'||trim(coalesce(right(dr.cpyaccnum,4), right(dr.cpyaccnum,3), right(dr.cpyaccnum,2)))||')' from ds_payee_ref dr where dr.cpypayeeid=dpt.paypayeeaccnum) as PAYPAYEENAME1,DPT.KEYACCOUNTNUMBER_TO ,DPT.KEYACCOUNTNUMBER_FROM,dpt.LIFE_USER_ID  ,dpt.txn_type ,CAST(PAYPAYREF as bigint) as PAYPAYREF,PAYPAYREF as PAYPAYREF1 ,payccsstatuscode,PAYRECURRING,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,PAYTYPECODE,PAYBATCHREF   from DS_PAY_TXNS DPT WHERE ((DPT.TXN_TYPE in ('INT','ACH-OUT') and KEYACCOUNTNUMBER_from in (select KEY_ACCOUNT_NO from sso_account_properties where LIFEUSERID = #lifeUserId:varchar#)) OR ((DPT.TXN_TYPE ='ACH-IN') and DPT.PAYPAYEEACCNUM in (select CPYPAYEEID from DS_PAYEE_REF where KEY_CLIENT=#keyClientId:varchar# )) ) and TRIAL_DEPO='N' and RETIREMENT_MNEMONIC is null and  (DPT.payccsstatuscode in ('2','6') or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT)> CURRENT DATE))) as txn_data left outer join sso_account_properties A on txn_data.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO  ) as txn_data1 left outer join sso_account_properties B on txn_data1.KEYACCOUNTNUMBER_TO =b.KEY_ACCOUNT_NO   where DATE(txn_data1.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND ( coalesce(UPPER(B.NICK_NAME),UPPER(B.FRIENDLY_NAME)) like  #accountNo:varchar# escape'+' OR UPPER(B.ACCOUNT_NO) like #accountNo:varchar# escape'+' OR UPPER(txn_data1.PAYPAYEENAME1) like #accountNo:varchar# escape'+' OR UPPER(txn_data1.PAYDEBITACCNUM) like #accountNo:varchar# escape'+'  )  AND txn_data1.paydebitamt BETWEEN (#minAmount:numeric#) AND (#maxAmount:numeric#) AND txn_data1.PAYPAYREF1 like #confirmationNo:varchar# AND txn_data1.payccsstatuscode like #status:varchar# AND (txn_data1.payccsstatuscode in ('2','6') or (txn_data1.PAYCCSSTATUSCODE='46' and date(txn_data1.REQUESTED_EXE_DT) > CURRENT DATE)) AND txn_data1.PAYRECURRING like #frequency:varchar# #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with UR
getSearchPaymentsLIST_page.TOColumnMap={versionnum=versionnum,REQUESTED_EXE_DT=REQUESTED_EXE_DT,PAYFREQUENCYDESC=PAYFREQUENCYDESC,PAYDEBITACCNUM=PAYDEBITACCNUM,PAYPAYEEACCNUM=PAYPAYEEACCNUM,PAYPAYREF=PAYPAYREF,PAYDEBITAMT=PAYDEBITAMT,STATUS=STATUS,txn_type=txn_type,EDITLINK=EDITLINK,PAYTYPECODE=PAYTYPECODE,PAYBATCHREF=PAYBATCHREF,total_rows=total_rows}
getSearchPaymentsLIST_page.OutputType=java.util.ArrayList
getSearchPaymentsLIST.StmtType=PreparedStatement
getSearchPaymentsLIST.PgnUniqueKeys=PAYPAYREF:numeric:DESC
getSearchPaymentsLIST.SortKeys=PAYPAYREF:numeric:DESC

#18sep09#getSearchPaymentsLIST.PgnUniqueKeys=REQUESTED_EXE_DT:Date:ASC#PAYPAYREF:numeric:DESC
#18sep09#getSearchPaymentsLIST.SortKeys=REQUESTED_EXE_DT:Date:ASC#PAYPAYREF:numeric:DESC

#Pending Transfer List Ends

#Transfer History List Starts

getTransferHistoryStatusValues.Query=select dmndomainval,dmndomainvaldesc from  ds_domains where dmndomain='D_StatusCode' and dmndomainval in ('4','44','20','46','48')
getTransferHistoryStatusValues.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getTransferHistoryStatusValues.OutputType=java.util.Vector

#getTransferHistoryLIST_page.Query=select REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,ACTION,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) as PAYDEBITACCNUM,COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) as PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT, (select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,'View' as ACTION,PAYTYPECODE,PAYBATCHREF from  DS_PAY_TXNS DPT,SSO_ACCOUNT_PROPERTIES A, SSO_ACCOUNT_PROPERTIES B  where DPT.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and DPT.KEYACCOUNTNUMBER_TO=B.KEY_ACCOUNT_NO and  DPT.PAYCCSSTATUSCODE in ('4','44','20','48','50','52','46')  or (DPT.PAYCCSSTATUSCODE='46' and DPT.REQUESTED_EXE_DT <= CURRENT_TIMESTAMP) union select REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,CASE WHEN KEYACCOUNTNUMBER_FROM IS NULL THEN PAYPAYEENAME1 ELSE COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) END AS PAYDEBITACCNUM,CASE WHEN KEYACCOUNTNUMBER_TO IS NULL THEN PAYPAYEENAME1 ELSE COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) END AS PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,'View' as ACTION,PAYTYPECODE,PAYBATCHREF from  DS_PAY_TXNS DPT,  DS_PAYEE_REF DPR, SSO_ACCOUNT_PROPERTIES A where DPR. LIFE_USER_ID=#lifeUserId:varchar# and DPR.CPYPAYEEID = DPT.PAYPAYEEACCNUM and (DPT.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO OR DPT.KEYACCOUNTNUMBER_TO=A.KEY_ACCOUNT_NO) and  DPT.PAYCCSSTATUSCODE in ('4','44','20','48','50','52','46')  or (DPT.PAYCCSSTATUSCODE='46' and DPT.REQUESTED_EXE_DT <= CURRENT_TIMESTAMP) #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
#getTransferHistoryLIST_page.Query=select REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,ACTION,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) as PAYDEBITACCNUM,COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) as PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT, (select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,'View' as ACTION,PAYTYPECODE,PAYBATCHREF from  DS_PAY_TXNS DPT,SSO_ACCOUNT_PROPERTIES A, SSO_ACCOUNT_PROPERTIES B  where DPT.LIFE_USER_ID=#lifeUserId:varchar# and DPT.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and DPT.KEYACCOUNTNUMBER_TO=B.KEY_ACCOUNT_NO and DPT.LIFE_USER_ID=A.LIFEUSERID and DPT.LIFE_USER_ID=B.LIFEUSERID and  DPT.PAYCCSSTATUSCODE in ('4','44','20','48','50','52','46')  or (DPT.PAYCCSSTATUSCODE='46' and DPT.REQUESTED_EXE_DT <= CURRENT_TIMESTAMP) union select REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,CASE WHEN KEYACCOUNTNUMBER_FROM IS NULL THEN PAYPAYEENAME1 ELSE COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) END AS PAYDEBITACCNUM,CASE WHEN KEYACCOUNTNUMBER_TO IS NULL THEN PAYPAYEENAME1 ELSE COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) END AS PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,'View' as ACTION,PAYTYPECODE,PAYBATCHREF from  DS_PAY_TXNS DPT,  DS_PAYEE_REF DPR, SSO_ACCOUNT_PROPERTIES A where DPT.LIFE_USER_ID=#lifeUserId:varchar# and DPR.CPYPAYEEID = DPT.PAYPAYEEACCNUM and (DPT.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO OR DPT.KEYACCOUNTNUMBER_TO=A.KEY_ACCOUNT_NO) and DPT.LIFE_USER_ID=A.LIFEUSERID and  DPT.PAYCCSSTATUSCODE in ('4','44','20','48','50','52','46')  or (DPT.PAYCCSSTATUSCODE='46' and DPT.REQUESTED_EXE_DT <= CURRENT_TIMESTAMP) #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
####getTransferHistoryLIST_page.Query=select versionnum, REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,ACTION,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select DPT.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) as PAYDEBITACCNUM,COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) as PAYPAYEEACCNUM,CAST(PAYPAYREF AS BIGINT) as PAYPAYREF,PAYDEBITAMT, (select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,'View' as ACTION,PAYTYPECODE,PAYBATCHREF from  DS_PAY_TXNS DPT,SSO_ACCOUNT_PROPERTIES A, SSO_ACCOUNT_PROPERTIES B  where DPT.LIFE_USER_ID=#lifeUserId:varchar# and DPT.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and DPT.KEYACCOUNTNUMBER_TO=B.KEY_ACCOUNT_NO and DPT.LIFE_USER_ID=A.LIFEUSERID and DPT.LIFE_USER_ID=B.LIFEUSERID and  (DPT.PAYCCSSTATUSCODE in ('4','44','20','48','50','52')  or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT) <= CURRENT DATE)) union select DPT.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,CASE WHEN KEYACCOUNTNUMBER_FROM IS NULL THEN PAYPAYEENAME1 ELSE COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) END AS PAYDEBITACCNUM,CASE WHEN KEYACCOUNTNUMBER_TO IS NULL THEN PAYPAYEENAME1 ELSE COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) END AS PAYPAYEEACCNUM,CAST(PAYPAYREF AS BIGINT) as PAYPAYREF,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,'View' as ACTION,PAYTYPECODE,PAYBATCHREF from  DS_PAY_TXNS DPT,  DS_PAYEE_REF DPR, SSO_ACCOUNT_PROPERTIES A where DPT.LIFE_USER_ID=#lifeUserId:varchar# and DPR.CPYPAYEEID = DPT.PAYPAYEEACCNUM and (DPT.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO OR DPT.KEYACCOUNTNUMBER_TO=A.KEY_ACCOUNT_NO) and DPT.LIFE_USER_ID=A.LIFEUSERID and  (DPT.PAYCCSSTATUSCODE in ('4','44','20','48','50','52')  or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT) <= CURRENT DATE)) #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
#getTransferHistoryLIST.PgnUniqueKeys=REQUESTED_EXE_DT:Date:DESC#PAYPAYREF:numeric:DESC
#getTransferHistoryLIST.SortKeys=REQUESTED_EXE_DT:Date:DESC#PAYPAYREF:numeric:DESC
#getTransferHistoryLIST_page.Query=select versionnum,REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM, PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,action,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select txn_data1.versionnum ,txn_data1.REQUESTED_EXE_DT ,txn_data1.PAYFREQUENCYDESC , txn_data1.PAYDEBITACCNUM ,case when txn_data1.KEYACCOUNTNUMBER_TO = B.KEY_ACCOUNT_NO then COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) when txn_data1.KEYACCOUNTNUMBER_TO is null then txn_data1.PAYPAYEENAME1 when txn_data1.txn_type='INT' then concat('XXX-',RIGHT(TXN_DATA1.PAYPAYEEACCNUM,4)) else concat('XXX-',RIGHT(TXN_DATA1.tempdebit,4)) end  as PAYPAYEEACCNUM,  txn_data1.PAYPAYREF, txn_data1.PAYDEBITAMT ,txn_data1.status,txn_data1.action,txn_data1.PAYTYPECODE ,txn_data1.PAYBATCHREF  from(select txn_data.versionnum,txn_data.REQUESTED_EXE_DT,txn_data.PAYFREQUENCYDESC,case when txn_data.KEYACCOUNTNUMBER_from = A.KEY_ACCOUNT_NO then cOALESCE(A.NICK_NAME,A.FRIENDLY_NAME) when TXN_DATA.KEYACCOUNTNUMBER_from is null then TXN_DATA.PAYPAYEENAME1 else CONCAT('XXX-',right(TXN_DATA.PAYDEBITACCNUM,4)) END as PAYDEBITACCNUM,txn_data.PAYPAYEEACCNUM,txn_data.tempdebit,txn_data.PAYPAYEENAME1,txn_data.KEYACCOUNTNUMBER_TO,  txn_data.txn_type,txn_data.PAYPAYREF,txn_data.PAYDEBITAMT,txn_data.status,'View' as ACTION,txn_data.PAYTYPECODE,txn_data.PAYBATCHREF,txn_data.life_user_id from (select dpt.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,dpt.paydebitaccnum as tempdebit,(select dr.cpypayeename1||' '||'(XX-'||trim(coalesce(right(dr.cpyaccnum,4), right(dr.cpyaccnum,3), right(dr.cpyaccnum,2)))||')' from ds_payee_ref dr where dr.cpypayeeid=dpt.paypayeeaccnum) as PAYPAYEENAME1,DPT.KEYACCOUNTNUMBER_TO ,DPT.KEYACCOUNTNUMBER_FROM,dpt.LIFE_USER_ID ,dpt.txn_type ,CAST(PAYPAYREF AS BIGINT) as PAYPAYREF,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,PAYTYPECODE,PAYBATCHREF   from DS_PAY_TXNS DPT WHERE ((DPT.TXN_TYPE in ('INT','ACH-OUT') and KEYACCOUNTNUMBER_from in (select KEY_ACCOUNT_NO from sso_account_properties where LIFEUSERID = #lifeUserId:varchar#)) OR ((DPT.TXN_TYPE ='ACH-IN') and DPT.PAYPAYEEACCNUM in (select CPYPAYEEID from DS_PAYEE_REF where KEY_CLIENT=#lifeUserId:varchar# and KEY_LINK=#lifeUserId:varchar#)) ) and TRIAL_DEPO='N' and  (DPT.PAYCCSSTATUSCODE in ('4','44','20','48','50','52')  or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT) <= CURRENT DATE))) as txn_data left outer join sso_account_properties A on txn_data.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and txn_data.LIFE_USER_ID=a.LIFEUSERID ) as txn_data1 left outer join sso_account_properties B on txn_data1.KEYACCOUNTNUMBER_TO =b.KEY_ACCOUNT_NO and txn_data1.LIFE_USER_ID=b.LIFEUSERID  #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only with UR

getTransferHistoryLIST_page.Query=select versionnum,REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM, PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,action,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select txn_data1.versionnum ,txn_data1.REQUESTED_EXE_DT ,txn_data1.PAYFREQUENCYDESC , txn_data1.PAYDEBITACCNUM ,case when txn_data1.KEYACCOUNTNUMBER_TO = B.KEY_ACCOUNT_NO then COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) when txn_data1.KEYACCOUNTNUMBER_TO is null then txn_data1.PAYPAYEENAME1 when txn_data1.txn_type='INT' then concat('XXX-',RIGHT(TXN_DATA1.PAYPAYEEACCNUM,4)) else concat('XXX-',RIGHT(TXN_DATA1.tempdebit,4)) end  as PAYPAYEEACCNUM,  txn_data1.PAYPAYREF, txn_data1.PAYDEBITAMT ,txn_data1.status,txn_data1.action,txn_data1.PAYTYPECODE ,txn_data1.PAYBATCHREF  from(select txn_data.versionnum,txn_data.REQUESTED_EXE_DT,txn_data.PAYFREQUENCYDESC,case when txn_data.KEYACCOUNTNUMBER_from = A.KEY_ACCOUNT_NO then cOALESCE(A.NICK_NAME,A.FRIENDLY_NAME) when TXN_DATA.KEYACCOUNTNUMBER_from is null then TXN_DATA.PAYPAYEENAME1 else CONCAT('XXX-',right(TXN_DATA.PAYDEBITACCNUM,4)) END as PAYDEBITACCNUM,txn_data.PAYPAYEEACCNUM,txn_data.tempdebit,txn_data.PAYPAYEENAME1,txn_data.KEYACCOUNTNUMBER_TO,  txn_data.txn_type,txn_data.PAYPAYREF,txn_data.PAYDEBITAMT,txn_data.status,'View' as ACTION,txn_data.PAYTYPECODE,txn_data.PAYBATCHREF,txn_data.life_user_id from (select dpt.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,dpt.paydebitaccnum as tempdebit,(select dr.cpypayeename1||' '||'(XX-'||trim(coalesce(right(dr.cpyaccnum,4), right(dr.cpyaccnum,3), right(dr.cpyaccnum,2)))||')' from ds_payee_ref dr where dr.cpypayeeid=dpt.paypayeeaccnum) as PAYPAYEENAME1,DPT.KEYACCOUNTNUMBER_TO ,DPT.KEYACCOUNTNUMBER_FROM,dpt.LIFE_USER_ID ,dpt.txn_type ,CAST(PAYPAYREF AS BIGINT) as PAYPAYREF,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,PAYTYPECODE,PAYBATCHREF   from DS_PAY_TXNS DPT WHERE ((DPT.TXN_TYPE in ('INT','ACH-OUT') and KEYACCOUNTNUMBER_from in (select KEY_ACCOUNT_NO from sso_account_properties where LIFEUSERID = #lifeUserId:varchar#)) OR ((DPT.TXN_TYPE ='ACH-IN') and DPT.PAYPAYEEACCNUM in (select CPYPAYEEID from DS_PAYEE_REF where KEY_CLIENT=#keyClientId:varchar# )) ) and TRIAL_DEPO='N' and  (DPT.PAYCCSSTATUSCODE in ('4','44','20','48','50','52')  or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT) <= CURRENT DATE))) as txn_data left outer join sso_account_properties A on txn_data.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and a.LIFEUSERID=#lifeUserId:varchar# ) as txn_data1 left outer join sso_account_properties B on txn_data1.KEYACCOUNTNUMBER_TO =b.KEY_ACCOUNT_NO and b.LIFEUSERID=#lifeUserId:varchar#  #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only with UR

##New##getTransferHistoryLIST_page.Query=select versionnum,REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM, PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,action,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select txn_data1.versionnum ,txn_data1.REQUESTED_EXE_DT ,txn_data1.PAYFREQUENCYDESC , txn_data1.PAYDEBITACCNUM ,case when txn_data1.KEYACCOUNTNUMBER_TO = B.KEY_ACCOUNT_NO then COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) when txn_data1.KEYACCOUNTNUMBER_TO is null then txn_data1.PAYPAYEENAME1 when txn_data1.txn_type='INT' then concat('XXX-',RIGHT(TXN_DATA1.PAYPAYEEACCNUM,4)) else concat('XXX-',RIGHT(TXN_DATA1.tempdebit,4)) end  as PAYPAYEEACCNUM,  txn_data1.PAYPAYREF, txn_data1.PAYDEBITAMT ,txn_data1.status,txn_data1.action,txn_data1.PAYTYPECODE ,txn_data1.PAYBATCHREF  from(select txn_data.versionnum,txn_data.REQUESTED_EXE_DT,txn_data.PAYFREQUENCYDESC,case when txn_data.KEYACCOUNTNUMBER_from = A.KEY_ACCOUNT_NO then cOALESCE(A.NICK_NAME,A.FRIENDLY_NAME) when TXN_DATA.KEYACCOUNTNUMBER_from is null then TXN_DATA.PAYPAYEENAME1 else CONCAT('XXX-',right(TXN_DATA.PAYDEBITACCNUM,4)) END as PAYDEBITACCNUM,txn_data.PAYPAYEEACCNUM,txn_data.tempdebit,txn_data.PAYPAYEENAME1,txn_data.KEYACCOUNTNUMBER_TO,  txn_data.txn_type,txn_data.PAYPAYREF,txn_data.PAYDEBITAMT,txn_data.status,'View' as ACTION,txn_data.PAYTYPECODE,txn_data.PAYBATCHREF,txn_data.life_user_id from (select dpt.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,dpt.paydebitaccnum as tempdebit,(select dr.cpypayeename1||' '||'(XX-'||trim(coalesce(right(dr.cpyaccnum,4), right(dr.cpyaccnum,3), right(dr.cpyaccnum,2)))||')' from ds_payee_ref dr where dr.cpypayeeid=dpt.paypayeeaccnum) as PAYPAYEENAME1,DPT.KEYACCOUNTNUMBER_TO ,DPT.KEYACCOUNTNUMBER_FROM,dpt.LIFE_USER_ID ,dpt.txn_type ,CAST(PAYPAYREF AS BIGINT) as PAYPAYREF,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,PAYTYPECODE,PAYBATCHREF   from DS_PAY_TXNS DPT WHERE ((DPT.TXN_TYPE in ('INT','ACH-OUT') and KEYACCOUNTNUMBER_from in (select KEY_ACCOUNT_NO from sso_account_properties where LIFEUSERID = #lifeUserId:varchar#)) OR ((DPT.TXN_TYPE ='ACH-IN') and DPT.PAYPAYEEACCNUM in (select CPYPAYEEID from DS_PAYEE_REF where KEY_CLIENT=#keyClientId:varchar# )) ) and TRIAL_DEPO='N' and RETIREMENT_MNEMONIC is null and  (DPT.PAYCCSSTATUSCODE in ('4','44','20','48','50','52')  or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT) <= CURRENT DATE))) as txn_data left outer join sso_account_properties A on txn_data.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO ) as txn_data1 left outer join sso_account_properties B on txn_data1.KEYACCOUNTNUMBER_TO =b.KEY_ACCOUNT_NO  #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only with UR
getTransferHistoryLIST_page.TOColumnMap={versionnum=versionnum,REQUESTED_EXE_DT=REQUESTED_EXE_DT,PAYFREQUENCYDESC=PAYFREQUENCYDESC,PAYDEBITACCNUM=PAYDEBITACCNUM,PAYPAYEEACCNUM=PAYPAYEEACCNUM,PAYPAYREF=PAYPAYREF,PAYDEBITAMT=PAYDEBITAMT,STATUS=STATUS,ACTION=ACTION,PAYTYPECODE=PAYTYPECODE,PAYBATCHREF=PAYBATCHREF,total_rows=total_rows}
getTransferHistoryLIST_page.OutputType=java.util.ArrayList
getTransferHistoryLIST.StmtType=PreparedStatement
getTransferHistoryLIST.PgnUniqueKeys=PAYPAYREF:numeric:DESC
getTransferHistoryLIST.SortKeys=PAYPAYREF:numeric:DESC

#18sep09#getTransferHistoryLIST.PgnUniqueKeys=REQUESTED_EXE_DT:Date:ASC#PAYPAYREF:numeric:DESC
#18sep09#getTransferHistoryLIST.SortKeys=REQUESTED_EXE_DT:Date:DESC#PAYPAYREF:numeric:DESC

#getSearchTransferHistoryLIST_page.Query=select REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,ACTION,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) as PAYDEBITACCNUM,COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) as PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,'View' as ACTION,PAYTYPECODE,PAYBATCHREF from DS_PAY_TXNS DPT, SSO_ACCOUNT_PROPERTIES A, SSO_ACCOUNT_PROPERTIES B where  DPT.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and DPT.KEYACCOUNTNUMBER_TO=B.KEY_ACCOUNT_NO and DATE(DPT.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND DPT.paydebitamt BETWEEN (#minAmount:numeric#) AND (#maxAmount:numeric#) AND (  UPPER(A.NICK_NAME) like #accountNo:varchar# OR UPPER(B.NICK_NAME) like #accountNo:varchar# OR UPPER(A.FRIENDLY_NAME) like  #accountNo:varchar# OR UPPER(B.FRIENDLY_NAME) like  #accountNo:varchar# OR UPPER(A.ACCOUNT_NO) like #accountNo:varchar# OR UPPER(B.ACCOUNT_NO) like #accountNo:varchar# ) AND DPT.PAYPAYREF like #confirmationNo:varchar# AND DPT.payccsstatuscode in (#statusArr:varchar#) AND DPT.payccsstatuscode in ('4','44','20','46','48','50','52','46')  AND DPT.PAYRECURRING like #frequency:varchar# union select REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,CASE WHEN KEYACCOUNTNUMBER_FROM IS NULL THEN PAYPAYEENAME1 ELSE COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) END AS PAYDEBITACCNUM,CASE WHEN KEYACCOUNTNUMBER_TO IS NULL THEN PAYPAYEENAME1 ELSE COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) END AS PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,'View' as ACTION,PAYTYPECODE,PAYBATCHREF from  DS_PAY_TXNS DPT, DS_PAYEE_REF DPR, SSO_ACCOUNT_PROPERTIES A where DPR.LIFE_USER_ID like #lifeUserId:varchar# AND (DPT.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO OR DPT.KEYACCOUNTNUMBER_TO=A.KEY_ACCOUNT_NO) AND (UPPER(DPR.CPYACCNUM) like #accountNo:varchar# OR UPPER(DPT.PAYPAYEENAME1) like  #accountNo:varchar# OR UPPER(A.NICK_NAME) like #accountNo:varchar# OR UPPER(A.FRIENDLY_NAME) like  #accountNo:varchar# OR UPPER(A.ACCOUNT_NO) like #accountNo:varchar# ) and DPR.CPYPAYEEID = DPT.PAYPAYEEACCNUM and DATE(DPT.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND DPT.paydebitamt BETWEEN (#minAmount:numeric#) AND (#maxAmount:numeric#) AND DPT.PAYPAYREF like #confirmationNo:varchar# AND DPT.payccsstatuscode in (#statusArr:varchar#) AND DPT.payccsstatuscode in ('4','44','20','46','48','50','52','46')  AND DPT.PAYRECURRING like #frequency:varchar# #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
#getSearchTransferHistoryLIST_page.Query=select REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,ACTION,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) as PAYDEBITACCNUM,COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) as PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,'View' as ACTION,PAYTYPECODE,PAYBATCHREF from DS_PAY_TXNS DPT, SSO_ACCOUNT_PROPERTIES A, SSO_ACCOUNT_PROPERTIES B where DPT.LIFE_USER_ID=#lifeUserId:varchar# and DPT.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and DPT.KEYACCOUNTNUMBER_TO=B.KEY_ACCOUNT_NO and DPT.LIFE_USER_ID=A.LIFEUSERID and DPT.LIFE_USER_ID=B.LIFEUSERID and DATE(DPT.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND DPT.paydebitamt BETWEEN (#minAmount:numeric#) AND (#maxAmount:numeric#) AND (  UPPER(A.NICK_NAME) like #accountNo:varchar# OR UPPER(B.NICK_NAME) like #accountNo:varchar# OR UPPER(A.FRIENDLY_NAME) like  #accountNo:varchar# OR UPPER(B.FRIENDLY_NAME) like  #accountNo:varchar# OR UPPER(A.ACCOUNT_NO) like #accountNo:varchar# OR UPPER(B.ACCOUNT_NO) like #accountNo:varchar# ) AND DPT.PAYPAYREF like #confirmationNo:varchar# AND DPT.payccsstatuscode in (#statusArr:varchar#) AND (DPT.payccsstatuscode in ('4','44','20','46','48','50','52') or (DPT.PAYCCSSTATUSCODE='46' and DPT.REQUESTED_EXE_DT <= CURRENT_TIMESTAMP)) AND DPT.PAYRECURRING like #frequency:varchar# union select REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,CASE WHEN KEYACCOUNTNUMBER_FROM IS NULL THEN PAYPAYEENAME1 ELSE COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) END AS PAYDEBITACCNUM,CASE WHEN KEYACCOUNTNUMBER_TO IS NULL THEN PAYPAYEENAME1 ELSE COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) END AS PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,'View' as ACTION,PAYTYPECODE,PAYBATCHREF from  DS_PAY_TXNS DPT, DS_PAYEE_REF DPR, SSO_ACCOUNT_PROPERTIES A where DPT.LIFE_USER_ID like #lifeUserId:varchar# AND (DPT.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO OR DPT.KEYACCOUNTNUMBER_TO=A.KEY_ACCOUNT_NO) and DPT.LIFE_USER_ID=A.LIFEUSERID AND (UPPER(DPR.CPYACCNUM) like #accountNo:varchar# OR UPPER(DPT.PAYPAYEENAME1) like  #accountNo:varchar# OR UPPER(A.NICK_NAME) like #accountNo:varchar# OR UPPER(A.FRIENDLY_NAME) like  #accountNo:varchar# OR UPPER(A.ACCOUNT_NO) like #accountNo:varchar# ) and DPR.CPYPAYEEID = DPT.PAYPAYEEACCNUM and DATE(DPT.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND DPT.paydebitamt BETWEEN (#minAmount:numeric#) AND (#maxAmount:numeric#) AND DPT.PAYPAYREF like #confirmationNo:varchar# AND DPT.payccsstatuscode in (#statusArr:varchar#) AND (DPT.payccsstatuscode in ('4','44','20','46','48','50','52') or (DPT.PAYCCSSTATUSCODE='46' and DPT.REQUESTED_EXE_DT <= CURRENT_TIMESTAMP)) AND DPT.PAYRECURRING like #frequency:varchar# #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
##getSearchTransferHistoryLIST_page.Query=select versionnum, REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,ACTION,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select DPT.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) as PAYDEBITACCNUM,COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) as PAYPAYEEACCNUM,CAST(PAYPAYREF AS BIGINT) as PAYPAYREF,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,'View' as ACTION,PAYTYPECODE,PAYBATCHREF from DS_PAY_TXNS DPT, SSO_ACCOUNT_PROPERTIES A, SSO_ACCOUNT_PROPERTIES B where DPT.LIFE_USER_ID=#lifeUserId:varchar# and (DPT.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO or DPT.KEYACCOUNTNUMBER_TO=B.KEY_ACCOUNT_NO) and DPT.LIFE_USER_ID=A.LIFEUSERID and DPT.LIFE_USER_ID=B.LIFEUSERID and DATE(DPT.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND DPT.paydebitamt BETWEEN (#minAmount:numeric#) AND (#maxAmount:numeric#) AND (  UPPER(A.NICK_NAME) like #accountNo:varchar# OR UPPER(B.NICK_NAME) like #accountNo:varchar# OR UPPER(A.FRIENDLY_NAME) like  #accountNo:varchar# OR UPPER(B.FRIENDLY_NAME) like  #accountNo:varchar# OR UPPER(A.ACCOUNT_NO) like #accountNo:varchar# OR UPPER(B.ACCOUNT_NO) like #accountNo:varchar# ) AND DPT.PAYPAYREF like #confirmationNo:varchar# AND DPT.payccsstatuscode in (#statusArr:varchar#) AND (DPT.payccsstatuscode in ('4','44','20','48','50','52') or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT) <= CURRENT DATE)) AND DPT.PAYRECURRING like #frequency:varchar# union select DPT.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,CASE WHEN KEYACCOUNTNUMBER_FROM IS NULL THEN PAYPAYEENAME1 ELSE COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) END AS PAYDEBITACCNUM,CASE WHEN KEYACCOUNTNUMBER_TO IS NULL THEN PAYPAYEENAME1 ELSE COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) END AS PAYPAYEEACCNUM,CAST(PAYPAYREF AS BIGINT) as PAYPAYREF,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,'View' as ACTION,PAYTYPECODE,PAYBATCHREF from  DS_PAY_TXNS DPT, DS_PAYEE_REF DPR, SSO_ACCOUNT_PROPERTIES A where DPT.LIFE_USER_ID like #lifeUserId:varchar# AND (DPT.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO OR DPT.KEYACCOUNTNUMBER_TO=A.KEY_ACCOUNT_NO) and DPT.LIFE_USER_ID=A.LIFEUSERID AND (UPPER(DPR.CPYACCNUM) like #accountNo:varchar# OR UPPER(DPT.PAYPAYEENAME1) like  #accountNo:varchar# OR UPPER(A.NICK_NAME) like #accountNo:varchar# OR UPPER(A.FRIENDLY_NAME) like  #accountNo:varchar# OR UPPER(A.ACCOUNT_NO) like #accountNo:varchar# ) and DPR.CPYPAYEEID = DPT.PAYPAYEEACCNUM and DATE(DPT.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND DPT.paydebitamt BETWEEN (#minAmount:numeric#) AND (#maxAmount:numeric#) AND DPT.PAYPAYREF like #confirmationNo:varchar# AND DPT.payccsstatuscode in (#statusArr:varchar#) AND (DPT.payccsstatuscode in ('4','44','20','48','50','52') or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT) <= CURRENT DATE)) AND DPT.PAYRECURRING like #frequency:varchar# #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
##getSearchTransferHistoryLIST_page.Query=select versionnum,REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM, PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,action,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select txn_data1.versionnum ,txn_data1.REQUESTED_EXE_DT ,txn_data1.PAYFREQUENCYDESC , txn_data1.PAYDEBITACCNUM ,case when txn_data1.KEYACCOUNTNUMBER_TO = B.KEY_ACCOUNT_NO then COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) when txn_data1.KEYACCOUNTNUMBER_TO is null then txn_data1.PAYPAYEENAME1 when txn_data1.txn_type='INT' then concat('XXX-',RIGHT(TXN_DATA1.PAYPAYEEACCNUM,4)) else concat('XXX-',RIGHT(TXN_DATA1.tempdebit,4)) end  as PAYPAYEEACCNUM,  txn_data1.PAYPAYREF, txn_data1.PAYDEBITAMT ,txn_data1.status,txn_data1.action,txn_data1.PAYTYPECODE ,txn_data1.PAYBATCHREF  from(select txn_data.versionnum,txn_data.REQUESTED_EXE_DT,txn_data.PAYFREQUENCYDESC,case when txn_data.KEYACCOUNTNUMBER_from = A.KEY_ACCOUNT_NO then cOALESCE(A.NICK_NAME,A.FRIENDLY_NAME) when TXN_DATA.KEYACCOUNTNUMBER_from is null then TXN_DATA.PAYPAYEENAME1 else CONCAT('XXX-',right(TXN_DATA.PAYDEBITACCNUM,4)) END as PAYDEBITACCNUM,txn_data.PAYPAYEEACCNUM,txn_data.tempdebit,txn_data.PAYPAYEENAME1,txn_data.KEYACCOUNTNUMBER_TO,  txn_data.txn_type,txn_data.PAYPAYREF,txn_data.PAYDEBITAMT,txn_data.status,'View' as ACTION,txn_data.PAYTYPECODE,txn_data.PAYBATCHREF,txn_data.life_user_id from (select dpt.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,dpt.paydebitaccnum as tempdebit,PAYPAYEENAME1,DPT.KEYACCOUNTNUMBER_TO ,DPT.KEYACCOUNTNUMBER_FROM,dpt.LIFE_USER_ID ,dpt.txn_type ,CAST(PAYPAYREF AS BIGINT) as PAYPAYREF,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,PAYTYPECODE,PAYBATCHREF   from DS_PAY_TXNS DPT WHERE dpt.LIFE_USER_ID=#lifeUserId:varchar# and TRIAL_DEPO='N' and DPT.PAYPAYREF like #confirmationNo:varchar# AND DATE(DPT.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND DPT.paydebitamt BETWEEN (#minAmount:numeric#) AND (#maxAmount:numeric#) and  DPT.PAYRECURRING like #frequency:varchar# AND DPT.payccsstatuscode in (#statusArr:varchar#) AND (DPT.payccsstatuscode in ('4','44','20','48','50','52') or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT) <= CURRENT DATE))) as txn_data left outer join sso_account_properties A on txn_data.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and txn_data.LIFE_USER_ID=a.LIFEUSERID ) as txn_data1 left outer join sso_account_properties B on txn_data1.KEYACCOUNTNUMBER_TO =b.KEY_ACCOUNT_NO and txn_data1.LIFE_USER_ID=b.LIFEUSERID  #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
##working--getSearchTransferHistoryLIST_page.Query=select versionnum,REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM, PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,action,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select txn_data1.versionnum ,txn_data1.REQUESTED_EXE_DT ,txn_data1.PAYFREQUENCYDESC , txn_data1.PAYDEBITACCNUM ,case when txn_data1.KEYACCOUNTNUMBER_TO = B.KEY_ACCOUNT_NO then COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) when txn_data1.KEYACCOUNTNUMBER_TO is null then txn_data1.PAYPAYEENAME1 when txn_data1.txn_type='INT' then concat('XXX-',RIGHT(TXN_DATA1.PAYPAYEEACCNUM,4)) else concat('XXX-',RIGHT(TXN_DATA1.tempdebit,4)) end  as PAYPAYEEACCNUM,  txn_data1.PAYPAYREF, txn_data1.PAYDEBITAMT ,txn_data1.status,txn_data1.action,txn_data1.PAYTYPECODE ,txn_data1.PAYBATCHREF  from(select txn_data.versionnum,txn_data.REQUESTED_EXE_DT,txn_data.PAYFREQUENCYDESC,case when txn_data.KEYACCOUNTNUMBER_from = A.KEY_ACCOUNT_NO then cOALESCE(A.NICK_NAME,A.FRIENDLY_NAME) when TXN_DATA.KEYACCOUNTNUMBER_from is null then TXN_DATA.PAYPAYEENAME1 else CONCAT('XXX-',right(TXN_DATA.PAYDEBITACCNUM,4)) END as PAYDEBITACCNUM,txn_data.PAYPAYEEACCNUM,txn_data.tempdebit,txn_data.PAYPAYEENAME1,txn_data.KEYACCOUNTNUMBER_TO,  txn_data.txn_type,txn_data.PAYPAYREF,txn_data.PAYDEBITAMT,txn_data.status,'View' as ACTION,txn_data.PAYTYPECODE,txn_data.PAYBATCHREF,txn_data.life_user_id from (select dpt.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,dpt.paydebitaccnum as tempdebit,PAYPAYEENAME1,DPT.KEYACCOUNTNUMBER_TO ,DPT.KEYACCOUNTNUMBER_FROM,dpt.LIFE_USER_ID ,dpt.txn_type ,CAST(PAYPAYREF AS BIGINT) as PAYPAYREF,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,PAYTYPECODE,PAYBATCHREF   from DS_PAY_TXNS DPT WHERE dpt.LIFE_USER_ID=#lifeUserId:varchar# and TRIAL_DEPO='N' and DPT.PAYPAYREF like #confirmationNo:varchar# AND DATE(DPT.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND DPT.paydebitamt BETWEEN (#minAmount:numeric#) AND (#maxAmount:numeric#) and  DPT.PAYRECURRING like #frequency:varchar# AND DPT.payccsstatuscode in (#statusArr:varchar#) AND (DPT.payccsstatuscode in ('4','44','20','48','50','52') or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT) <= CURRENT DATE))) as txn_data left outer join sso_account_properties A on txn_data.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and txn_data.LIFE_USER_ID=a.LIFEUSERID AND (  UPPER(A.NICK_NAME) like #accountNo:varchar# OR UPPER(A.FRIENDLY_NAME) like  #accountNo:varchar#  OR UPPER(A.ACCOUNT_NO) like #accountNo:varchar# ) ) as txn_data1 left outer join sso_account_properties B on txn_data1.KEYACCOUNTNUMBER_TO =b.KEY_ACCOUNT_NO and txn_data1.LIFE_USER_ID=b.LIFEUSERID AND ( UPPER(B.NICK_NAME) like #accountNo:varchar# OR UPPER(B.FRIENDLY_NAME) like  #accountNo:varchar# OR UPPER(B.ACCOUNT_NO) like #accountNo:varchar# ) #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
##getSearchTransferHistoryLIST_page.Query=select versionnum, REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,ACTION,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select DPT.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,case when DPT.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO then COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) else concat('XXX-',right(dpt.PAYDEBITACCNUM,4)) end  as PAYDEBITACCNUM,case when DPT.KEYACCOUNTNUMBER_TO=A.KEY_ACCOUNT_NO then COALESCE(A.NICK_NAME,A.FRIENDLY_NAME) else concat('XXX-',right(dpt.PAYPAYEEACCNUM,4)) end as PAYPAYEEACCNUM,CAST(PAYPAYREF AS BIGINT) as PAYPAYREF,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,'View' as ACTION,PAYTYPECODE,PAYBATCHREF from DS_PAY_TXNS DPT, SSO_ACCOUNT_PROPERTIES A where A.LIFEUSERID=#lifeUserId:varchar# and DPT.LIFE_USER_ID=A.LIFEUSERID and DPT.PAYPAYREF like #confirmationNo:varchar# and (DPT.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO or DPT.KEYACCOUNTNUMBER_TO=A.KEY_ACCOUNT_NO) and   DATE(DPT.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND DPT.paydebitamt BETWEEN (#minAmount:numeric#) AND (#maxAmount:numeric#) AND (  UPPER(A.NICK_NAME) like #accountNo:varchar# OR  UPPER(A.FRIENDLY_NAME) like  #accountNo:varchar# OR  UPPER(A.ACCOUNT_NO) like #accountNo:varchar# )  AND DPT.payccsstatuscode in (#statusArr:varchar#) AND (DPT.payccsstatuscode in ('4','44','20','48','50','52') or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT) <= CURRENT DATE)) AND DPT.PAYRECURRING like #frequency:varchar# #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
##getSearchTransferHistoryLIST_page.Query=select versionnum,REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM, PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,action,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select txn_data1.versionnum ,txn_data1.REQUESTED_EXE_DT ,txn_data1.PAYFREQUENCYDESC , txn_data1.PAYDEBITACCNUM ,case when txn_data1.KEYACCOUNTNUMBER_TO = B.KEY_ACCOUNT_NO then COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) when txn_data1.KEYACCOUNTNUMBER_TO is null then txn_data1.PAYPAYEENAME1 when txn_data1.txn_type='INT' then concat('XXX-',RIGHT(TXN_DATA1.PAYPAYEEACCNUM,4)) else concat('XXX-',RIGHT(TXN_DATA1.tempdebit,4)) end  as PAYPAYEEACCNUM,  txn_data1.PAYPAYREF, txn_data1.PAYDEBITAMT ,txn_data1.status,txn_data1.action,txn_data1.PAYTYPECODE ,txn_data1.PAYBATCHREF  from(select txn_data.versionnum,txn_data.REQUESTED_EXE_DT,txn_data.PAYFREQUENCYDESC,case when txn_data.KEYACCOUNTNUMBER_from = A.KEY_ACCOUNT_NO then cOALESCE(A.NICK_NAME,A.FRIENDLY_NAME) when TXN_DATA.KEYACCOUNTNUMBER_from is null then TXN_DATA.PAYPAYEENAME1 else CONCAT('XXX-',right(TXN_DATA.PAYDEBITACCNUM,4)) END as PAYDEBITACCNUM,txn_data.PAYPAYEEACCNUM,txn_data.tempdebit,txn_data.payccsstatuscode,txn_data.PAYPAYEENAME1,txn_data.KEYACCOUNTNUMBER_TO,  txn_data.txn_type,txn_data.PAYPAYREF,txn_data.PAYDEBITAMT,txn_data.status,'View' as ACTION,txn_data.PAYTYPECODE,txn_data.PAYBATCHREF,txn_data.life_user_id from (select dpt.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,dpt.paydebitaccnum as tempdebit,payccsstatuscode,PAYPAYEENAME1,DPT.KEYACCOUNTNUMBER_TO ,DPT.KEYACCOUNTNUMBER_FROM,dpt.LIFE_USER_ID ,dpt.txn_type ,PAYPAYREF  as PAYPAYREF,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,PAYTYPECODE,PAYBATCHREF   from DS_PAY_TXNS DPT WHERE dpt.LIFE_USER_ID=#lifeUserId:varchar# and TRIAL_DEPO='N' and  (DPT.PAYCCSSTATUSCODE in ('4','44','20','48','50','52')  or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT) <= CURRENT DATE))) as txn_data left outer join sso_account_properties A on txn_data.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and txn_data.LIFE_USER_ID=a.LIFEUSERID ) as txn_data1 left outer join sso_account_properties B on txn_data1.KEYACCOUNTNUMBER_TO =b.KEY_ACCOUNT_NO and txn_data1.LIFE_USER_ID=b.LIFEUSERID where DATE(txn_data1.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND txn_data1.paydebitamt BETWEEN (#minAmount:numeric#) AND (#maxAmount:numeric#) AND (  UPPER(B.NICK_NAME) like #accountNo:varchar# OR  UPPER(B.FRIENDLY_NAME) like  #accountNo:varchar# OR UPPER(B.ACCOUNT_NO) like #accountNo:varchar#  OR UPPER(txn_data1.PAYPAYEENAME1) like #accountNo:varchar# ) AND txn_data1.PAYPAYREF like #confirmationNo:varchar# AND txn_data1.payccsstatuscode in (#statusArr:varchar#) AND (txn_data1.payccsstatuscode in ('4','44','20','48','50','52') or (txn_data1.PAYCCSSTATUSCODE='46' and date(txn_data1.REQUESTED_EXE_DT) <= CURRENT DATE)) AND txn_data1.PAYRECURRING like #frequency:varchar# #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
###getSearchTransferHistoryLIST_page.Query=select versionnum,REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM, PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,action,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select txn_data1.versionnum ,txn_data1.REQUESTED_EXE_DT ,txn_data1.PAYFREQUENCYDESC , txn_data1.PAYDEBITACCNUM ,case when txn_data1.KEYACCOUNTNUMBER_TO = B.KEY_ACCOUNT_NO then COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) when txn_data1.KEYACCOUNTNUMBER_TO is null then txn_data1.PAYPAYEENAME1 when txn_data1.txn_type='INT' then concat('XXX-',RIGHT(TXN_DATA1.PAYPAYEEACCNUM,4)) else concat('XXX-',RIGHT(TXN_DATA1.tempdebit,4)) end  as PAYPAYEEACCNUM,  txn_data1.PAYPAYREF, txn_data1.PAYDEBITAMT ,txn_data1.status,txn_data1.action,txn_data1.PAYTYPECODE ,txn_data1.PAYBATCHREF  from(select txn_data.versionnum,txn_data.REQUESTED_EXE_DT,txn_data.PAYFREQUENCYDESC,case when txn_data.KEYACCOUNTNUMBER_from = A.KEY_ACCOUNT_NO then cOALESCE(A.NICK_NAME,A.FRIENDLY_NAME) when TXN_DATA.KEYACCOUNTNUMBER_from is null then TXN_DATA.PAYPAYEENAME1 else CONCAT('XXX-',right(TXN_DATA.PAYDEBITACCNUM,4)) END as PAYDEBITACCNUM,txn_data.PAYPAYEEACCNUM,txn_data.tempdebit,txn_data.payccsstatuscode,txn_data.PAYPAYEENAME1,txn_data.KEYACCOUNTNUMBER_TO,  txn_data.txn_type,txn_data.PAYPAYREF,txn_data.PAYRECURRING,txn_data.PAYDEBITAMT,txn_data.status,'View' as ACTION,txn_data.PAYTYPECODE,txn_data.PAYBATCHREF,txn_data.life_user_id from (select dpt.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,dpt.paydebitaccnum as tempdebit,payccsstatuscode,PAYPAYEENAME1,DPT.KEYACCOUNTNUMBER_TO ,DPT.KEYACCOUNTNUMBER_FROM,dpt.LIFE_USER_ID ,dpt.txn_type ,PAYPAYREF ,PAYRECURRING,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,PAYTYPECODE,PAYBATCHREF   from DS_PAY_TXNS DPT WHERE dpt.LIFE_USER_ID=#lifeUserId:varchar# and TRIAL_DEPO='N' and  (DPT.PAYCCSSTATUSCODE in ('4','44','20','48','50','52')  or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT) <= CURRENT DATE))) as txn_data left outer join sso_account_properties A on txn_data.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and txn_data.LIFE_USER_ID=a.LIFEUSERID ) as txn_data1 left outer join sso_account_properties B on txn_data1.KEYACCOUNTNUMBER_TO =b.KEY_ACCOUNT_NO and txn_data1.LIFE_USER_ID=b.LIFEUSERID where DATE(txn_data1.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND txn_data1.paydebitamt BETWEEN (#minAmount:numeric#) AND (#maxAmount:numeric#) AND (  UPPER(B.NICK_NAME) like #accountNo:varchar# OR  UPPER(B.FRIENDLY_NAME) like  #accountNo:varchar# OR UPPER(B.ACCOUNT_NO) like #accountNo:varchar#  OR UPPER(txn_data1.PAYPAYEENAME1) like #accountNo:varchar# ) AND txn_data1.PAYPAYREF like #confirmationNo:varchar# AND txn_data1.payccsstatuscode in (#statusArr:varchar#) AND (txn_data1.payccsstatuscode in ('4','44','20','48','50','52') or (txn_data1.PAYCCSSTATUSCODE='46' and date(txn_data1.REQUESTED_EXE_DT) <= CURRENT DATE)) AND txn_data1.PAYRECURRING like #frequency:varchar# #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
###getSearchTransferHistoryLIST_page.Query=select versionnum,REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM, PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,action,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select txn_data1.versionnum ,txn_data1.REQUESTED_EXE_DT ,txn_data1.PAYFREQUENCYDESC , txn_data1.PAYDEBITACCNUM ,case when txn_data1.KEYACCOUNTNUMBER_TO = B.KEY_ACCOUNT_NO then COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) when txn_data1.KEYACCOUNTNUMBER_TO is null then txn_data1.PAYPAYEENAME1 when txn_data1.txn_type='INT' then concat('XXX-',RIGHT(TXN_DATA1.PAYPAYEEACCNUM,4)) else concat('XXX-',RIGHT(TXN_DATA1.tempdebit,4)) end  as PAYPAYEEACCNUM,  txn_data1.PAYPAYREF,txn_data1.PAYPAYREF1, txn_data1.PAYDEBITAMT ,txn_data1.status,txn_data1.action,txn_data1.PAYTYPECODE ,txn_data1.PAYBATCHREF  from(select txn_data.versionnum,txn_data.REQUESTED_EXE_DT,txn_data.PAYFREQUENCYDESC,case when txn_data.KEYACCOUNTNUMBER_from = A.KEY_ACCOUNT_NO then cOALESCE(A.NICK_NAME,A.FRIENDLY_NAME) when TXN_DATA.KEYACCOUNTNUMBER_from is null then TXN_DATA.PAYPAYEENAME1 else CONCAT('XXX-',right(TXN_DATA.PAYDEBITACCNUM,4)) END as PAYDEBITACCNUM,txn_data.PAYPAYEEACCNUM,txn_data.tempdebit,txn_data.payccsstatuscode,txn_data.PAYPAYEENAME1,txn_data.KEYACCOUNTNUMBER_TO,  txn_data.txn_type,txn_data.PAYPAYREF,txn_data.PAYPAYREF1,txn_data.PAYRECURRING,txn_data.PAYDEBITAMT,txn_data.status,'View' as ACTION,txn_data.PAYTYPECODE,txn_data.PAYBATCHREF,txn_data.life_user_id from (select dpt.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,dpt.paydebitaccnum as tempdebit,payccsstatuscode,PAYPAYEENAME1,DPT.KEYACCOUNTNUMBER_TO ,DPT.KEYACCOUNTNUMBER_FROM,dpt.LIFE_USER_ID ,dpt.txn_type ,cast(PAYPAYREF as bigint) as PAYPAYREF,PAYPAYREF as PAYPAYREF1,PAYRECURRING,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,PAYTYPECODE,PAYBATCHREF   from DS_PAY_TXNS DPT WHERE dpt.LIFE_USER_ID=#lifeUserId:varchar# and TRIAL_DEPO='N' and  (DPT.PAYCCSSTATUSCODE in ('4','44','20','48','50','52')  or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT) <= CURRENT DATE))) as txn_data left outer join sso_account_properties A on txn_data.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and txn_data.LIFE_USER_ID=a.LIFEUSERID ) as txn_data1 left outer join sso_account_properties B on txn_data1.KEYACCOUNTNUMBER_TO =b.KEY_ACCOUNT_NO and txn_data1.LIFE_USER_ID=b.LIFEUSERID where DATE(txn_data1.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND txn_data1.paydebitamt BETWEEN (#minAmount:numeric#) AND (#maxAmount:numeric#) AND (  UPPER(B.NICK_NAME) like #accountNo:varchar# OR  UPPER(B.FRIENDLY_NAME) like  #accountNo:varchar# OR UPPER(B.ACCOUNT_NO) like #accountNo:varchar#  OR UPPER(txn_data1.PAYPAYEENAME1) like #accountNo:varchar# OR UPPER(txn_data1.PAYDEBITACCNUM) like #accountNo:varchar#) AND txn_data1.PAYPAYREF1 like #confirmationNo:varchar# AND txn_data1.payccsstatuscode in (#statusArr:varchar#) AND (txn_data1.payccsstatuscode in ('4','44','20','48','50','52') or (txn_data1.PAYCCSSTATUSCODE='46' and date(txn_data1.REQUESTED_EXE_DT) <= CURRENT DATE)) AND txn_data1.PAYRECURRING like #frequency:varchar# #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
##getSearchTransferHistoryLIST_page.Query=select versionnum,REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM, PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,action,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select txn_data1.versionnum ,txn_data1.REQUESTED_EXE_DT ,txn_data1.PAYFREQUENCYDESC , txn_data1.PAYDEBITACCNUM ,case when txn_data1.KEYACCOUNTNUMBER_TO = B.KEY_ACCOUNT_NO then COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) when txn_data1.KEYACCOUNTNUMBER_TO is null then txn_data1.PAYPAYEENAME1 when txn_data1.txn_type='INT' then concat('XXX-',RIGHT(TXN_DATA1.PAYPAYEEACCNUM,4)) else concat('XXX-',RIGHT(TXN_DATA1.tempdebit,4)) end  as PAYPAYEEACCNUM,  txn_data1.PAYPAYREF,txn_data1.PAYPAYREF1, txn_data1.PAYDEBITAMT ,txn_data1.status,txn_data1.action,txn_data1.PAYTYPECODE ,txn_data1.PAYBATCHREF  from(select txn_data.versionnum,txn_data.REQUESTED_EXE_DT,txn_data.PAYFREQUENCYDESC,case when txn_data.KEYACCOUNTNUMBER_from = A.KEY_ACCOUNT_NO then cOALESCE(A.NICK_NAME,A.FRIENDLY_NAME) when TXN_DATA.KEYACCOUNTNUMBER_from is null then TXN_DATA.PAYPAYEENAME1 else CONCAT('XXX-',right(TXN_DATA.PAYDEBITACCNUM,4)) END as PAYDEBITACCNUM,txn_data.PAYPAYEEACCNUM,txn_data.tempdebit,txn_data.payccsstatuscode,txn_data.PAYPAYEENAME1,txn_data.KEYACCOUNTNUMBER_TO,  txn_data.txn_type,txn_data.PAYPAYREF,txn_data.PAYPAYREF1,txn_data.PAYRECURRING,txn_data.PAYDEBITAMT,txn_data.status,'View' as ACTION,txn_data.PAYTYPECODE,txn_data.PAYBATCHREF,txn_data.life_user_id from (select dpt.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,dpt.paydebitaccnum as tempdebit,payccsstatuscode,PAYPAYEENAME1,DPT.KEYACCOUNTNUMBER_TO ,DPT.KEYACCOUNTNUMBER_FROM,dpt.LIFE_USER_ID ,dpt.txn_type ,cast(PAYPAYREF as bigint) as PAYPAYREF,PAYPAYREF as PAYPAYREF1,PAYRECURRING,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,PAYTYPECODE,PAYBATCHREF   from DS_PAY_TXNS DPT WHERE dpt.LIFE_USER_ID=#lifeUserId:varchar# and TRIAL_DEPO='N' and  (DPT.PAYCCSSTATUSCODE in ('4','44','20','48','50','52')  or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT) <= CURRENT DATE))) as txn_data left outer join sso_account_properties A on txn_data.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and txn_data.LIFE_USER_ID=a.LIFEUSERID ) as txn_data1 left outer join sso_account_properties B on txn_data1.KEYACCOUNTNUMBER_TO =b.KEY_ACCOUNT_NO and txn_data1.LIFE_USER_ID=b.LIFEUSERID where DATE(txn_data1.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND txn_data1.paydebitamt BETWEEN (#minAmount:numeric#) AND (#maxAmount:numeric#) AND ( coalesce(UPPER(B.NICK_NAME),UPPER(B.FRIENDLY_NAME)) like  #accountNo:varchar# escape'+' OR UPPER(B.ACCOUNT_NO) like #accountNo:varchar# escape'+' OR coalesce(txn_data1.KEYACCOUNTNUMBER_TO,UPPER(txn_data1.PAYPAYEENAME1)) like #accountNo:varchar# escape'+' OR UPPER(txn_data1.PAYDEBITACCNUM) like #accountNo:varchar# escape'+' ) AND txn_data1.PAYPAYREF1 like #confirmationNo:varchar# AND txn_data1.payccsstatuscode in (#statusArr:varchar#) AND (txn_data1.payccsstatuscode in ('4','44','20','48','50','52') or (txn_data1.PAYCCSSTATUSCODE='46' and date(txn_data1.REQUESTED_EXE_DT) <= CURRENT DATE)) AND txn_data1.PAYRECURRING like #frequency:varchar# #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
#getSearchTransferHistoryLIST_page.Query=select versionnum,REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM, PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,action,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select txn_data1.versionnum ,txn_data1.REQUESTED_EXE_DT ,txn_data1.PAYFREQUENCYDESC , txn_data1.PAYDEBITACCNUM ,case when txn_data1.KEYACCOUNTNUMBER_TO = B.KEY_ACCOUNT_NO then COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) when txn_data1.KEYACCOUNTNUMBER_TO is null then txn_data1.PAYPAYEENAME1 when txn_data1.txn_type='INT' then concat('XXX-',RIGHT(TXN_DATA1.PAYPAYEEACCNUM,4)) else concat('XXX-',RIGHT(TXN_DATA1.tempdebit,4)) end  as PAYPAYEEACCNUM,  txn_data1.PAYPAYREF,txn_data1.PAYPAYREF1, txn_data1.PAYDEBITAMT ,txn_data1.status,txn_data1.action,txn_data1.PAYTYPECODE ,txn_data1.PAYBATCHREF  from(select txn_data.versionnum,txn_data.REQUESTED_EXE_DT,txn_data.PAYFREQUENCYDESC,case when txn_data.KEYACCOUNTNUMBER_from = A.KEY_ACCOUNT_NO then cOALESCE(A.NICK_NAME,A.FRIENDLY_NAME) when TXN_DATA.KEYACCOUNTNUMBER_from is null then TXN_DATA.PAYPAYEENAME1 else CONCAT('XXX-',right(TXN_DATA.PAYDEBITACCNUM,4)) END as PAYDEBITACCNUM,txn_data.PAYPAYEEACCNUM,txn_data.tempdebit,txn_data.payccsstatuscode,txn_data.PAYPAYEENAME1,txn_data.KEYACCOUNTNUMBER_TO,  txn_data.txn_type,txn_data.PAYPAYREF,txn_data.PAYPAYREF1,txn_data.PAYRECURRING,txn_data.PAYDEBITAMT,txn_data.status,'View' as ACTION,txn_data.PAYTYPECODE,txn_data.PAYBATCHREF,txn_data.life_user_id from (select dpt.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,dpt.paydebitaccnum as tempdebit,payccsstatuscode,(select dr.cpypayeename1||' '||'(XX-'||trim(coalesce(right(dr.cpyaccnum,4), right(dr.cpyaccnum,3), right(dr.cpyaccnum,2)))||')' from ds_payee_ref dr where dr.cpypayeeid=dpt.paypayeeaccnum) as PAYPAYEENAME1,DPT.KEYACCOUNTNUMBER_TO ,DPT.KEYACCOUNTNUMBER_FROM,dpt.LIFE_USER_ID ,dpt.txn_type ,cast(PAYPAYREF as bigint) as PAYPAYREF,PAYPAYREF as PAYPAYREF1,PAYRECURRING,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,PAYTYPECODE,PAYBATCHREF   from DS_PAY_TXNS DPT WHERE ((DPT.TXN_TYPE in ('INT','ACH-OUT') and KEYACCOUNTNUMBER_from in (select KEY_ACCOUNT_NO from sso_account_properties where LIFEUSERID = #lifeUserId:varchar#)) OR ((DPT.TXN_TYPE ='ACH-IN') and DPT.PAYPAYEEACCNUM in (select CPYPAYEEID from DS_PAYEE_REF where KEY_CLIENT=#lifeUserId:varchar# and KEY_LINK=#lifeUserId:varchar#)) ) and TRIAL_DEPO='N' and  (DPT.PAYCCSSTATUSCODE in ('4','44','20','48','50','52')  or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT) <= CURRENT DATE))) as txn_data left outer join sso_account_properties A on txn_data.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and txn_data.LIFE_USER_ID=a.LIFEUSERID ) as txn_data1 left outer join sso_account_properties B on txn_data1.KEYACCOUNTNUMBER_TO =b.KEY_ACCOUNT_NO and txn_data1.LIFE_USER_ID=b.LIFEUSERID where DATE(txn_data1.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND txn_data1.paydebitamt BETWEEN (#minAmount:numeric#) AND (#maxAmount:numeric#) AND ( coalesce(UPPER(B.NICK_NAME),UPPER(B.FRIENDLY_NAME)) like  #accountNo:varchar# escape'+' OR UPPER(B.ACCOUNT_NO) like #accountNo:varchar# escape'+' OR UPPER(txn_data1.PAYPAYEENAME1) like #accountNo:varchar# escape'+' OR UPPER(txn_data1.PAYDEBITACCNUM) like #accountNo:varchar# escape'+' ) AND txn_data1.PAYPAYREF1 like #confirmationNo:varchar# AND txn_data1.payccsstatuscode in (#statusArr:varchar#) AND (txn_data1.payccsstatuscode in ('4','44','20','48','50','52') or (txn_data1.PAYCCSSTATUSCODE='46' and date(txn_data1.REQUESTED_EXE_DT) <= CURRENT DATE)) AND txn_data1.PAYRECURRING like #frequency:varchar# #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only with UR

getSearchTransferHistoryLIST_page.Query=select versionnum,REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM, PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,action,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select txn_data1.versionnum ,txn_data1.REQUESTED_EXE_DT ,txn_data1.PAYFREQUENCYDESC , txn_data1.PAYDEBITACCNUM ,case when txn_data1.KEYACCOUNTNUMBER_TO = B.KEY_ACCOUNT_NO then COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) when txn_data1.KEYACCOUNTNUMBER_TO is null then txn_data1.PAYPAYEENAME1 when txn_data1.txn_type='INT' then concat('XXX-',RIGHT(TXN_DATA1.PAYPAYEEACCNUM,4)) else concat('XXX-',RIGHT(TXN_DATA1.tempdebit,4)) end  as PAYPAYEEACCNUM,  txn_data1.PAYPAYREF,txn_data1.PAYPAYREF1, txn_data1.PAYDEBITAMT ,txn_data1.status,txn_data1.action,txn_data1.PAYTYPECODE ,txn_data1.PAYBATCHREF  from(select txn_data.versionnum,txn_data.REQUESTED_EXE_DT,txn_data.PAYFREQUENCYDESC,case when txn_data.KEYACCOUNTNUMBER_from = A.KEY_ACCOUNT_NO then cOALESCE(A.NICK_NAME,A.FRIENDLY_NAME) when TXN_DATA.KEYACCOUNTNUMBER_from is null then TXN_DATA.PAYPAYEENAME1 else CONCAT('XXX-',right(TXN_DATA.PAYDEBITACCNUM,4)) END as PAYDEBITACCNUM,txn_data.PAYPAYEEACCNUM,txn_data.tempdebit,txn_data.payccsstatuscode,txn_data.PAYPAYEENAME1,txn_data.KEYACCOUNTNUMBER_TO,  txn_data.txn_type,txn_data.PAYPAYREF,txn_data.PAYPAYREF1,txn_data.PAYRECURRING,txn_data.PAYDEBITAMT,txn_data.status,'View' as ACTION,txn_data.PAYTYPECODE,txn_data.PAYBATCHREF,txn_data.life_user_id from (select dpt.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,dpt.paydebitaccnum as tempdebit,payccsstatuscode,(select dr.cpypayeename1||' '||'(XX-'||trim(coalesce(right(dr.cpyaccnum,4), right(dr.cpyaccnum,3), right(dr.cpyaccnum,2)))||')' from ds_payee_ref dr where dr.cpypayeeid=dpt.paypayeeaccnum) as PAYPAYEENAME1,DPT.KEYACCOUNTNUMBER_TO ,DPT.KEYACCOUNTNUMBER_FROM,dpt.LIFE_USER_ID ,dpt.txn_type ,cast(PAYPAYREF as bigint) as PAYPAYREF,PAYPAYREF as PAYPAYREF1,PAYRECURRING,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,PAYTYPECODE,PAYBATCHREF   from DS_PAY_TXNS DPT WHERE ((DPT.TXN_TYPE in ('INT','ACH-OUT') and KEYACCOUNTNUMBER_from in (select KEY_ACCOUNT_NO from sso_account_properties where LIFEUSERID = #lifeUserId:varchar#)) OR ((DPT.TXN_TYPE ='ACH-IN') and DPT.PAYPAYEEACCNUM in (select CPYPAYEEID from DS_PAYEE_REF where KEY_CLIENT=#keyClientId:varchar# )) ) and TRIAL_DEPO='N' and  (DPT.PAYCCSSTATUSCODE in ('4','44','20','48','50','52')  or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT) <= CURRENT DATE))) as txn_data left outer join sso_account_properties A on txn_data.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and a.LIFEUSERID=#lifeUserId:varchar# ) as txn_data1 left outer join sso_account_properties B on txn_data1.KEYACCOUNTNUMBER_TO =b.KEY_ACCOUNT_NO and b.LIFEUSERID=#lifeUserId:varchar# where DATE(txn_data1.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND txn_data1.paydebitamt BETWEEN (#minAmount:numeric#) AND (#maxAmount:numeric#) AND ( coalesce(UPPER(B.NICK_NAME),UPPER(B.FRIENDLY_NAME)) like  #accountNo:varchar# escape'+' OR UPPER(B.ACCOUNT_NO) like #accountNo:varchar# escape'+' OR UPPER(txn_data1.PAYPAYEENAME1) like #accountNo:varchar# escape'+' OR UPPER(txn_data1.PAYDEBITACCNUM) like #accountNo:varchar# escape'+' ) AND txn_data1.PAYPAYREF1 like #confirmationNo:varchar# AND txn_data1.payccsstatuscode in (#statusArr:varchar#) AND (txn_data1.payccsstatuscode in ('4','44','20','48','50','52') or (txn_data1.PAYCCSSTATUSCODE='46' and date(txn_data1.REQUESTED_EXE_DT) <= CURRENT DATE)) AND txn_data1.PAYRECURRING like #frequency:varchar# #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only with UR

##NEW##getSearchTransferHistoryLIST_page.Query=select versionnum,REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM, PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,action,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select txn_data1.versionnum ,txn_data1.REQUESTED_EXE_DT ,txn_data1.PAYFREQUENCYDESC , txn_data1.PAYDEBITACCNUM ,case when txn_data1.KEYACCOUNTNUMBER_TO = B.KEY_ACCOUNT_NO then COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) when txn_data1.KEYACCOUNTNUMBER_TO is null then txn_data1.PAYPAYEENAME1 when txn_data1.txn_type='INT' then concat('XXX-',RIGHT(TXN_DATA1.PAYPAYEEACCNUM,4)) else concat('XXX-',RIGHT(TXN_DATA1.tempdebit,4)) end  as PAYPAYEEACCNUM,  txn_data1.PAYPAYREF,txn_data1.PAYPAYREF1, txn_data1.PAYDEBITAMT ,txn_data1.status,txn_data1.action,txn_data1.PAYTYPECODE ,txn_data1.PAYBATCHREF  from(select txn_data.versionnum,txn_data.REQUESTED_EXE_DT,txn_data.PAYFREQUENCYDESC,case when txn_data.KEYACCOUNTNUMBER_from = A.KEY_ACCOUNT_NO then cOALESCE(A.NICK_NAME,A.FRIENDLY_NAME) when TXN_DATA.KEYACCOUNTNUMBER_from is null then TXN_DATA.PAYPAYEENAME1 else CONCAT('XXX-',right(TXN_DATA.PAYDEBITACCNUM,4)) END as PAYDEBITACCNUM,txn_data.PAYPAYEEACCNUM,txn_data.tempdebit,txn_data.payccsstatuscode,txn_data.PAYPAYEENAME1,txn_data.KEYACCOUNTNUMBER_TO,  txn_data.txn_type,txn_data.PAYPAYREF,txn_data.PAYPAYREF1,txn_data.PAYRECURRING,txn_data.PAYDEBITAMT,txn_data.status,'View' as ACTION,txn_data.PAYTYPECODE,txn_data.PAYBATCHREF,txn_data.life_user_id from (select dpt.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,dpt.paydebitaccnum as tempdebit,payccsstatuscode,(select dr.cpypayeename1||' '||'(XX-'||trim(coalesce(right(dr.cpyaccnum,4), right(dr.cpyaccnum,3), right(dr.cpyaccnum,2)))||')' from ds_payee_ref dr where dr.cpypayeeid=dpt.paypayeeaccnum) as PAYPAYEENAME1,DPT.KEYACCOUNTNUMBER_TO ,DPT.KEYACCOUNTNUMBER_FROM,dpt.LIFE_USER_ID ,dpt.txn_type ,cast(PAYPAYREF as bigint) as PAYPAYREF,PAYPAYREF as PAYPAYREF1,PAYRECURRING,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,PAYTYPECODE,PAYBATCHREF   from DS_PAY_TXNS DPT WHERE ((DPT.TXN_TYPE in ('INT','ACH-OUT') and KEYACCOUNTNUMBER_from in (select KEY_ACCOUNT_NO from sso_account_properties where LIFEUSERID = #lifeUserId:varchar#)) OR ((DPT.TXN_TYPE ='ACH-IN') and DPT.PAYPAYEEACCNUM in (select CPYPAYEEID from DS_PAYEE_REF where KEY_CLIENT=#keyClientId:varchar# )) ) and TRIAL_DEPO='N' and RETIREMENT_MNEMONIC is null and  (DPT.PAYCCSSTATUSCODE in ('4','44','20','48','50','52')  or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT) <= CURRENT DATE))) as txn_data left outer join sso_account_properties A on txn_data.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO  ) as txn_data1 left outer join sso_account_properties B on txn_data1.KEYACCOUNTNUMBER_TO =b.KEY_ACCOUNT_NO  where DATE(txn_data1.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND txn_data1.paydebitamt BETWEEN (#minAmount:numeric#) AND (#maxAmount:numeric#) AND ( coalesce(UPPER(B.NICK_NAME),UPPER(B.FRIENDLY_NAME)) like  #accountNo:varchar# escape'+' OR UPPER(B.ACCOUNT_NO) like #accountNo:varchar# escape'+' OR UPPER(txn_data1.PAYPAYEENAME1) like #accountNo:varchar# escape'+' OR UPPER(txn_data1.PAYDEBITACCNUM) like #accountNo:varchar# escape'+' ) AND txn_data1.PAYPAYREF1 like #confirmationNo:varchar# AND txn_data1.payccsstatuscode in (#statusArr:varchar#) AND (txn_data1.payccsstatuscode in ('4','44','20','48','50','52') or (txn_data1.PAYCCSSTATUSCODE='46' and date(txn_data1.REQUESTED_EXE_DT) <= CURRENT DATE)) AND txn_data1.PAYRECURRING like #frequency:varchar# #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only with UR
getSearchTransferHistoryLIST_page.TOColumnMap={versionnum=versionnum,REQUESTED_EXE_DT=REQUESTED_EXE_DT,PAYFREQUENCYDESC=PAYFREQUENCYDESC,PAYDEBITACCNUM=PAYDEBITACCNUM,PAYPAYEEACCNUM=PAYPAYEEACCNUM,PAYPAYREF=PAYPAYREF,PAYDEBITAMT=PAYDEBITAMT,STATUS=STATUS,ACTION=ACTION,PAYTYPECODE=PAYTYPECODE,PAYBATCHREF=PAYBATCHREF,total_rows=total_rows}
getSearchTransferHistoryLIST_page.OutputType=java.util.ArrayList
getSearchTransferHistoryLIST.StmtType=PreparedStatement
getSearchTransferHistoryLIST.PgnUniqueKeys=REQUESTED_EXE_DT:Date:DESC#PAYPAYREF:numeric:DESC
getSearchTransferHistoryLIST.SortKeys=REQUESTED_EXE_DT:Date:DESC#PAYPAYREF:numeric:DESC


#Transfer History List Ends

#Account Maintenance List Starts

getExtAcctCountVal.Query=select count(*) as count from DS_PAYEE_REF where cpystatus ='31' and key_client=#key_client:varchar#
getExtAcctCountVal.TOColumnMap={count=count}
getExtAcctCountVal.OutputType=java.util.ArrayList
getExtAcctCountVal.StmtType=PreparedStatement

#getExternalAccountsList.Query=select CPYPAYEENAME1,CPYBONAME1,CPYACCNUM,CPYSTATUS,CPYACCTYPE,'Edit' as ACTIONCOL from  DS_PAYEE_REF DPR where DPR.LIFE_USER_ID = #lifeUserId:varchar#
#getExternalAccountsLIST_page.Query=select CPYPAYEENAME1,CPYBONAME1,'XX'||'-'||SUBSTR(CPYACCNUM,7,4) as  CPYACCNUM,CPYSTATUS,ACTIONCOL,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,total_rows from (select CPYPAYEENAME1,CPYBONAME1,CPYACCNUM,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=CPYSTATUS) as CPYSTATUS,'Delete' as ACTIONCOL,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM as CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,count(*) over() total_rows from  DS_PAYEE_REF DPT where DPT.LIFE_USER_ID like #lifeUserId:varchar# and DPT.CPYSTATUS not in ('37','33')  #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
#getExternalAccountsLIST_page.Query=select CPYPAYEENAME1,CPYBONAME1,'XX'||'-'||substr(CPYACCNUM,(length(CPYACCNUM)-3),4) as  CPYACCNUM,CPYSTATUS,ACTIONCOL,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,total_rows from (select CPYPAYEENAME1,CPYBONAME1,CPYACCNUM,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=CPYSTATUS) as CPYSTATUS,'Delete' as ACTIONCOL,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM as CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,count(*) over() total_rows from  DS_PAYEE_REF DPT where DPT.LIFE_USER_ID like #lifeUserId:varchar# and DPT.CPYSTATUS not in ('37','33','36')  #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
#getExternalAccountsLIST_page.Query=select CPYPAYEENAME1,CPYBONAME1,'XX'||'-'||substr(CPYACCNUM,(length(CPYACCNUM)-1),2) as  CPYACCNUM,CPYSTATUS,ACTIONCOL,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,total_rows from (select CPYPAYEENAME1,CPYBONAME1,CPYACCNUM,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=CPYSTATUS) as CPYSTATUS,'Delete' as ACTIONCOL,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM as CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,count(*) over() total_rows from  DS_PAYEE_REF DPT where DPT.LIFE_USER_ID like #lifeUserId:varchar# and DPT.CPYSTATUS not in ('37','33','36')  #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
#Working Final
#getExternalAccountsLIST_page.Query=select CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as  CPYACCNUM,CPYSTATUS,ACTIONCOL,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,total_rows from (select CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,CPYACCNUM,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=CPYSTATUS) as CPYSTATUS,'Delete' as ACTIONCOL,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM as CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,count(*) over() total_rows from  DS_PAYEE_REF DPT where DPT.LIFE_USER_ID like #lifeUserId:varchar# and DPT.CPYSTATUS in ('32','31','35','34','36')  #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
#getExternalAccountsLIST_page.Query=select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as  CPYACCNUM,CPYSTATUS,ACTIONCOL,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,CPYBOADDR3,total_rows from (select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,CPYACCNUM,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=CPYSTATUS) as CPYSTATUS,'Delete' as ACTIONCOL,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM as CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,CASE WHEN cpystatus ='31' THEN 'Exist' ELSE 'NonExist' end as CPYBOADDR3,count(*) over() total_rows from  DS_PAYEE_REF DPT where DPT.LIFE_USER_ID like #lifeUserId:varchar# and DPT.CPYSTATUS in ('32','31','35','34','36')  #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
##Final Working Before Adding Outer join.
#getExternalAccountsLIST_page.Query=select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as  CPYACCNUM,CPYSTATUS,ACTIONCOL,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,CPYBOADDR3,createddate,total_rows from (select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,CPYACCNUM,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=CPYSTATUS) as CPYSTATUS,'Delete' as ACTIONCOL,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM as CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,(select count(*)  from DS_PAYEE_REF where cpystatus ='31' and key_client like #key_client:varchar#) as CPYBOADDR3,date(createddate) as createddate,count(*) over() total_rows from  DS_PAYEE_REF DPT where DPT.key_client like #key_client:varchar# and DPT.CPYSTATUS in ('32','31','35','34','36')  #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only with UR
#getExternalAccountsLIST_page.Query=select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as  CPYACCNUM,CPYSTATUS,ACTIONCOL,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,CPYBOADDR3,createddate,total_rows from (select DPT.versionnum,DPT.CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,DPT.CPYACCNUM,dsdom.dmndomainvaldesc as CPYSTATUS,'Delete' as ACTIONCOL,DPT.CPYACCTYPE,DPT.CPYPAYEEID,DPT.CPYBRANCHSCODE,CPYACCNUM as CPYACCNUM1,DPT.LIFE_USER_ID,DPT.CPYBANKCODE,'' as CPYBOADDR3,date(DPT.createddate) as createddate,count(*) over() total_rows from  DS_PAYEE_REF DPT left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS where DPT.key_client like #key_client:varchar# and DPT.CPYSTATUS in ('32','31','35','34','36')  #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only with UR
#getExternalAccountsLIST_page.Query=select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,CPYACCNUM,CPYSTATUS,ACTIONCOL,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,CPYBOADDR3,createddate,total_rows from (select DPT.versionnum,DPT.CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,DPT.CPYACCNUM,dsdom.dmndomainvaldesc as CPYSTATUS,'Delete' as ACTIONCOL,DPT.CPYACCTYPE,DPT.CPYPAYEEID,DPT.CPYBRANCHSCODE,CPYACCNUM as CPYACCNUM1,DPT.LIFE_USER_ID,DPT.CPYBANKCODE,'' as CPYBOADDR3,date(DPT.createddate) as createddate,count(*) over() total_rows from  DS_PAYEE_REF DPT left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS where DPT.key_client like #key_client:varchar# and DPT.CPYSTATUS in ('32','31','35','34','36')  #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only with UR

getExternalAccountsLIST_page.Query=select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,CPYACCNUM,CPYSTATUS,ACTIONCOL,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,CPYBOADDR3,createddate,total_rows from (select DPT.versionnum,DPT.CPYCLRCODETT,DPT.CPYPAYEENAME1,dsbnk.bnkdes as CPYBONAME1,DPT.CPYACCNUM,dsdom.dmndomainvaldesc as CPYSTATUS,'Delete' as ACTIONCOL,DPT.CPYACCTYPE,DPT.CPYPAYEEID,DPT.CPYBRANCHSCODE,CPYACCNUM as CPYACCNUM1,DPT.LIFE_USER_ID,DPT.CPYBANKCODE,'' as CPYBOADDR3,date(DPT.createddate) as createddate,count(*) over() total_rows from  DS_PAYEE_REF DPT left outer join DS_BANK_REF dsbnk on dsbnk.bnkcode=DPT.CPYBANKCODE left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS where DPT.key_client like #key_client:varchar# and DPT.CPYSTATUS in ('32','31','35','34','36')  #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only with UR
getExternalAccountsLIST_page.TOColumnMap={versionnum=versionnum,CPYCLRCODETT=CPYCLRCODETT,CPYPAYEENAME1=CPYPAYEENAME1,CPYBONAME1=CPYBONAME1,CPYACCNUM=CPYACCNUM,CPYSTATUS=CPYSTATUS,ACTIONCOL=ACTIONCOL,CPYACCTYPE=CPYACCTYPE,CPYPAYEEID=CPYPAYEEID,CPYBRANCHSCODE=CPYBRANCHSCODE,CPYACCNUM1=CPYACCNUM1,LIFE_USER_ID=LIFE_USER_ID,CPYBANKCODE=CPYBANKCODE,CPYBOADDR3=CPYBOADDR3,createddate=createddate,total_rows=total_rows}
getExternalAccountsLIST_page.OutputType=java.util.ArrayList
getExternalAccountsLIST.StmtType=PreparedStatement
getExternalAccountsLIST.PgnUniqueKeys=createddate:Date:DESC#CPYPAYEEID:varchar:DESC
getExternalAccountsLIST.SortKeys=createddate:Date:DESC#CPYPAYEEID:varchar:DESC

#updateExternalAccount.Query=update ds_payee_ref set versionnum=versionnum+1,cpypayeename1=#nickName:varchar# where  life_user_id=#lifeUserId:varchar# and cpyaccnum=#extAccNo:varchar# and cpyboname1=#extBoName:varchar# and cpypayeeid=#cpypayeeid:varchar# and key_client=#key_client:varchar# and key_link=#key_link:varchar#
#updateExternalAccount.Query=update ds_payee_ref set versionnum=versionnum+1,cpypayeename1=#nickName:varchar# where  life_user_id=#lifeUserId:varchar# and cpyaccnum=#extAccNo:varchar# and cpyboname1=#extBoName:varchar# and cpypayeeid=#cpypayeeid:varchar#
#updateExternalAccount.Query=update ds_payee_ref set versionnum=versionnum+1,cpypayeename1=#nickName:varchar# where  cpyaccnum=#extAccNo:varchar# and cpyboname1=#extBoName:varchar# and cpypayeeid=#cpypayeeid:varchar#

updateExternalAccount.Query=update ds_payee_ref set versionnum=versionnum+1,cpypayeename1=#nickName:varchar# where cpypayeeid=#cpypayeeid:varchar#
updateExternalAccount.StmtType=PreparedStatement

#updateExtAccDsPayTxns.Query=update ds_pay_txns set paypayeename1=#nickName:varchar# where PAYPAYEEACCNUM=#cpypayeeid:varchar# and life_user_id=#lifeuserid:varchar#
#updateExtAccDsPayTxns.Query=update ds_pay_txns set versionnum=versionnum+1,paypayeename1=#nickName:varchar# where PAYPAYEEACCNUM=#cpypayeeid:varchar# and life_user_id=#lifeuserid:varchar#

updateExtAccDsPayTxns.Query=update ds_pay_txns set versionnum=versionnum+1,paypayeename1=#nickName:varchar# where PAYPAYEEACCNUM=#cpypayeeid:varchar#
updateExtAccDsPayTxns.StmtType=PreparedStatement

#setExtAcctEditLogDetails.Query=insert into ds_payee_ref_log(cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,52,23,CURRENT_TIMESTAMP, #created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,#ver_trials:numeric#,'32','N')
#setExtAcctEditLogDetails.Query=insert into ds_payee_ref_log(cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag,sign_up_mode,key_client,key_link) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,52,23,CURRENT_TIMESTAMP, #created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,(select versionnum from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),'32','N','Online',#key_client:varchar#,#key_link:varchar#)
#setExtAcctEditLogDetails.Query=insert into ds_payee_ref_log(cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag,sign_up_mode,key_client,key_link,account_owner,account_form,voided_check) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,#fa_id:numeric#,#branch_id:numeric#,CURRENT_TIMESTAMP, #created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,(select versionnum from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#cpystatus:varchar#,#deleteflag:varchar#,(select sign_up_mode from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#key_client:varchar#,#key_link:varchar#,(select account_owner from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),(select account_form from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),(select voided_check from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#))

setExtAcctEditLogDetails.Query=insert into ds_payee_ref_log(cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag,sign_up_mode,key_client,key_link,account_owner,account_form,voided_check) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,#fa_id:numeric#,#branch_id:numeric#,CURRENT_TIMESTAMP, #created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,#ver_trials:numeric#,#cpystatus:varchar#,#deleteflag:varchar#,#sign_up_mode:varchar#,#key_client:varchar#,#key_link:varchar#,#account_owner:varchar#,#account_form:varchar#,#voided_check:varchar#)
setExtAcctEditLogDetails.StmtType=PreparedStatement

#Delete External Account Starts

#checkExtAccDelDsPayTxnsDetails.Query=select count(*) as count from ds_pay_txns where paypayeeaccnum=#cpypayeeid:varchar# and payccsstatuscode in('2','6')
#checkExtAccDelDsPayTxnsDetails.Query=select count(*) as count from ds_pay_txns where paypayeeaccnum=#cpypayeeid:varchar# and payccsstatuscode in('2')
#checkExtAccDelDsPayTxnsDetails.Query=select count(*) as count from ds_pay_txns dpt, ds_payee_ref dpr where dpt.paypayeeaccnum=#cpypayeeid:varchar# and dpt.paypayeeaccnum=dpr.cpypayeeid and dpt.payccsstatuscode in('2','6') and (DPT.PAYCCSSTATUSCODE='6' and dpr.cpystatus not in ('31'))
#checkExtAccDelDsPayTxnsDetails.Query=select count(*) as count from ds_pay_txns where paypayeeaccnum=#cpypayeeid:varchar# and payccsstatuscode in('2','6','46') and trial_depo='N'

checkExtAccDelDsPayTxnsDetails.Query=select count(*) as count from ds_pay_txns where paypayeeaccnum=#cpypayeeid:varchar# and payccsstatuscode in('2','6','46','80') and trial_depo='N'
checkExtAccDelDsPayTxnsDetails.TOColumnMap={count=count}
checkExtAccDelDsPayTxnsDetails.OutputType=java.util.ArrayList

#getExtAccDelDsPayTxnsDetails.Query=select frombr_acct_no_fa,tobr_acct_no_fa,txn_type,acct_user_id,paypymtdate,requested_exe_dt,paydebitamt,paypayref,paybatchref,fromfa_id,frombranch_id,tofa_id,tobranch_id,createdby_name,paydebitaccnum,paypayeeaccnum from ds_pay_txns where paypayeeaccnum=#cpypayeeid:varchar# and payccsstatuscode in('2','6')
#getExtAccDelDsPayTxnsDetails.Query=select dpt.versionnum,dpt.frombr_acct_no_fa,dpt.tobr_acct_no_fa,dpt.txn_type,dpt.acct_user_id,dpt.paypymtdate,dpt.requested_exe_dt,dpt.paydebitamt,dpt.paypayref,dpt.paybatchref,dpt.fromfa_id,dpt.frombranch_id,dpt.tofa_id,dpt.tobranch_id,dpt.createdby_name,dpt.paydebitaccnum,dpt.paypayeeaccnum,dpt.keyaccountnumber_from,dpt.created_by_role from ds_pay_txns dpt, ds_payee_ref dpr where paypayeeaccnum=#cpypayeeid:varchar# and dpt.paypayeeaccnum=dpr.cpypayeeid and payccsstatuscode in('2','6') and (DPT.PAYCCSSTATUSCODE='6' and dpr.cpystatus not in ('31'))
#getExtAccDelDsPayTxnsDetails.Query=select versionnum,frombr_acct_no_fa,tobr_acct_no_fa,txn_type,acct_user_id,paypymtdate,requested_exe_dt,paydebitamt,paypayref,paybatchref,fromfa_id,frombranch_id,tofa_id,tobranch_id,createdby_name,paydebitaccnum,paypayeeaccnum,keyaccountnumber_from,created_by_role,payccsstatuscode,payrecurring,current_owner_role,rta_booked_in_flag from ds_pay_txns where paypayeeaccnum=#cpypayeeid:varchar# and payccsstatuscode in('2','6','46') and trial_depo='N'

getExtAccDelDsPayTxnsDetails.Query=select versionnum,frombr_acct_no_fa,tobr_acct_no_fa,txn_type,acct_user_id,paypymtdate,requested_exe_dt,paydebitamt,paypayref,paybatchref,fromfa_id,frombranch_id,tofa_id,tobranch_id,createdby_name,paydebitaccnum,paypayeeaccnum,keyaccountnumber_from,created_by_role,payccsstatuscode,payrecurring,current_owner_role,rta_booked_in_flag,par_txn_no from ds_pay_txns where paypayeeaccnum=#cpypayeeid:varchar# and payccsstatuscode in('2','6','80') or (payccsstatuscode='46' and (REQUESTED_EXE_DT > CURRENT_TIMESTAMP)) and trial_depo='N'
getExtAccDelDsPayTxnsDetails.TOColumnMap={versionnum=versionnum,frombr_acct_no_fa=frombr_acct_no_fa,tobr_acct_no_fa=tobr_acct_no_fa,txn_type=txn_type,acct_user_id=acct_user_id,paypymtdate=paypymtdate,requested_exe_dt=requested_exe_dt,paydebitamt=paydebitamt,paypayref=paypayref,paybatchref=paybatchref,fromfa_id=fromfa_id,frombranch_id=frombranch_id,tofa_id=tofa_id,tobranch_id=tobranch_id,createdby_name=createdby_name,paydebitaccnum=paydebitaccnum,paypayeeaccnum=paypayeeaccnum,keyaccountnumber_from=keyaccountnumber_from,created_by_role=created_by_role,payccsstatuscode=payccsstatuscode,payrecurring=payrecurring,current_owner_role=current_owner_role,rta_booked_in_flag=rta_booked_in_flag,par_txn_no=par_txn_no}
getExtAccDelDsPayTxnsDetails.OutputType=com.tcs.ebw.payments.transferobject.ExtAcctMaintDelDsPayTxnsOutTO[]
getExtAccDelDsPayTxnsDetails.StmtType=PreparedStatement

#setExtAccDelDsPayTxnsDetails.Query=insert into ds_pay_txns (PAYTRXKEY,paypayref,paygroupid,paybatchref,paydebitaccnum,paypayeeaccnum,paycurrcode,paydebitamt,paypymtdate,paypayeebankcode,paypayeeid,paypayeename1,createdby,modifiedby,acct_user_name,created_by_role,createdby_name,acct_to_type,createddate,trial_depo,acct_user_id,deleteflag,life_user_id,paypayee_acct_type,payccsstatuscode) values (#paytrxkey:numeric#,#paypayref:varchar#,#paygroupid:varchar#,#paybatchref:varchar#,(select val from configurable_parameter_view  where PRMTR_ID = 852 and BRANCH_CODE = 4),#paypayeeaccnum:varchar#,#paycurrcode:varchar#,#paydebitamt:numeric#,#paypymtdate:timestamp#,#paypayeebankcode:varchar#,#paypayeeid:varchar#,#paypayeename1:varchar#,#createdby:varchar#,#modifiedby:varchar#,#acct_user_name:varchar#,#created_by_role:varchar#,#createdby_name:varchar#,#acct_to_type:varchar#,CURRENT_TIMESTAMP,#trial_depo:varchar#,#acct_user_id:varchar#,'N',#life_user_id:varchar#,#paypayee_acct_type:varchar#,'20')

setExtAccDelDsPayTxnsDetails.Query=insert into DS_PAY_TXNS_LOG (TRX_LOG_KEY,CREATED_MODIFIED_BY_NAME,PAYGROUPID,PAYBATCHREF,PAYPAYREF,DEBIT_ACCT_NO,CREDIT_ACT_NO,FROMFA_ID,FROMBRANCH_ID,TOFA_ID,TOBRANCH_ID,CREATED_MODIFIED_DATE,CREATED_MODIFIED_BY_ID,CREATED_MODIFIED_BY_EMP_ID,CREATED_MODIFIED_BY_ROLE,LIFE_USER_ID,PAYINVOICEAMT,CREATED_MODIFIED_BY_COMMENTS,LAST_ACTION,AMOUNT,REQUEST_DATE,TXN_STATUS) values (next value for dspaytxnslog_seq,#created_modified_by_name:varchar#,#paygroupid:varchar#,#paybatchref:varchar#,#paypayref:varchar#,#debit_acct_no:varchar#,#credit_act_no:varchar#,#fromfa_id:numeric#,#frombranch_id:numeric#,#tofa_id:numeric#,#tobranch_id:numeric#,CURRENT_TIMESTAMP,#created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#life_user_id:varchar#,#payinvoiceamt:numeric#,#created_modified_by_comments:varchar#,#last_action:varchar#,#amount:BigDecimal#,#request_date:timestamp#,#txn_status:varchar#)
setExtAccDelDsPayTxnsDetails.StmtType=PreparedStatement

#deleteExtAccTxnParent.Query=update txn_parent set TXN_PARENT_VER=TXN_PARENT_VER+1,status='20' where par_txn_no in (select par_txn_no from ds_pay_txns where PAYPAYEEACCNUM=#cpypayeeid:varchar#)
#deleteExtAccTxnParent.Query=update txn_parent set txn_parent_ver=txn_parent_ver+1,status='20' where par_txn_no in (select par_txn_no from ds_pay_txns where paypayref=#paypayref:varchar# and life_user_id=#lifeuserid:varchar#)
#deleteExtAccTxnParent.Query=update txn_parent set txn_parent_ver=txn_parent_ver+1,status=#status:varchar# where par_txn_no in (select par_txn_no from ds_pay_txns where paypayref=#paypayref:varchar#)

deleteExtAccTxnParent.Query=update txn_parent set txn_parent_ver=txn_parent_ver+1,status=#status:varchar# where par_txn_no=#par_txn_no:numeric#
deleteExtAccTxnParent.StmtType=PreparedStatement

#deleteExtAccBatch.Query=update ds_batch set BATVERSIONNUM=BATVERSIONNUM+1,BATSTATUS='20' where batbatchref in (select paybatchref from ds_pay_txns where PAYPAYEEACCNUM=#cpypayeeid:varchar#)
#deleteExtAccBatch.Query=update ds_batch set batversionnum=batversionnum+1,BATSTATUS='20' where batbatchref in (select paybatchref from ds_pay_txns where paypayref=#paypayref:varchar# and life_user_id=#lifeuserid:varchar#)
#deleteExtAccBatch.Query=update ds_batch set batversionnum=batversionnum+1,batstatus=#status:varchar# where batbatchref in (select paybatchref from ds_pay_txns where paypayref=#paypayref:varchar#)

deleteExtAccBatch.Query=update ds_batch set batversionnum=batversionnum+1,batstatus=#status:varchar# where batbatchref =#paybatchref:varchar#
deleteExtAccBatch.StmtType=Statement

#deleteExtAccDsPayTxns.Query=update ds_pay_txns set versionnum=versionnum+1,PAYCCSSTATUSCODE='20',requested_exe_dt=#requestedexedate:timestamp# where paypayref=#paypayref:varchar# and life_user_id=#lifeuserid:varchar# and #key_client:varchar# and #key_link:varchar#
#deleteExtAccDsPayTxns.Query=update ds_pay_txns set versionnum=versionnum+1,PAYCCSSTATUSCODE='20' where PAYPAYEEACCNUM=#cpypayeeid:varchar# and PAYCCSSTATUSCODE in ('2','6','46') and life_user_id=#lifeuserid:varchar#
#deleteExtAccDsPayTxns.Query=update ds_pay_txns set versionnum=versionnum+1,PAYCCSSTATUSCODE='20',requested_exe_dt=#requestedexedate:timestamp# where paypayref=#paypayref:varchar# and PAYCCSSTATUSCODE in ('2','6','46')

deleteExtAccDsPayTxns.Query=update ds_pay_txns set versionnum=versionnum+1,payccsstatuscode=#status:varchar#,requested_exe_dt=#requestedexedate:timestamp# where paypayref=#paypayref:varchar# and payccsstatuscode in ('2','6','46','80')
deleteExtAccDsPayTxns.StmtType=Statement

#deleteExtAccDsPayeeRef.Query=update ds_payee_ref set versionnum=versionnum+1,CPYSTATUS='37' where cpypayeeid=#cpypayeeid:varchar# and life_user_id=#lifeuserid:varchar# and key_client=#key_client:varchar# and
key_link=#key_link:varchar#
#deleteExtAccDsPayeeRef.Query=update ds_payee_ref set versionnum=versionnum+1,CPYSTATUS='37' where cpypayeeid=#cpypayeeid:varchar# and life_user_id=#lifeuserid:varchar#

deleteExtAccDsPayeeRef.Query=update ds_payee_ref set versionnum=versionnum+1,cpystatus=#status:varchar# where cpypayeeid=#cpypayeeid:varchar#
deleteExtAccDsPayeeRef.StmtType=Statement

#setExtAcctDeleteLogDetails.Query=insert into ds_payee_ref_log(cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,52,23,CURRENT_TIMESTAMP, #created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,#ver_trials:numeric#,'37','N')
#setExtAcctDeleteLogDetails.Query=insert into ds_payee_ref_log(cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag,sign_up_mode,key_client,key_link) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,52,23,CURRENT_TIMESTAMP, #created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,(select versionnum from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),'37','N','Online',#key_client:varchar#,#key_link:varchar#)
#setExtAcctDeleteLogDetails.Query=insert into ds_payee_ref_log(cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag,sign_up_mode,key_client,key_link,account_owner,account_form,voided_check) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,#fa_id:numeric#,#branch_id:numeric#,CURRENT_TIMESTAMP, #created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,(select versionnum from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#cpystatus:varchar#,#deleteflag:varchar#,(select sign_up_mode from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#key_client:varchar#,#key_link:varchar#,(select account_owner from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),(select account_form from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),(select voided_check from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#))

setExtAcctDeleteLogDetails.Query=insert into ds_payee_ref_log(cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag,sign_up_mode,key_client,key_link,account_owner,account_form,voided_check) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,#fa_id:numeric#,#branch_id:numeric#,CURRENT_TIMESTAMP, #created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,#ver_trials:numeric#,#cpystatus:varchar#,#deleteflag:varchar#,#sign_up_mode:varchar#,#key_client:varchar#,#key_link:varchar#,#account_owner:varchar#,#account_form:varchar#,#voided_check:varchar#)
setExtAcctDeleteLogDetails.StmtType=PreparedStatement

#Delete External Account Ends

#Account Maintenance List Ends

## Add External Account Starts

getExtBankName.Query=select distinct BNKDES,BNKCODE from DS_BANK_REF where bnkcode=#bnkcode:varchar# and deleteflag='N'
getExtBankName.TOColumnMap={bnkdes=bnkdes,bnkcode=bnkcode}
getExtBankName.OutputType=com.tcs.ebw.payments.transferobject.DsBankRefTO[]

getExtAcctType.Query=select dmndomainvaldesc,dmndomainvaldesc from ds_domains where dmndomain='D_ExtAcctType'
getExtAcctType.TOColumnMap={dmndomainvaldesc=dmndomainvaldesc,dmndomainvaldesc=dmndomainvaldesc}
getExtAcctType.OutputType=java.util.Vector

#getNewExtAcctType.Query=select dmndomainvaldesc,dmndomainvaldesc from ds_domains where dmndomain='D_NewExtAcctType'
#getNewExtAcctType.TOColumnMap={dmndomainvaldesc=dmndomainvaldesc,dmndomainvaldesc=dmndomainvaldesc}

getNewExtAcctType.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_NewExtAcctType'
getNewExtAcctType.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getNewExtAcctType.OutputType=java.util.Vector
getNewExtAcctType.StmtType=PreparedStatement

## here we have to add view for date from payments hub 

#setBeneficiary.Query=Insert into ds_payee_ref(cpygrpid,cpypayeeid,cpypayeename1,cpyaccnum,cpyacctype,cpyboname1,cpybankcode,createdby,createddate,modifiedby,deleteflag,cpystatus,life_user_id,ver_trials,CPYBRANCHSCODE) values (#cpygrpid:varchar#,#cpypayeeid:varchar#,#cpypayeename1:varchar#,#cpyaccnum:varchar#,#cpyacctype:varchar#,#cpyboname1:varchar#,#cpybankcode:varchar#,#createdby:varchar#,CURRENT_TIMESTAMP,#modifiedby:varchar#,'N','31',#life_user_id:varchar#,222,'1')
#setBeneficiary.StmtType=Statement
#setBeneficiary.Query=Insert into ds_payee_ref(cpygrpid,null,cpypayeename1,cpyaccnum,cpyacctype,cpyboname1,cpybankcode,createdby,createddate,modifiedby,deleteflag,cpystatus,life_user_id,ver_trials,CPYBRANCHSCODE) values (#cpygrpid:varchar#,#cpypayeeid:varchar#,#cpypayeename1:varchar#,#cpyaccnum:varchar#,#cpyacctype:varchar#,#cpyboname1:varchar#,#cpybankcode:varchar#,#createdby:varchar#,CURRENT_TIMESTAMP,#modifiedby:varchar#,'N','31',#life_user_id:varchar#,222,'1')
#setBeneficiary.Query=Insert into ds_payee_ref(cpygrpid,cpypayeeid,cpypayeerefno,cpypayeename1,cpyaccnum,cpyacctype,cpyboname1,cpybankcode,createdby,createddate,modifiedby,modifieddate,deleteflag,cpystatus,life_user_id,ver_trials,CPYBRANCHSCODE) values (#cpygrpid:varchar#,#cpypayeeid:varchar#,#cpypayeerefno:varchar#,#cpypayeename1:varchar#,#cpyaccnum:varchar#,#cpyacctype:varchar#,#cpyboname1:varchar#,#cpybankcode:varchar#,#createdby:varchar#,CURRENT_TIMESTAMP,#modifiedby:varchar#,CURRENT_TIMESTAMP,'N','31',#life_user_id:varchar#,222,'1')
#setBeneficiary.Query=Insert into ds_payee_ref(cpygrpid,cpypayeeid,cpypayeerefno,cpypayeename1,cpyaccnum,cpyacctype,cpyboname1,cpybankcode,createdby,createddate,modifiedby,modifieddate,deleteflag,cpystatus,life_user_id,ver_trials,CPYBRANCHSCODE,sign_up_mode,key_client,key_link) values (#cpygrpid:varchar#,#cpypayeeid:varchar#,#cpypayeerefno:varchar#,#cpypayeename1:varchar#,#cpyaccnum:varchar#,#cpyacctype:varchar#,#cpyboname1:varchar#,#cpybankcode:varchar#,#createdby:varchar#,CURRENT_TIMESTAMP,#modifiedby:varchar#,CURRENT_TIMESTAMP,'N','31',#life_user_id:varchar#,222,'1','Online',#key_client:varchar#,#key_link:varchar#)

setBeneficiary.Query=Insert into ds_payee_ref(cpygrpid,cpypayeeid,cpypayeerefno,cpypayeename1,cpyaccnum,cpyacctype,cpyboname1,cpybankcode,createdby,createddate,modifiedby,modifieddate,deleteflag,cpystatus,life_user_id,ver_trials,cpybranchscode,sign_up_mode,key_client,key_link,account_owner,account_form,voided_check) values (#cpygrpid:varchar#,#cpypayeeid:varchar#,#cpypayeerefno:varchar#,#cpypayeename1:varchar#,#cpyaccnum:varchar#,#cpyacctype:varchar#,#cpyboname1:varchar#,#cpybankcode:varchar#,#createdby:varchar#,CURRENT_TIMESTAMP,#modifiedby:varchar#,CURRENT_TIMESTAMP,#deleteflag:varchar#,#cpystatus:varchar#,#life_user_id:varchar#,#ver_trials:numeric#,#cpybranchscode:varchar#,#sign_up_mode:varchar#,#key_client:varchar#,#key_link:varchar#,#account_owner:varchar#,#account_form:varchar#,#voided_check:varchar#)
setBeneficiary.StmtType=PreparedStatement

#setBeneficiaryLog.Query=insert into ds_payee_ref_log (cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,52,23,CURRENT_TIMESTAMP, 'User 1',#created_modified_by_emp_id:varchar#,'User 2','Active',#life_user_id:varchar#,#ver_trials:numeric#,'31','N')
#setBeneficiaryLog.StmtType=Statement
#setBeneficiaryLog.Query=insert into ds_payee_ref_log (cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,52,23,CURRENT_TIMESTAMP,#created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,#ver_trials:numeric#,'31','N')
#setBeneficiaryLog.Query=insert into ds_payee_ref_log (cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag,sign_up_mode,key_client,key_link) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,52,23,CURRENT_TIMESTAMP,#created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,#ver_trials:numeric#,'31','N','Online',#key_client:varchar#,#key_link:varchar#)

setBeneficiaryLog.Query=insert into ds_payee_ref_log (cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag,sign_up_mode,key_client,key_link,account_owner,account_form,voided_check) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,#fa_id:numeric#,#branch_id:numeric#,CURRENT_TIMESTAMP,#created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,#ver_trials:numeric#,#cpystatus:varchar#,#deleteflag:varchar#,#sign_up_mode:varchar#,#key_client:varchar#,#key_link:varchar#,#account_owner:varchar#,#account_form:varchar#,#voided_check:varchar#)
setBeneficiaryLog.StmtType=PreparedStatement

#setBatchExtAcc.Query=insert into ds_batch (batbatchref,batgrpid,batapplicationid,batnooftxns,batstatus,batcreatedby,batmodifiedby,batcreateddate,batmodifieddate,txn_entry_date) values(#batbatchref:varchar#,#batgrpid:varchar#,'',#batnooftxns:numeric#,'1',#batcreatedby:varchar#,'User 1',CURRENT_TIMESTAMP,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP)
#setBatchExtAcc.StmtType=Statement
#Without CutOffTime
#setBatchExtAcc.Query=insert into ds_batch (batbatchref,batgrpid,batapplicationid,batnooftxns,batstatus,batcreatedby,batmodifiedby,batcreateddate,batmodifieddate,txn_entry_date) values(#batbatchref:varchar#,#batgrpid:varchar#,'',#batnooftxns:numeric#,'1',#batcreatedby:varchar#,#batmodifiedby:varchar#,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP)
#setBatchExtAcc.StmtType=Statement

#For CutoffTime
setBatchExtAcc.Query=insert into ds_batch (batbatchref,batgrpid,batapplicationid,batnooftxns,batstatus,batcreatedby,batmodifiedby,batcreateddate,batmodifieddate,txn_entry_date) values(#batbatchref:varchar#,#batgrpid:varchar#,'',#batnooftxns:numeric#,'1',#batcreatedby:varchar#,#batmodifiedby:varchar#,#batcreateddate:timestamp#,CURRENT_TIMESTAMP,#txn_entry_date:timestamp#)
setBatchExtAcc.StmtType=PreparedStatement

setStatusExtAcc.Query=insert into ds_pay_statuses (psttrxkey,pststatusdate,pstfileid,pststatuscode,pstdebitdate,pstnetamount,pstfxcontractno,pstfxdirectrate,pstcustomerfxrate,pstdebitcurr,pstdebitamount,pstpayeeamt,createdby,modifiedby) values (#psttrxkey:numeric#,CURRENT DATE,1,3,#pstdebitdate:date#,#pstnetamount:numeric#,#pstfxcontractno:varchar#,#pstfxdirectrate:mumeric#,#pstcustomerfxrate:numeric#,#pstdebitcurr:varchar#,#pstdebitamount:numeric#,#pstpayeeamt:numeric#,#createdby:varchar#,'User 1')
setStatusExtAcc.StmtType=PreparedStatement

#setTrialDepositAmt.Query=insert into ds_pay_txns (PAYTRXKEY,paypayref,paygroupid,paybatchref,paydebitaccnum,paycurrcode,paydebitamt,paypymtdate,paypayeeaccnum,paypayeename1,payfxcustomerfxrate,payfrequency,payfreqpaymentcount,payfreqenddate,createdby,modifiedby,createddate,trial_depo,ACCT_USER_ID,DELETEFLAG) values (#paytrxkey:numeric#,#paypayref:varchar#,#paygroupid:varchar#,#paybatchref:varchar#,'MS 00123',#paycurrcode:varchar#,#paydebitamt:numeric#,CURRENT_TIMESTAMP,#paypayeeaccnum:varchar#,#paypayeename1:varchar#,#payfxcustomerfxrate:numeric#,#payfrequency:varchar#,#payfreqpaymentcount:numeric#,CURRENT_TIMESTAMP,'User 1','User 1',CURRENT_TIMESTAMP,'TrialDeposit','User 1','N')
#Without CutoffTime
#setTrialDepositAmt.Query=insert into ds_pay_txns (PAYTRXKEY,paypayref,paygroupid,paybatchref,paydebitaccnum,paypayeeaccnum,paycurrcode,paydebitamt,paypymtdate,paypayeebankcode,paypayeeid,paypayeename1,createdby,modifiedby,acct_user_name,created_by_role,createdby_name,acct_to_type,createddate,trial_depo,acct_user_id,deleteflag,life_user_id,paypayee_acct_type,payccsstatuscode) values (#paytrxkey:numeric#,#paypayref:varchar#,#paygroupid:varchar#,#paybatchref:varchar#,(select val from configurable_parameter_view  where PRMTR_ID = 852 and BRANCH_CODE = 4),#paypayeeaccnum:varchar#,#paycurrcode:varchar#,#paydebitamt:numeric#,#paypymtdate:timestamp#,#paypayeebankcode:varchar#,#paypayeeid:varchar#,#paypayeename1:varchar#,#createdby:varchar#,#modifiedby:varchar#,#acct_user_name:varchar#,#created_by_role:varchar#,#createdby_name:varchar#,#acct_to_type:varchar#,CURRENT_TIMESTAMP,#trial_depo:varchar#,#acct_user_id:varchar#,'N',#life_user_id:varchar#,#paypayee_acct_type:varchar#,'4')
#For CutoffTime
#setTrialDepositAmt.Query=insert into ds_pay_txns (PAYTRXKEY,paypayref,paygroupid,paybatchref,paydebitaccnum,paypayeeaccnum,paycurrcode,paydebitamt,paypymtdate,paypayeebankcode,paypayeeid,paypayeename1,createdby,modifiedby,acct_user_name,created_by_role,createdby_name,acct_to_type,createddate,requested_exe_dt,modifieddate,trial_depo,acct_user_id,deleteflag,life_user_id,paypayee_acct_type,payccsstatuscode) values (#paytrxkey:numeric#,#paypayref:varchar#,#paygroupid:varchar#,#paybatchref:varchar#,(select val from configurable_parameter_view  where PRMTR_ID = 852 and BRANCH_CODE = 4),#paypayeeaccnum:varchar#,#paycurrcode:varchar#,#paydebitamt:numeric#,#paypymtdate:timestamp#,#paypayeebankcode:varchar#,#paypayeeid:varchar#,#paypayeename1:varchar#,#createdby:varchar#,#modifiedby:varchar#,#acct_user_name:varchar#,#created_by_role:varchar#,#createdby_name:varchar#,#acct_to_type:varchar#,#createddate:timestamp#,#requested_exe_dt:timestamp#,CURRENT_TIMESTAMP,#trial_depo:varchar#,#acct_user_id:varchar#,'N',#life_user_id:varchar#,#paypayee_acct_type:varchar#,#payccsstatuscode:varchar#)
#setTrialDepositAmt.Query=insert into ds_pay_txns (PAYTRXKEY,paypayref,paygroupid,paybatchref,paydebitaccnum,paypayeeaccnum,paycurrcode,paydebitamt,paypymtdate,paypayeebankcode,paypayeeid,paypayeename1,createdby,modifiedby,acct_user_name,created_by_role,createdby_name,acct_to_type,createddate,requested_exe_dt,modifieddate,trial_depo,acct_user_id,deleteflag,life_user_id,paypayee_acct_type,payccsstatuscode,key_client,key_link) values (#paytrxkey:numeric#,#paypayref:varchar#,#paygroupid:varchar#,#paybatchref:varchar#,(select val from configurable_parameter_view  where PRMTR_ID = 852 and BRANCH_CODE = 4),#paypayeeaccnum:varchar#,#paycurrcode:varchar#,#paydebitamt:numeric#,#paypymtdate:timestamp#,#paypayeebankcode:varchar#,#paypayeeid:varchar#,#paypayeename1:varchar#,#createdby:varchar#,#modifiedby:varchar#,#acct_user_name:varchar#,#created_by_role:varchar#,#createdby_name:varchar#,#acct_to_type:varchar#,CURRENT_TIMESTAMP,#requested_exe_dt:timestamp#,CURRENT_TIMESTAMP,#trial_depo:varchar#,#acct_user_id:varchar#,'N',#life_user_id:varchar#,#paypayee_acct_type:varchar#,#payccsstatuscode:varchar#,#key_client:varchar#,#key_link:varchar#)

setTrialDepositAmt.Query=insert into ds_pay_txns (PAYTRXKEY,paypayref,paygroupid,paybatchref,paydebitaccnum,paypayeeaccnum,paycurrcode,paydebitamt,paypymtdate,paypayeebankcode,paypayeeid,paypayeename1,createdby,modifiedby,acct_user_name,created_by_role,createdby_name,acct_to_type,createddate,requested_exe_dt,modifieddate,trial_depo,acct_user_id,deleteflag,life_user_id,paypayee_acct_type,payccsstatuscode,key_client,key_link) values (#paytrxkey:numeric#,#paypayref:varchar#,#paygroupid:varchar#,#paybatchref:varchar#,(select val from configurable_parameter_view  where PRMTR_ID = 852 and BRANCH_CODE = 4),#paypayeeaccnum:varchar#,#paycurrcode:varchar#,#paydebitamt:BigDecimal#,#paypymtdate:timestamp#,#paypayeebankcode:varchar#,#paypayeeid:varchar#,#paypayeename1:varchar#,#createdby:varchar#,#modifiedby:varchar#,#acct_user_name:varchar#,#created_by_role:varchar#,#createdby_name:varchar#,#acct_to_type:varchar#,CURRENT_TIMESTAMP,#requested_exe_dt:timestamp#,CURRENT_TIMESTAMP,#trial_depo:varchar#,#acct_user_id:varchar#,#deleteflag:varchar#,#life_user_id:varchar#,#paypayee_acct_type:varchar#,#payccsstatuscode:varchar#,#key_client:varchar#,#key_link:varchar#)
setTrialDepositAmt.StmtType=PreparedStatement

#setTrialDepositAmtLog.Query=insert into ds_pay_txns_log (trx_log_key,created_modified_by_name,paygroupid,paybatchref,paypayref,debit_acct_no,credit_act_no,FROMFA_ID,FROMBRANCH_ID,TOFA_ID,TOBRANCH_ID,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,LIFE_USER_ID,created_modified_by_comments,last_action,amount,request_date,trial_depo,TXN_STATUS) values (next value for dspaytxnslog_seq,'User 1',#paygroupid:varchar#,#paybatchref:varchar#,#paypayref:varchar#,'MS 00123',#credit_act_no:varchar#,123,12345,123,23456,CURRENT_TIMESTAMP,'User 1',#created_modified_by_emp_id:varchar#,'User 1',#life_user_id:varchar#,#created_modified_by_comments:varchar#,'modified',#amount:numeric#,CURRENT_TIMESTAMP,'TrialDeposit','31')
#Without CutOffTime
#setTrialDepositAmtLog.Query=insert into ds_pay_txns_log (trx_log_key,created_modified_by_name,paygroupid,paybatchref,paypayref,debit_acct_no,credit_act_no,FROMFA_ID,FROMBRANCH_ID,TOFA_ID,TOBRANCH_ID,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,LIFE_USER_ID,created_modified_by_comments,last_action,amount,request_date,trial_depo,TXN_STATUS) values (next value for dspaytxnslog_seq,#created_modified_by_name:varchar#,#paygroupid:varchar#,#paybatchref:varchar#,#paypayref:varchar#,(select val from configurable_parameter_view  where PRMTR_ID = 852 and BRANCH_CODE = 4) ,#credit_act_no:varchar#,#fromfa_id:numeric#,#frombranch_id:numeric#,#tofa_id:numeric#,#tobranch_id:numeric#,CURRENT_TIMESTAMP,#created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#life_user_id:varchar#,#created_modified_by_comments:varchar#,'Created',#amount:numeric#,CURRENT_TIMESTAMP,#trial_depo:varchar#,'4')
#For CutoffTime
#setTrialDepositAmtLog.Query=insert into ds_pay_txns_log (trx_log_key,created_modified_by_name,paygroupid,paybatchref,paypayref,debit_acct_no,credit_act_no,FROMFA_ID,FROMBRANCH_ID,TOFA_ID,TOBRANCH_ID,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,LIFE_USER_ID,created_modified_by_comments,last_action,amount,request_date,initiation_date,trial_depo,txn_status) values (next value for dspaytxnslog_seq,#created_modified_by_name:varchar#,#paygroupid:varchar#,#paybatchref:varchar#,#paypayref:varchar#,(select val from configurable_parameter_view  where PRMTR_ID = 852 and BRANCH_CODE = 4) ,#credit_act_no:varchar#,#fromfa_id:numeric#,#frombranch_id:numeric#,#tofa_id:numeric#,#tobranch_id:numeric#,#created_modified_date:timestamp#,#created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#life_user_id:varchar#,#created_modified_by_comments:varchar#,#last_action:varchar#,#amount:numeric#,#request_date:timestamp#,#initiation_date:timestamp#,#trial_depo:varchar#,#txn_status:varchar#)

setTrialDepositAmtLog.Query=insert into ds_pay_txns_log (trx_log_key,created_modified_by_name,paygroupid,paybatchref,paypayref,debit_acct_no,credit_act_no,FROMFA_ID,FROMBRANCH_ID,TOFA_ID,TOBRANCH_ID,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,LIFE_USER_ID,created_modified_by_comments,last_action,amount,request_date,initiation_date,trial_depo,txn_status) values (next value for dspaytxnslog_seq,#created_modified_by_name:varchar#,#paygroupid:varchar#,#paybatchref:varchar#,#paypayref:varchar#,(select val from configurable_parameter_view  where PRMTR_ID = 852 and BRANCH_CODE = 4) ,#credit_act_no:varchar#,#fromfa_id:numeric#,#frombranch_id:numeric#,#tofa_id:numeric#,#tobranch_id:numeric#,CURRENT_TIMESTAMP,#created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#life_user_id:varchar#,#created_modified_by_comments:varchar#,#last_action:varchar#,#amount:BigDecimal#,#request_date:timestamp#,#initiation_date:timestamp#,#trial_depo:varchar#,#txn_status:varchar#)
setTrialDepositAmtLog.StmtType=PreparedStatement

setTrialDepositStatus.Query=insert into ds_pay_statuses (psttrxkey,pststatusdate,pstfileid,pststatuscode,pstdebitdate,pstnetamount,pstfxcontractno,pstfxdirectrate,pstcustomerfxrate,pstdebitcurr,pstdebitamount,pstpayeeamt,createdby,modifiedby,trial_depo) values (#psttrxkey:numeric#,'2009-03-01',1,3,'2009-03-01',#pstnetamount:numeric#,#pstfxcontractno:varchar#,#pstfxdirectrate:mumeric#,#pstcustomerfxrate:numeric#,#pstdebitcurr:varchar#,#pstdebitamount:numeric#,#pstpayeeamt:numeric#,#createdby:varchar#,'User 1','TrialDeposit')
setTrialDepositStatus.StmtType=PreparedStatement

#checkPayAcctNum.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('31','32','36','34','35') and life_user_id=#life_user_id:varchar# and key_client=#key_client:varchar# and key_link=#key_link:varchar#
#checkPayAcctNum.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('31','32','36','34','35') and life_user_id=#life_user_id:varchar#

checkPayAcctNum.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('31','32','36','34','35') and key_client=#key_client:varchar#
checkPayAcctNum.TOColumnMap={count=count}
checkPayAcctNum.OutputType=java.util.ArrayList

#checkBypassAcctNum.Query=select count(*) as count from ds_bypass where accnum=#accnum:varchar# and routingnum=#routingnum:varchar# and cpystatus='32' and life_user_id=#life_user_id:varchar# and key_client=#key_client:varchar# and key_link=#key_link:varchar#
#checkBypassAcctNum.Query=select count(*) as count from ds_bypass where accnum=#accnum:varchar# and routingnum=#routingnum:varchar# and cpystatus='32' and life_user_id=#life_user_id:varchar# and key_client=#key_client:varchar# and key_link=#key_link:varchar#

checkBypassAcctNum.Query=select count(*) as count from ds_bypass where accnum=#accnum:varchar# and routingnum=#routingnum:varchar# and cpystatus='32' and key_client=#key_client:varchar#
checkBypassAcctNum.TOColumnMap={count=count}
checkBypassAcctNum.OutputType=java.util.ArrayList

#checkPayExDelAcctNum.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('33','37') and life_user_id=#life_user_id:varchar# and key_client=#key_client:varchar# and key_link=#key_link:varchar#
#checkPayExDelAcctNum.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('33','37') and life_user_id=#life_user_id:varchar#

checkPayExDelAcctNum.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('33','37') and key_client=#key_client:varchar#
checkPayExDelAcctNum.TOColumnMap={count=count}
checkPayExDelAcctNum.OutputType=java.util.ArrayList

#UpdateBypassAcctNum.Query=update ds_bypass set CPYSTATUS='39' where accnum=#accnum:varchar# and  routingnum=#routingnum:varchar# and CPYSTATUS='32' and life_user_id=#life_user_id:varchar#  and key_client=#key_client:varchar# and key_link=#key_link:varchar#
#UpdateBypassAcctNum.Query=update ds_bypass set CPYSTATUS='39' where accnum=#accnum:varchar# and  routingnum=#routingnum:varchar# and CPYSTATUS='32' and life_user_id=#life_user_id:varchar#

UpdateBypassAcctNum.Query=update ds_bypass set CPYSTATUS='39' where accnum=#accnum:varchar# and  routingnum=#routingnum:varchar# and CPYSTATUS='32' and key_client=#key_client:varchar#
UpdateBypassAcctNum.StmtType=PreparedStatement

## Add External Account Ends

## For Verify External Accounts 

#verifyTrialAmounts.Query=select COUNT(*) as count from ds_pay_txns where paypayeeid=#extaccnum:varchar# AND paydebitamt IN (#amount1:numeric#,#amount2:numeric#) and life_user_id=#lifeuserid:varchar#
#verifyTrialAmounts.Query=select COUNT(*) as count from ds_pay_txns where paypayeeidds_payee_ref dpr where dpt.paypayeeid=#extaccnum:varchar# and dpt.paypayeeid=dpr.cpyaccnum and dpr.cpyboname1=#extbankName:varchar# and dpt.life_user_id=#lifeuserid:varchar#  AND dpt.paydebitamt IN (#amount1:numeric#,#amount2:numeric#)
#verifyTrialAmounts.Query=select COUNT(*) as count from ds_pay_txns dpt, ds_payee_ref dpr where dpt.paypayeeid=#extaccnum:varchar# and dpr.cpyaccnum = dpt.paypayeeid and dpr.cpyboname1=#extbankName:varchar# and dpt.paydebitamt IN (#amount1:numeric#,#amount2:numeric#) and dpt.life_user_id=#lifeuserid:varchar#
#verifyTrialAmounts.Query=select COUNT(*) as count from ds_pay_txns dpt, ds_payee_ref dpr where DPT.paydebitamt IN (#amount1:numeric#,#amount2:numeric#) and DPT.paypayeeaccnum=#cpypayeeid:varchar# and dpt.paypayeeid=#extaccnum:varchar# and dpr.cpyaccnum = dpt.paypayeeid and dpr.cpyboname1=#extbankName:varchar# and dpt.life_user_id=#lifeuserid:varchar#

verifyTrialAmounts.Query=select COUNT(*) as count from ds_pay_txns where paydebitamt IN (#amount1:numeric#,#amount2:numeric#) and paypayeeaccnum=#cpypayeeid:varchar#
verifyTrialAmounts.TOColumnMap={count=count}
verifyTrialAmounts.OutputType=java.util.ArrayList

#updateVerSucessStatus.Query=update DS_PAYEE_REF set CPYSTATUS='32' where cpyaccnum=#cpyaccnum:varchar# and cpyboname1=#cpyboname1:varchar# and life_user_id=#life_user_id:varchar#
#updateVerSucessStatus.Query=update DS_PAYEE_REF set versionnum=versionnum+1,CPYSTATUS='32' where cpyaccnum=#cpyaccnum:varchar# and cpyboname1=#cpyboname1:varchar# and life_user_id=#life_user_id:varchar# and cpypayeeid=#cpypayeeid:varchar#

updateVerSucessStatus.Query=update DS_PAYEE_REF set versionnum=versionnum+1,cpystatus=#cpystatus:varchar# where cpyaccnum=#cpyaccnum:varchar# and cpyboname1=#cpyboname1:varchar# and cpypayeeid=#cpypayeeid:varchar#
updateVerSucessStatus.StmtType=PreparedStatement

#setExtAcctSuccessLogDetails.Query=insert into ds_payee_ref_log(cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,52,23,CURRENT_TIMESTAMP, #created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,#ver_trials:numeric#,'32','N')
#setExtAcctSuccessLogDetails.Query=insert into ds_payee_ref_log(cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,52,23,CURRENT_TIMESTAMP, #created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,(select versionnum from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),'32','N')
#setExtAcctSuccessLogDetails.Query=insert into ds_payee_ref_log (cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag,sign_up_mode,key_client,key_link) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,52,23,CURRENT_TIMESTAMP,#created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,#ver_trials:numeric#,'32','N','Online',#key_client:varchar#,#key_link:varchar#)
#setExtAcctSuccessLogDetails.Query=insert into ds_payee_ref_log (cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag,sign_up_mode,key_client,key_link,account_owner,account_form,voided_check) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,#fa_id:numeric#,#branch_id:numeric#,CURRENT_TIMESTAMP,#created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,(select versionnum from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#cpystatus:varchar#,#deleteflag:varchar#,(select sign_up_mode from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#key_client:varchar#,#key_link:varchar#,(select account_owner from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),(select account_form from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),(select voided_check from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#))

setExtAcctSuccessLogDetails.Query=insert into ds_payee_ref_log (cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag,sign_up_mode,key_client,key_link,account_owner,account_form,voided_check) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,#fa_id:numeric#,#branch_id:numeric#,CURRENT_TIMESTAMP,#created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,#ver_trials:numeric#,#cpystatus:varchar#,#deleteflag:varchar#,#sign_up_mode:varchar#,#key_client:varchar#,#key_link:varchar#,#account_owner:varchar#,#account_form:varchar#,#voided_check:varchar#)
setExtAcctSuccessLogDetails.StmtType=PreparedStatement

#updateVerFailureStatus.Query=update DS_PAYEE_REF set CPYSTATUS='33' where cpyaccnum=#cpyaccnum:varchar# and cpyboname1=#cpyboname1:varchar# and life_user_id=#life_user_id:varchar#
#updateVerFailureStatus.Query=update DS_PAYEE_REF set versionnum=versionnum+1,CPYSTATUS='33' where cpyaccnum=#cpyaccnum:varchar# and cpyboname1=#cpyboname1:varchar# and life_user_id=#life_user_id:varchar# and cpypayeeid=#cpypayeeid:varchar#

updateVerFailureStatus.Query=update DS_PAYEE_REF set versionnum=versionnum+1,cpystatus=#cpystatus:varchar# where cpyaccnum=#cpyaccnum:varchar# and cpyboname1=#cpyboname1:varchar# and cpypayeeid=#cpypayeeid:varchar#
updateVerFailureStatus.StmtType=PreparedStatement

#setExtAcctFailureLogDetails.Query=insert into ds_payee_ref_log(cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag,usercomments) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,52,23,CURRENT_TIMESTAMP, #created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,#ver_trials:numeric#,#cpystatus:varchar#,'N',#usercomments:varchar#)
#setExtAcctFailureLogDetails.Query=insert into ds_payee_ref_log(cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag,usercomments,sign_up_mode,key_client,key_link) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,52,23,CURRENT_TIMESTAMP, #created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,(select versionnum from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#cpystatus:varchar#,'N',#usercomments:varchar#,'Online',#key_client:varchar#,#key_link:varchar#)
#setExtAcctFailureLogDetails.Query=insert into ds_payee_ref_log(cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag,usercomments,sign_up_mode,key_client,key_link,account_owner,account_form,voided_check) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,#fa_id:numeric#,#branch_id:numeric#,CURRENT_TIMESTAMP, #created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,(select versionnum from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#cpystatus:varchar#,#deleteflag:varchar#,#usercomments:varchar#,(select sign_up_mode from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#key_client:varchar#,#key_link:varchar#,(select account_owner from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),(select account_form from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),(select voided_check from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#))

setExtAcctFailureLogDetails.Query=insert into ds_payee_ref_log(cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag,usercomments,sign_up_mode,key_client,key_link,account_owner,account_form,voided_check) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,#fa_id:numeric#,#branch_id:numeric#,CURRENT_TIMESTAMP, #created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,#ver_trials:numeric#,#cpystatus:varchar#,#deleteflag:varchar#,#usercomments:varchar#,#sign_up_mode:varchar#,#key_client:varchar#,#key_link:varchar#,#account_owner:varchar#,#account_form:varchar#,#voided_check:varchar#)
setExtAcctFailureLogDetails.StmtType=Statement

getExtAcctCount.Query= select dpr.CPYBRANCHSCODE from DS_PAYEE_REF dpr, DS_PAY_TXNS dpt where dpt.paypayeeid=#extAccNo:varchar# and dpt.paypayeeid=dpr.cpyaccnum and dpr.cpyboname1=#extBoName:varchar#
getExtAcctCount.TOColumnMap={CPYBRANCHSCODE=CPYBRANCHSCODE}
getExtAcctCount.OutputType=java.util.ArrayList
getExtAcctCount.StmtType=PreparedStatement

#setExtAcctCountVal.Query=insert into ds_pay_txns PAYWHTREFNUM values (#extCount:varchar#)
#setExtAcctCountVal.Query=update DS_PAYEE_REF set CPYBRANCHSCODE=(#extAcctCountVal:varchar#) where cpypayeeid = (select distinct cpypayeeid from ds_payee_ref dpr, DS_PAY_TXNS dpt where dpt.paypayeeid=#extAccNo:varchar# and dpt.paypayeeid=dpr.cpyaccnum and dpr.cpyboname1=#extBoName:varchar# and dpr.life_user_id=#lifeUserId:varchar#)

setExtAcctCountVal.Query=update DS_PAYEE_REF set CPYBRANCHSCODE=(#extAcctCountVal:varchar#) where cpypayeeid=#cpypayeeid:varchar#
setExtAcctCountVal.StmtType=PreparedStatement


#getExtAcctRefNum.Query=select cpyboname1,cpyacctype,cpypayeename1,cpybranchscode,cpyaccnum,'XX'||'-'||substr(CPYACCNUM,(length(CPYACCNUM)-3),4) as cpyaccnum1,cpybankcode from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#
#getExtAcctRefNum.Query=select cpyboname1,cpyacctype,cpypayeename1,cpybranchscode,cpyaccnum,'XX'||'-'||substr(CPYACCNUM,(length(CPYACCNUM)-1),2) as cpyaccnum1,cpybankcode from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#
#getExtAcctRefNum.Query=select versionnum,cpyboname1,cpyacctype,cpypayeename1,cpybranchscode,cpyaccnum,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as cpyaccnum1,cpybankcode,cpystatus,life_user_id,createddate from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#
#getExtAcctRefNum.TOColumnMap={versionnum=versionnum,cpyboname1=cpyboname1,cpyacctype=cpyacctype,cpypayeename1=cpypayeename1,cpybranchscode=cpybranchscode,cpyaccnum=cpyaccnum,cpyaccnum1=cpyaccnum1,cpybankcode=cpybankcode,cpystatus=cpystatus,life_user_id=life_user_id,createddate=createddate}
#getExtAcctRefNum.Query=select versionnum,cpyboname1,cpyacctype,cpypayeename1,cpybranchscode,cpyaccnum,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as cpyaccnum1,cpybankcode,cpystatus,life_user_id,createddate,key_client,key_link,sign_up_mode,account_owner,account_form,voided_check from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#
#getExtAcctRefNum.TOColumnMap={versionnum=versionnum,cpyboname1=cpyboname1,cpyacctype=cpyacctype,cpypayeename1=cpypayeename1,cpybranchscode=cpybranchscode,cpyaccnum=cpyaccnum,cpyaccnum1=cpyaccnum1,cpybankcode=cpybankcode,cpystatus=cpystatus,life_user_id=life_user_id,createddate=createddate,key_client=key_client,key_link=key_link,sign_up_mode=sign_up_mode,account_owner=account_owner,account_form=account_form,voided_check=voided_check}
#getExtAcctRefNum.Query=select dpr.versionnum,dpr.cpyboname1,dpr.cpyacctype,dsdom.dmndomainvaldesc as cpyacctypedesc,dpr.cpypayeename1,dpr.cpybranchscode,dpr.cpyaccnum,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as cpyaccnum1,dpr.cpybankcode,dpr.cpystatus,dpr.life_user_id,dpr.createddate,dpr.key_client,dpr.key_link,dpr.sign_up_mode,dpr.account_owner,dpr.account_form,dpr.voided_check from ds_payee_ref dpr left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_NewExtAcctType' and dsdom.dmndomainval=dpr.cpyacctype where dpr.cpypayeeid=#cpypayeeid:varchar#

getExtAcctRefNum.Query=select dpr.versionnum,dsbnk.bnkdes as cpyboname1,dpr.cpyacctype,dsdom.dmndomainvaldesc as cpyacctypedesc,dpr.cpypayeename1,dpr.cpybranchscode,dpr.cpyaccnum,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as cpyaccnum1,dpr.cpybankcode,dpr.cpystatus,dpr.life_user_id,dpr.createddate,dpr.key_client,dpr.key_link,dpr.sign_up_mode,dpr.account_owner,dpr.account_form,dpr.voided_check from ds_payee_ref dpr left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_NewExtAcctType' and dsdom.dmndomainval=dpr.cpyacctype left outer join DS_BANK_REF dsbnk on dsbnk.bnkcode=dpr.CPYBANKCODE where dpr.cpypayeeid=#cpypayeeid:varchar#
getExtAcctRefNum.TOColumnMap={versionnum=versionnum,cpyboname1=cpyboname1,cpyacctype=cpyacctype,cpyacctypedesc=cpyacctypedesc,cpypayeename1=cpypayeename1,cpybranchscode=cpybranchscode,cpyaccnum=cpyaccnum,cpyaccnum1=cpyaccnum1,cpybankcode=cpybankcode,cpystatus=cpystatus,life_user_id=life_user_id,createddate=createddate,key_client=key_client,key_link=key_link,sign_up_mode=sign_up_mode,account_owner=account_owner,account_form=account_form,voided_check=voided_check}
getExtAcctRefNum.OutputType=com.tcs.ebw.payments.transferobject.ExtAcctVerifyOutTO
getExtAcctRefNum.StmtType=PreparedStatement

#CR 134
getExtAcctTrialStatus.Query=select distinct payccsstatuscode,paypymtdate from ds_pay_txns where trial_depo='Y' and paypayeeaccnum=#cpypayeeid:varchar#
getExtAcctTrialStatus.TOColumnMap={payccsstatuscode=payccsstatuscode,paypymtdate=paypymtdate}
getExtAcctTrialStatus.OutputType=com.tcs.ebw.payments.transferobject.ExtAcctTrialStatusTO
getExtAcctTrialStatus.StmtType=Statement

#getExtAcctFrmVal.Query=select cpyboname1,cpyacctype,cpypayeename1,cpybranchscode,cpyaccnum,'XX'||'-'||substr(CPYACCNUM,(length(CPYACCNUM)-3),4) as cpyaccnum1,cpybankcode from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#

#getExtAcctFrmVal.Query=select cpyboname1,cpyacctype,cpypayeename1,cpybranchscode,cpyaccnum,'XX'||'-'||substr(CPYACCNUM,(length(CPYACCNUM)-1),2) as cpyaccnum1,cpybankcode from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#
getExtAcctFrmVal.Query=select versionnum,cpyboname1,cpyacctype,cpypayeename1,cpybranchscode,cpyaccnum,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as cpyaccnum1,cpybankcode from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#
getExtAcctFrmVal.TOColumnMap={versionnum=versionnum,cpyboname1=cpyboname1,cpyacctype=cpyacctype,cpypayeename1=cpypayeename1,cpybranchscode=cpybranchscode,cpyaccnum=cpyaccnum,cpyaccnum1=cpyaccnum1,cpybankcode=cpybankcode}
getExtAcctFrmVal.OutputType=com.tcs.ebw.payments.transferobject.ExtAcctVerifySubOutTO[]
getExtAcctFrmVal.StmtType=PreparedStatement

#getExtEditAcctRefNum.Query=select cpyboname1,cpyacctype,cpypayeename1,cpybranchscode,cpyaccnum,'XX'||'-'||substr(CPYACCNUM,(length(CPYACCNUM)-3),4) as cpyaccnum1,cpybankcode from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#
#getExtEditAcctRefNum.Query=select cpyboname1,cpyacctype,cpypayeename1,cpybranchscode,cpyaccnum,'XX'||'-'||substr(CPYACCNUM,(length(CPYACCNUM)-1),2) as cpyaccnum1,cpybankcode from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#
#getExtEditAcctRefNum.Query=select versionnum,cpyboname1,cpyacctype,cpypayeename1,cpybranchscode,cpyaccnum,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as cpyaccnum1,cpybankcode,cpystatus,life_user_id from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#
#getExtEditAcctRefNum.TOColumnMap={versionnum=versionnum,cpyboname1=cpyboname1,cpyacctype=cpyacctype,cpypayeename1=cpypayeename1,cpybranchscode=cpybranchscode,cpyaccnum=cpyaccnum,cpyaccnum1=cpyaccnum1,cpybankcode=cpybankcode,cpystatus=cpystatus,life_user_id=life_user_id}
#getExtEditAcctRefNum.Query=select versionnum,cpyboname1,cpyacctype,cpypayeename1,cpybranchscode,cpyaccnum,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as cpyaccnum1,cpybankcode,cpystatus,life_user_id,key_client,key_link,sign_up_mode,account_owner,account_form,voided_check from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#
#getExtEditAcctRefNum.TOColumnMap={versionnum=versionnum,cpyboname1=cpyboname1,cpyacctype=cpyacctype,cpypayeename1=cpypayeename1,cpybranchscode=cpybranchscode,cpyaccnum=cpyaccnum,cpyaccnum1=cpyaccnum1,cpybankcode=cpybankcode,cpystatus=cpystatus,life_user_id=life_user_id,key_client=key_client,key_link=key_link,sign_up_mode=sign_up_mode,account_owner=account_owner,account_form=account_form,voided_check=voided_check}
#getExtEditAcctRefNum.Query=select dpr.versionnum,dpr.cpyboname1,dpr.cpyacctype,dsdom.dmndomainvaldesc as cpyacctypedesc,dpr.cpypayeename1,dpr.cpybranchscode,dpr.cpyaccnum,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as cpyaccnum1,dpr.cpybankcode,dpr.cpystatus,dpr.life_user_id,dpr.key_client,dpr.key_link,dpr.sign_up_mode,dpr.account_owner,dpr.account_form,dpr.voided_check from ds_payee_ref dpr left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_NewExtAcctType' and dsdom.dmndomainval=dpr.cpyacctype where dpr.cpypayeeid=#cpypayeeid:varchar#

getExtEditAcctRefNum.Query=select dpr.versionnum,dsbnk.bnkdes as cpyboname1,dpr.cpyacctype,dsdom.dmndomainvaldesc as cpyacctypedesc,dpr.cpypayeename1,dpr.cpybranchscode,dpr.cpyaccnum,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as cpyaccnum1,dpr.cpybankcode,dpr.cpystatus,dpr.life_user_id,dpr.key_client,dpr.key_link,dpr.sign_up_mode,dpr.account_owner,dpr.account_form,dpr.voided_check from ds_payee_ref dpr left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_NewExtAcctType' and dsdom.dmndomainval=dpr.cpyacctype left outer join DS_BANK_REF dsbnk on dsbnk.bnkcode=dpr.CPYBANKCODE where dpr.cpypayeeid=#cpypayeeid:varchar#
getExtEditAcctRefNum.TOColumnMap={versionnum=versionnum,cpyboname1=cpyboname1,cpyacctype=cpyacctype,cpyacctypedesc=cpyacctypedesc,cpypayeename1=cpypayeename1,cpybranchscode=cpybranchscode,cpyaccnum=cpyaccnum,cpyaccnum1=cpyaccnum1,cpybankcode=cpybankcode,cpystatus=cpystatus,life_user_id=life_user_id,key_client=key_client,key_link=key_link,sign_up_mode=sign_up_mode,account_owner=account_owner,account_form=account_form,voided_check=voided_check}
getExtEditAcctRefNum.OutputType=com.tcs.ebw.payments.transferobject.ExtAcctEditOutTO
getExtEditAcctRefNum.StmtType=PreparedStatement

#getExtDeleteAcctRefNum.Query=select cpyboname1,cpyacctype,cpypayeename1,cpybranchscode,cpyaccnum,'XX'||'-'||substr(CPYACCNUM,(length(CPYACCNUM)-3),4) as cpyaccnum1,cpybankcode from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#
#getExtDeleteAcctRefNum.Query=select cpyboname1,cpyacctype,cpypayeename1,cpybranchscode,cpyaccnum,'XX'||'-'||substr(CPYACCNUM,(length(CPYACCNUM)-1),2) as cpyaccnum1,cpybankcode from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#
#getExtDeleteAcctRefNum.Query=select versionnum,cpyboname1,cpyacctype,cpypayeename1,cpybranchscode,cpyaccnum,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as cpyaccnum1,cpybankcode,cpystatus from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#
#getExtDeleteAcctRefNum.TOColumnMap={versionnum=versionnum,cpyboname1=cpyboname1,cpyacctype=cpyacctype,cpypayeename1=cpypayeename1,cpybranchscode=cpybranchscode,cpyaccnum=cpyaccnum,cpyaccnum1=cpyaccnum1,cpybankcode=cpybankcode,cpystatus=cpystatus}
#getExtDeleteAcctRefNum.Query=select versionnum,cpyboname1,cpyacctype,cpypayeename1,cpybranchscode,cpyaccnum,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as cpyaccnum1,cpybankcode,cpystatus,key_client,key_link,sign_up_mode,account_owner,account_form,voided_check from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#
#getExtDeleteAcctRefNum.TOColumnMap={versionnum=versionnum,cpyboname1=cpyboname1,cpyacctype=cpyacctype,cpypayeename1=cpypayeename1,cpybranchscode=cpybranchscode,cpyaccnum=cpyaccnum,cpyaccnum1=cpyaccnum1,cpybankcode=cpybankcode,cpystatus=cpystatus,key_client=key_client,key_link=key_link,sign_up_mode=sign_up_mode,account_owner=account_owner,account_form=account_form,voided_check=voided_check}
#getExtDeleteAcctRefNum.Query=select dpr.versionnum,dpr.cpyboname1,dpr.cpyacctype,dsdom.dmndomainvaldesc as cpyacctypedesc,dpr.cpypayeename1,dpr.cpybranchscode,dpr.cpyaccnum,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as cpyaccnum1,dpr.cpybankcode,dpr.cpystatus,dpr.key_client,dpr.key_link,dpr.sign_up_mode,dpr.account_owner,dpr.account_form,dpr.voided_check from ds_payee_ref dpr left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_NewExtAcctType' and dsdom.dmndomainval=dpr.cpyacctype where dpr.cpypayeeid=#cpypayeeid:varchar#

getExtDeleteAcctRefNum.Query=select dpr.versionnum,dsbnk.bnkdes as cpyboname1,dpr.cpyacctype,dsdom.dmndomainvaldesc as cpyacctypedesc,dpr.cpypayeename1,dpr.cpybranchscode,dpr.cpyaccnum,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as cpyaccnum1,dpr.cpybankcode,dpr.cpystatus,dpr.key_client,dpr.key_link,dpr.sign_up_mode,dpr.account_owner,dpr.account_form,dpr.voided_check from ds_payee_ref dpr left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_NewExtAcctType' and dsdom.dmndomainval=dpr.cpyacctype left outer join DS_BANK_REF dsbnk on dsbnk.bnkcode=dpr.CPYBANKCODE where dpr.cpypayeeid=#cpypayeeid:varchar#
getExtDeleteAcctRefNum.TOColumnMap={versionnum=versionnum,cpyboname1=cpyboname1,cpyacctype=cpyacctype,cpyacctypedesc=cpyacctypedesc,cpypayeename1=cpypayeename1,cpybranchscode=cpybranchscode,cpyaccnum=cpyaccnum,cpyaccnum1=cpyaccnum1,cpybankcode=cpybankcode,cpystatus=cpystatus,key_client=key_client,key_link=key_link,sign_up_mode=sign_up_mode,account_owner=account_owner,account_form=account_form,voided_check=voided_check}
getExtDeleteAcctRefNum.OutputType=com.tcs.ebw.payments.transferobject.ExtAcctDeleteOutTO
getExtDeleteAcctRefNum.StmtType=PreparedStatement


## Verify Ends

################ Creating,Modifying,Cancelling,Skipping,View External and Internal Transfers ################

setBatch.Query=insert into ds_batch (batbatchref,batgrpid,batapplicationid,batnooftxns,batstatus,batcreatedby,batmodifiedby,batcreateddate,batmodifieddate,txn_entry_date) values(#batbatchref:varchar#,#batgrpid:varchar#,#batapplicationid:varchar#,#batnooftxns:numeric#,#batstatus:varchar#,#batcreatedby:varchar#,#batmodifiedby:varchar#,#batcreateddate:timestamp#,CURRENT_TIMESTAMP,#txn_entry_date:timestamp#)
setBatch.StmtType=PreparedStatement

setpayTransaction.Query=insert into ds_pay_txns (payccsstatuscode,paytrxkey,paygroupid,paybatchref,paypayref,paytypecode,paydebitaccnum,paycurrcode,paydebitamt,paypymtdate,paypayeeaccnum,payrecurring,payfrequency,payfreqpaymentcount,payfreqenddate,createdby,modifiedby,acct_user_id,par_txn_no,createddate,fromfa_id,fromfa_id_hist,tofa_id,tofa_id_hist,frombranch_id,frombranch_id_hist,tobranch_id,tobranch_id_hist,fromacct_tier,toacct_tier,acct_type1,acct_from_type,acct_to_type,acct_user_name,fromacct_no_hist,toacct_no_hist,created_by_role,createdby_name,txn_type,keyaccountnumber_from,keyaccountnumber_to,friendlyname_from,friendlyname_to,nickname_from,nickname_to,life_user_id,frombr_acct_no_fa,tobr_acct_no_fa,fromacct_type1,toacct_type1,requested_exe_dt,actual_exe_dt,sent_to_paymnt,payfreqlimit,trial_depo,paytxneprydate,payissueddate,modifieddate,rsa_review_flag,next_approver_role,initiator_role,initiator_id,current_owner_role,current_owner_id,auth_mode,auth_info_reciever,verbal_auth_client_name,verbal_auth_date,verbal_auth_time,client_verification_desc,same_name_flag,dont_spawn_flag,modifiedby_name,auth_confirmed_by) values (#payccsstatuscode:varchar#,#paytrxkey:numeric#,#paygroupid:varchar#,#paybatchref:varchar#,#paypayref:varchar#,#paytypecode:varchar#,#paydebitaccnum:varchar#,#paycurrcode:varchar#,#paydebitamt:BigDecimal#,#paypymtdate:timestamp#,#paypayeeaccnum:varchar#,#payrecurring:varchar#,#payfrequency:varchar#,#payfreqpaymentcount:numeric#,#payfreqenddate:timestamp#,#createdby:varchar#,#modifiedby:varchar#,#acct_user_id:varchar#,#par_txn_no:numeric#,#createddate:timestamp#,#fromfa_id:numeric#,#fromfa_id_hist:numeric#,#tofa_id:numeric#,#tofa_id_hist:numeric#,#frombranch_id:numeric#,#frombranch_id_hist:numeric#,#tobranch_id:numeric#,#tobranch_id_hist:numeric#,#fromacct_tier:varchar#,#toacct_tier:varchar#,#acct_type1:numeric#,#acct_from_type:varchar#,#acct_to_type:varchar#,#acct_user_name:varchar#,#fromacct_no_hist:varchar#,#toacct_no_hist:varchar#,#created_by_role:varchar#,#createdby_name:varchar#,#txn_type:varchar#,#keyaccountnumber_from:varchar#,#keyaccountnumber_to:varchar#,#friendlyname_from:varchar#,#friendlyname_to:varchar#,#nickname_from:varchar#,#nickname_to:varchar#,#life_user_id:varchar#,#frombr_acct_no_fa:varchar#,#tobr_acct_no_fa:varchar#,#fromacct_type1:varchar#,#toacct_type1:varchar#,#requested_exe_dt:timestamp#,#actual_exe_dt:timestamp#,#sent_to_paymnt:varchar#,#payfreqlimit:BigDecimal#,#trial_depo:varchar#,#paytxneprydate:timestamp#,#payissueddate:timestamp#,CURRENT_TIMESTAMP,#rsa_review_flag:varchar#,#next_approver_role:varchar#,#initiator_role:varchar#,#initiator_id:varchar#,#current_owner_role:varchar#,#current_owner_id:varchar#,#auth_mode:varchar#,#auth_info_reciever:varchar#,#verbal_auth_client_name:varchar#,#verbal_auth_date:timestamp#,#verbal_auth_time:varchar#,#client_verification_desc:varchar#,#same_name_flag:varchar#,#dont_spawn_flag:varchar#,#modifiedby_name:varchar#,#auth_confirmed_by:varchar#)
setpayTransaction.StmtType=PreparedStatement

setRecurringTransaction.Query=insert into txn_parent (par_txn_no,from_acct,to_acct,amount,frequency,duration,untildate,thrshold_amt,max_txn_no,accum_amt,accum_txn_no,last_txn_id,last_txn_dt,next_txn_id,next_txn_dt,status,create_dt,prefered_previous_txn_dt,actual_previous_txn_dt,modifiedby,modifieddate,initiation_dt,par_txn_request_dt) values (#par_txn_no:numeric#,#from_acct:varchar#,#to_acct:varchar#,#amount:BigDecimal#,#frequency:varchar#,#duration:varchar#,#untildate:timestamp#,#thrshold_amt:BigDecimal#,#max_txn_no:numeric#,#accum_amt:BigDecimal#,#accum_txn_no:numeric#,#last_txn_id:varchar#,#last_txn_dt:timestamp#,#next_txn_id:varchar#,#next_txn_dt:timestamp#,#status:varchar#,#create_dt:timestamp#,#prefered_previous_txn_dt:timestamp#,#actual_previous_txn_dt:timestamp#,#modifiedby:varchar#,#modifieddate:timestamp#,#initiation_dt:timestamp#,par_txn_request_dt=#par_txn_request_dt:timestamp#)
setRecurringTransaction.StmtType=PreparedStatement

setTransactionLog.Query=insert into DS_PAY_TXNS_LOG (trx_log_key,created_modified_by_name,paygroupid,paybatchref,paypayref,debit_acct_no,credit_act_no,fromfa_id,frombranch_id,tofa_id,tobranch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,life_user_id,payinvoiceamt,created_modified_by_comments,last_action,amount,request_date,frequency,recurring_freq,repeat_untill,txn_status,trial_depo,initiation_date,keyaccountnumber_from,keyaccountnumber_to,paypayeeid,dont_spawn_flag,same_name_flag,auth_mode,auth_info_reciever,verbal_auth_client_name,verbal_auth_date,verbal_auth_time,client_verification_desc,rta_booked_in_flag,untildollarlimit,untilfreqenddate,untilnooftransfers,paytxneprydate,owner_role,owner_id,next_approver_role) values (next value for dspaytxnslog_seq,#created_modified_by_name:varchar#,#paygroupid:varchar#,#paybatchref:varchar#,#paypayref:varchar#,#debit_acct_no:varchar#,#credit_act_no:varchar#,#fromfa_id:numeric#,#frombranch_id:numeric#,#tofa_id:numeric#,#tobranch_id:numeric#,CURRENT_TIMESTAMP,#created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#life_user_id:varchar#,#payinvoiceamt:numeric#,#created_modified_by_comments:varchar#,#last_action:varchar#,#amount:BigDecimal#,#request_date:timestamp#,#frequency:varchar#,#recurring_freq:varchar#,#repeat_untill:varchar#,#txn_status:varchar#,#trial_depo:varchar#,#initiation_date:timestamp#,#keyaccountnumber_from:varchar#,#keyaccountnumber_to:varchar#,#paypayeeid:varchar#,#dont_spawn_flag:varchar#,#same_name_flag:varchar#,#auth_mode:varchar#,#auth_info_reciever:varchar#,#verbal_auth_client_name:varchar#,#verbal_auth_date:timestamp#,#verbal_auth_time:varchar#,#client_verification_desc:varchar#,#rta_booked_in_flag:varchar#,#untilDollarLimit:BigDecimal#,#untilFreqEndDate:timestamp#,#untilNoOfTransfers:numeric#,#paytxneprydate:timestamp#,#owner_role:varchar#,#owner_id:varchar#,#next_approver_role:varchar#)
setTransactionLog.StmtType=PreparedStatement

updatePaymentConNo.Query=update DS_PAY_TXNS set versionnum=versionnum+1,pmnt_confirmationno=#pmnt_confirmationno:varchar# where PAYPAYREF=#paypayref:varchar# and PAYBATCHREF=#paybatchref:varchar#
updatePaymentConNo.StmtType=PreparedStatement

updateParentTxn.Query=update TXN_PARENT set txn_parent_ver=txn_parent_ver+1,accum_amt=accum_amt+#accum_amt:BigDecimal#,accum_txn_no=accum_txn_no+#accum_txn_no:numeric#,prefered_previous_txn_dt=#prefered_previous_txn_dt:timestamp#,actual_previous_txn_dt=#actual_previous_txn_dt:timestamp#,last_txn_id=#last_txn_id:varchar#,last_txn_dt=#last_txn_dt:timestamp#,next_txn_dt=#next_txn_dt:timestamp# where par_txn_no=#par_txn_no:numeric#
updateParentTxn.StmtType=PreparedStatement

updateNextBussDtTxnParent.Query=update TXN_PARENT set txn_parent_ver=txn_parent_ver+1,next_txn_id=#next_txn_id:varchar#,status=#status:varchar# where par_txn_no=#par_txn_no:numeric#
updateNextBussDtTxnParent.StmtType=PreparedStatement

getExternalAccounts.Query= select cpypayeename1||' '||'(XX-'||TRIM(COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)))||')' as cpypayeename1,CPYPAYEEID from DS_PAYEE_REF where key_client=#key_client_id:varchar# and cpystatus='32'
getExternalAccounts.TOColumnMap={cpypayeename1=cpypayeename1,cpypayeeid=cpypayeeid}
getExternalAccounts.OutputType=java.util.ArrayList
getExternalAccounts.StmtType=PreparedStatement

getExternalPayeeDetails.Query=select dp.cpypayeeid,db.bnkaddress1 as cpyadd1,db.bnkaddress2 as cpyadd2,db.bnkaddress3 as cpyadd3,dp.cpyacctype,dp.cpypayeename1||' '||'(XX-'||trim(coalesce(right(dp.cpyaccnum,4), right(dp.cpyaccnum,3), right(dp.cpyaccnum,2)))||')' as cpypayeename1,dp.cpybankcode,dp.cpyaccnum,db.bnkdes as cpyboname1,dp.life_user_id,dp.sign_up_mode,dp.account_owner,dp.cpypayeename1 as nick_name,dp.cpypayeerefno as created_by_id,dp.cpystatus,dp.key_client,dp.key_link,dp.account_form,dp.voided_check,dp.createddate as created_date from ds_payee_ref dp left outer join ds_bank_ref db on db.bnkcode = dp.cpybankcode where cpypayeeid=#externalPayeeId:varchar#
getExternalPayeeDetails.TOColumnMap={cpypayeeid=cpypayeeid,cpyadd1=cpyadd1,cpyadd2=cpyadd2,cpyadd3=cpyadd3,cpyacctype=cpyacctype,cpypayeename1=cpypayeename1,cpybankcode=cpybankcode,cpyaccnum=cpyaccnum,cpyboname1=cpyboname1,life_user_id=life_user_id,sign_up_mode=sign_up_mode,account_owner=account_owner,nick_name=nick_name,created_by_id=created_by_id,cpystatus=cpystatus,key_client=key_client,key_link=key_link,account_form=account_form,voided_check=voided_check,created_date=created_date}
getExternalPayeeDetails.OutputType=com.tcs.ebw.payments.transferobject.DsExtPayeeDetailsOutTO
getExternalPayeeDetails.StmtType=PreparedStatement

modifyBatch.Query=update ds_batch set batversionnum=batversionnum+1,batstatus=#batstatus:varchar#, batmodifieddate=#batmodifieddate:timestamp#,batmodifiedby=#batmodifiedby:varchar# where batbatchref=#batbatchref:varchar#
modifyBatch.StmtType=PreparedStatement

modifypayTransaction.Query=update ds_pay_txns set versionnum=versionnum+1, paydebitamt=#paydebitamt:BigDecimal#,paypymtdate=#paypymtdate:timestamp#, payfrequency=#payfrequency:varchar#, payfreqpaymentcount=#payfreqpaymentcount:numeric#,payfreqenddate=#payfreqenddate:timestamp#, payfreqlimit=#payfreqlimit:BigDecimal#,modifieddate=#modifieddate:timestamp#,payccsstatuscode=#payccsstatuscode:varchar#,modifiedby=#modifiedby:varchar#,sent_to_paymnt=#sent_to_paymnt:varchar#,actual_exe_dt=#actual_exe_dt:timestamp#,requested_exe_dt=#requested_exe_dt:timestamp#,paytxneprydate=#paytxneprydate:timestamp#,rsa_review_flag=#rsa_review_flag:varchar#,next_approver_role=#next_approver_role:varchar#,current_owner_role=#current_owner_role:varchar#,current_owner_id=#current_owner_id:varchar#,dont_spawn_flag=#dont_spawn_flag:varchar#,same_name_flag=#same_name_flag:varchar#,auth_mode=#auth_mode:varchar#,auth_info_reciever=#auth_info_reciever:varchar#,verbal_auth_client_name=#verbal_auth_client_name:varchar#,verbal_auth_date=#verbal_auth_date:timestamp#,verbal_auth_time=#verbal_auth_time:varchar#,client_verification_desc=#client_verification_desc:varchar#,modifiedby_name=#modifiedby_name:varchar#,auth_confirmed_by=#auth_confirmed_by:varchar# where paypayref=#paypayref:varchar# and paybatchref=#paybatchref:varchar#
modifypayTransaction.StmtType=PreparedStatement

modifyRecurringTransaction.Query=update txn_parent set txn_parent_ver=txn_parent_ver+1,amount=#amount:BigDecimal#,frequency=#frequency:varchar#,duration=#duration:varchar#,next_txn_dt=#next_txn_dt:timestamp#,prefered_previous_txn_dt=#prefered_previous_txn_dt:timestamp#,actual_previous_txn_dt=#actual_previous_txn_dt:timestamp#,modifiedby=#modifiedby:varchar#,modifieddate=#modifieddate:timestamp#,untildate=#untildate:timestamp#,thrshold_amt=#thrshold_amt:BigDecimal#,max_txn_no=#max_txn_no:numeric# where par_txn_no=#par_txn_no:numeric#
modifyRecurringTransaction.StmtType=PreparedStatement

cancelBatch.Query=update ds_batch set batversionnum=batversionnum+1,batstatus=#batstatus:varchar#,batmodifieddate=#batmodifieddate:timestamp#,batmodifiedby=#batmodifiedby:varchar# where batbatchref=#batbatchref:varchar#
cancelBatch.StmtType=PreparedStatement

cancelPaytransaction.Query=update ds_pay_txns set versionnum=versionnum+1,payccsstatuscode=#payccsstatuscode:varchar#,modifiedby=#modifiedby:varchar#,modifiedby_name=#modifiedby_name:varchar#,modifieddate=#modifieddate:timestamp# where paybatchref=#paybatchref:varchar# and  paypayref=#paypayref:varchar#
cancelPaytransaction.StmtType=PreparedStatement

cancelRecurringParent.Query=update txn_parent set txn_parent_ver=txn_parent_ver+1, status=#status:varchar#,modifiedby=#modifiedby:varchar#,modifieddate=#modifieddate:timestamp# where par_txn_no=#par_txn_no:numeric#
cancelRecurringParent.StmtType=PreparedStatement

getCancelPayDetails.Query=select case when dpt.keyaccountnumber_from is null then (dr.cpypayeename1||' '||'(XX-'||trim(coalesce(right(dr.cpyaccnum,4), right(dr.cpyaccnum,3), right(dr.cpyaccnum,2)))||')') else coalesce((coalesce(a.nick_name,a.friendly_name)), concat('XXX-',right(dpt.paydebitaccnum,4))) END as fromAccountName,case when dpt.keyaccountnumber_to is null then (dr.cpypayeename1||' '||'(XX-'||trim(coalesce(right(dr.cpyaccnum,4), right(dr.cpyaccnum,3), right(dr.cpyaccnum,2)))||')') else coalesce((coalesce(b.nick_name,b.friendly_name)),case when dpt.txn_type='INT' then concat('XXX-',right(dpt.paypayeeaccnum,4)) else concat('XXX-',right(dpt.paydebitaccnum,4))end) end as toaccountName,dpt.versionnum,dpt.requested_exe_dt,dpt.payrecurring as transferFrequency,dpt.paydebitamt,dpt.payccsstatuscode,dpt.par_txn_no,dpt.txn_type,dpt.keyaccountnumber_from,dpt.keyaccountnumber_to,dpt.paybatchref,dpt.frombr_acct_no_fa,dpt.tobr_acct_no_fa,dpt.dont_spawn_flag,dbt.batversionnum as batversionnum,tp.duration as duration,tp.max_txn_no as payfreqpaymentcount,tp.untildate as payfreqenddate,tp.frequency as payfrequency,tp.thrshold_amt as payfreqlimit,tp.accum_amt as accumulatedAmt,tp.accum_txn_no as accumulatedTransfers,tp.prefered_previous_txn_dt as prefered_previous_txn_dt,tp.txn_parent_ver as partxnversionnum,tp.par_txn_request_dt,dr.cpypayeename1||' '||'(XX-'||TRIM(COALESCE(RIGHT(dr.CPYACCNUM,4), RIGHT(dr.CPYACCNUM,3), RIGHT(dr.CPYACCNUM,2)))||')' as paypayeename1,dr.cpyaccnum as payeeaccnum,dr.cpypayeeid as paypayeeid,dr.account_owner as extAccOwner from ds_pay_txns dpt left outer join ds_batch dbt on dpt.paybatchref=dbt.batbatchref left outer join sso_account_properties a on dpt.keyaccountnumber_from=a.key_account_no and a.lifeuserid=#lifeUserId:varchar# left outer join sso_account_properties b on dpt.keyaccountnumber_to=b.key_account_no and b.lifeuserid=#lifeUserId:varchar# left outer join ds_payee_ref dr on dpt.paypayeeaccnum=dr.cpypayeeid left outer join txn_parent tp on dpt.par_txn_no=tp.par_txn_no where dpt.paypayref=#paypayref:varchar#
getCancelPayDetails.TOColumnMap={fromAccountName=fromAccountName,toaccountName=toaccountName,versionnum=versionnum,requested_exe_dt=requested_exe_dt,transferFrequency=transferFrequency,paydebitamt=paydebitamt,payccsstatuscode=payccsstatuscode,par_txn_no=par_txn_no,txn_type=txn_type,frombr_acct_no_fa=frombr_acct_no_fa,tobr_acct_no_fa=tobr_acct_no_fa,keyaccountnumber_from=keyaccountnumber_from,keyaccountnumber_to=keyaccountnumber_to,paybatchref=paybatchref,partxnversionnum=partxnversionnum,batversionnum=batversionnum,duration=duration,payfreqpaymentcount=payfreqpaymentcount,payfreqenddate=payfreqenddate,payfrequency=payfrequency,payfreqlimit=payfreqlimit,accumulatedAmt=accumulatedAmt,accumulatedTransfers=accumulatedTransfers,prefered_previous_txn_dt=prefered_previous_txn_dt,paypayeename1=paypayeename1,paypayeeid=paypayeeid,payeeaccnum=payeeaccnum,extAccOwner=extAccOwner,dont_spawn_flag=dont_spawn_flag,par_txn_request_dt=par_txn_request_dt}
getCancelPayDetails.OutputType=com.tcs.ebw.payments.transferobject.DsGetCancelPayOutTO
getCancelPayDetails.StmtType=PreparedStatement

selectModifiedPayBatchDetails.Query=select batgrpid,batapplicationid,batnooftxns,batbatchref,batstatus,batcreatedby,batmodifiedby,batcreateddate,batmodifieddate,txn_entry_date from ds_batch where batbatchref=#batbatchref:varchar#
selectModifiedPayBatchDetails.TOColumnMap={batgrpid=batgrpid,batbatchref=batbatchref,batapplicationid=batapplicationid,batnooftxns=batnooftxns,batstatus=batstatus,batcreatedby=batcreatedby,batmodifiedby=batmodifiedby,batcreateddate=batcreateddate,batmodifieddate=batmodifieddate,txn_entry_date=txn_entry_date}
selectModifiedPayBatchDetails.OutputType=com.tcs.ebw.payments.transferobject.DsBatchTO
selectModifiedPayBatchDetails.StmtType=PreparedStatement

selectModifiedPayTxnsDetails.Query=select dpt.payccsstatuscode,dpt.paytrxkey,dpt.paygroupid,dpt.paytypecode,dpt.paydebitaccnum,dpt.paypayref,dpt.paybatchref,dpt.paycurrcode,dpt.paydebitamt,dpt.paypymtdate,dpt.paypayeeaccnum,dr.cpypayeename1||' '||'(XX-'||trim(coalesce(right(dr.cpyaccnum,4), right(dr.cpyaccnum,3), right(dr.cpyaccnum,2)))||')'  as paypayeename1,dr.cpybankcode as paypayeebankcode,dr.cpybranchscode  as paypayeebranchcode,dr.cpyaccnum as paypayeeid,dpt.payrecurring,tp.frequency as payfrequency,tp.max_txn_no as payfreqpaymentcount,tp.untildate as payfreqenddate,dpt.createdby,dpt.modifiedby,dpt.acct_user_id,dpt.par_txn_no,dpt.createddate,dpt.fromfa_id,dpt.fromfa_id_hist,dpt.tofa_id,dpt.tofa_id_hist,dpt.frombranch_id,dpt.frombranch_id_hist,dpt.tobranch_id,dpt.tobranch_id_hist,dpt.fromacct_tier,dpt.toacct_tier,dpt.acct_type1,dpt.acct_from_type,dpt.acct_to_type,dpt.acct_user_name,dpt.fromacct_no_hist,dpt.toacct_no_hist,dpt.created_by_role,dpt.createdby_name,dpt.txn_type,dpt.keyaccountnumber_from,dpt.keyaccountnumber_to,dpt.friendlyname_from,dpt.friendlyname_to,dpt.nickname_from,dpt.nickname_to,dpt.life_user_id,dr.cpyacctype as paypayee_acct_type,dpt.frombr_acct_no_fa,dpt.tobr_acct_no_fa,dpt.fromacct_type1,dpt.toacct_type1,dpt.requested_exe_dt,dpt.actual_exe_dt,dpt.sent_to_paymnt,tp.thrshold_amt as payfreqlimit,dpt.next_approver_role,dpt.initiator_role,dpt.initiator_id,dpt.current_owner_role,dpt.current_owner_id,dpt.auth_mode,dpt.auth_info_reciever,dpt.verbal_auth_client_name,dpt.verbal_auth_date,dpt.verbal_auth_time,dpt.client_verification_desc,dpt.same_name_flag,dpt.dont_spawn_flag,dr.sign_up_mode as paydisctype,dpt.payacctype,dpt.rta_booked_in_flag,dpt.modifiedby_name,dpt.auth_confirmed_by,dpt.rsa_review_flag from ds_pay_txns dpt left outer join txn_parent tp on dpt.par_txn_no=tp.par_txn_no left outer join ds_payee_ref dr on dpt.paypayeeaccnum=dr.cpypayeeid where paypayref=#paypayref:varchar# and paybatchref=#paybatchref:varchar#
selectModifiedPayTxnsDetails.TOColumnMap={payccsstatuscode=payccsstatuscode,paypayref=paypayref,paybatchref=paybatchref,paytrxkey=paytrxkey,paygroupid=paygroupid,paytypecode=paytypecode,paydebitaccnum=paydebitaccnum,paycurrcode=paycurrcode,paydebitamt=paydebitamt,paypymtdate=paypymtdate,paypayeeaccnum=paypayeeaccnum,paypayeename1=paypayeename1,paypayeebankcode=paypayeebankcode,paypayeebranchcode=paypayeebranchcode,paypayeeid=paypayeeid,payrecurring=payrecurring,payfrequency=payfrequency,payfreqpaymentcount=payfreqpaymentcount,payfreqenddate=payfreqenddate,createdby=createdby,modifiedby=modifiedby,acct_user_id=acct_user_id,par_txn_no=par_txn_no,createddate=createddate,fromfa_id=fromfa_id,fromfa_id_hist=fromfa_id_hist,tofa_id=tofa_id,tofa_id_hist=tofa_id_hist,frombranch_id=frombranch_id,frombranch_id_hist=frombranch_id_hist,tobranch_id=tobranch_id,tobranch_id_hist=tobranch_id_hist,fromacct_tier=fromacct_tier,toacct_tier=toacct_tier,acct_type1=acct_type1,acct_from_type=acct_from_type,acct_to_type=acct_to_type,acct_user_name=acct_user_name,fromacct_no_hist=fromacct_no_hist,toacct_no_hist=toacct_no_hist,created_by_role=created_by_role,createdby_name=createdby_name,txn_type=txn_type,keyaccountnumber_from=keyaccountnumber_from,keyaccountnumber_to=keyaccountnumber_to,friendlyname_from=friendlyname_from,friendlyname_to=friendlyname_to,nickname_from=nickname_from,nickname_to=nickname_to,life_user_id=life_user_id,paypayee_acct_type=paypayee_acct_type,frombr_acct_no_fa=frombr_acct_no_fa,tobr_acct_no_fa=tobr_acct_no_fa,fromacct_type1=fromacct_type1,toacct_type1=toacct_type1,requested_exe_dt=requested_exe_dt,actual_exe_dt=actual_exe_dt,sent_to_paymnt=sent_to_paymnt,payfreqlimit=payfreqlimit,next_approver_role=next_approver_role,initiator_role=initiator_role,initiator_id=initiator_id,current_owner_role=current_owner_role,current_owner_id=current_owner_id,auth_mode=auth_mode,auth_info_reciever=auth_info_reciever,verbal_auth_client_name=verbal_auth_client_name,verbal_auth_date=verbal_auth_date,verbal_auth_time=verbal_auth_time,client_verification_desc=client_verification_desc,same_name_flag=same_name_flag,dont_spawn_flag=dont_spawn_flag,payacctype=payacctype,paydisctype=paydisctype,rta_booked_in_flag=rta_booked_in_flag,modifiedby_name=modifiedby_name,auth_confirmed_by=auth_confirmed_by,rsa_review_flag=rsa_review_flag}
selectModifiedPayTxnsDetails.OutputType=com.tcs.ebw.payments.transferobject.DsPayTxnsTO
selectModifiedPayTxnsDetails.StmtType=PreparedStatement

getCurrentBusinessDate.Query=select BUSINESS_DATE  from business_date_online_view where BRANCH_CODE=#branch_code:varchar#
getCurrentBusinessDate.TOColumnMap={business_date=business_date}
getCurrentBusinessDate.OutputType=com.tcs.ebw.payments.transferobject.DsConfigDetailsOut
getCurrentBusinessDate.StmtType=PreparedStatement

checkExtAccAvailablity.Query= select CPYSTATUS,CPYPAYEENAME1 from DS_PAYEE_REF where key_client=#key_client_id:varchar#
checkExtAccAvailablity.TOColumnMap={cpystatus=cpystatus,cpypayeename1=cpypayeename1}
checkExtAccAvailablity.OutputType=java.util.ArrayList
checkExtAccAvailablity.StmtType=PreparedStatement

getEditTransferDetails.Query=select case when dpt.keyaccountnumber_from is null then (dr.cpypayeename1||' '||'(XX-'||trim(coalesce(right(dr.cpyaccnum,4), right(dr.cpyaccnum,3), right(dr.cpyaccnum,2)))||')') else coalesce((coalesce(a.nick_name,a.friendly_name)), concat('XXX-',right(dpt.paydebitaccnum,4))) end as fromAccountName, case when dpt.keyaccountnumber_to is null then (dr.cpypayeename1||' '||'(XX-'||trim(coalesce(right(dr.cpyaccnum,4), right(dr.cpyaccnum,3), right(dr.cpyaccnum,2)))||')') else coalesce((coalesce(b.nick_name,b.friendly_name)),case when dpt.txn_type='INT' then concat('XXX-',right(dpt.paypayeeaccnum,4)) else concat('XXX-',right(dpt.paydebitaccnum,4))end) end as toaccountName,dpt.versionnum,dpt.paydebitamt,dpt.requested_exe_dt as initiationDate,dpt.paypayeeaccnum as paypayeeid,dpt.payccsstatuscode,dpt.paybatchref,dpt.par_txn_no,dpt.txn_type as transactionType,dpt.rsa_review_flag as rsa_Review_Flag,dpt.keyaccountnumber_from,dpt.keyaccountnumber_to,dpt.frombr_acct_no_fa,dpt.tobr_acct_no_fa,dpt.payrecurring as transferFrequency,tp.duration as duration,tp.max_txn_no as payfreqpaymentcount,tp.untildate as payfreqenddate,tp.frequency as payfrequencycombo,tp.thrshold_amt payfreqlimit,tp.accum_amt as accumulatedamt,tp.accum_txn_no as accumulatedtransfers,tp.txn_parent_ver as partxnversionnum,dbt.batversionnum as batversionnum from ds_pay_txns dpt left outer join ds_batch dbt on dpt.paybatchref=dbt.batbatchref left outer join sso_account_properties a on dpt.keyaccountnumber_from=a.key_account_no and a.lifeuserid=#lifeUserId:varchar# left outer join sso_account_properties b on dpt.keyaccountnumber_to=b.key_account_no and b.lifeuserid=#lifeUserId:varchar# left outer join ds_payee_ref dr on dpt.paypayeeaccnum=dr.cpypayeeid left outer join txn_parent tp on dpt.par_txn_no=tp.par_txn_no where dpt.paypayref=#paypayref:varchar# and dpt.paybatchref=#paybatchref:varchar#
getEditTransferDetails.TOColumnMap={versionnum=versionnum,fromaccountname=fromaccountname,toaccountname=toaccountname,paydebitamt=paydebitamt,initiationDate=initiationDate,paypayeeid=paypayeeid,payccsstatuscode=payccsstatuscode,paybatchref=paybatchref,par_txn_no=par_txn_no,transactionType=transactionType,rsa_Review_Flag=rsa_Review_Flag,frombr_acct_no_fa=frombr_acct_no_fa,tobr_acct_no_fa=tobr_acct_no_fa,keyaccountnumber_from=keyaccountnumber_from,keyaccountnumber_to=keyaccountnumber_to,duration=duration,payfreqpaymentcount=payfreqpaymentcount,payfreqenddate=payfreqenddate,payfrequencycombo=payfrequencycombo,payfreqlimit=payfreqlimit,accumulatedamt=accumulatedamt,accumulatedtransfers=accumulatedtransfers,transferFrequency=transferFrequency,partxnversionnum=partxnversionnum,batversionnum=batversionnum}
getEditTransferDetails.OutputType=com.tcs.ebw.payments.transferobject.DsGetEditTransferOutTO
getEditTransferDetails.StmtType=PreparedStatement

getTransferViewDetails.Query=select case when dpt.keyaccountnumber_from is null then (dr.cpypayeename1||' '||'(XX-'||trim(coalesce(right(dr.cpyaccnum,4),right(dr.cpyaccnum,3), right(dr.cpyaccnum,2)))||')') else coalesce((coalesce(a.nick_name,a.friendly_name)), concat('XXX-',right(dpt.paydebitaccnum,4))) end as fromAccount,case when dpt.keyaccountnumber_to is null then (dr.cpypayeename1||' '||'(XX-'||trim(coalesce(right(dr.cpyaccnum,4), right(dr.cpyaccnum,3), right(dr.cpyaccnum,2)))||')') else coalesce((coalesce(b.nick_name,b.friendly_name)),case when dpt.txn_type='INT' then concat('XXX-',right(dpt.paypayeeaccnum,4)) else concat('XXX-',right(dpt.paydebitaccnum,4))end) end as toAccount,dpt.paydebitamt as paymentAmount,dpt.requested_exe_dt as paymentDate,dpt.payrecurring as transferFrequency,dpt.txn_type as transferType,dpt.paypayref as confirmationNo,ds.dmndomainvaldesc as status,tp.duration  as durationValue,tp.accum_txn_no as noOfTransfers,tp.accum_amt as amountTransferred,tp.max_txn_no as payfreqpaymentcount,tp.untildate as payfreqenddate,tp.thrshold_amt as payfreqlimit,tp.frequency as payfrequency,tp.actual_previous_txn_dt as lastTransactionDate from ds_pay_txns dpt left outer join sso_account_properties a on dpt.keyaccountnumber_from=a.key_account_no and a.lifeuserid=#lifeUserId:varchar# left outer join sso_account_properties b on dpt.keyaccountnumber_to=b.key_account_no and b.lifeuserid=#lifeUserId:varchar# left outer join ds_payee_ref dr on dpt.paypayeeaccnum=dr.cpypayeeid left outer join txn_parent tp on dpt.par_txn_no=tp.par_txn_no left outer join ds_domains ds on dpt.payccsstatuscode=ds.dmndomainval and ds.dmndomain='D_StatusCode' where dpt.paypayref=#paypayref:varchar# and dpt.paybatchref=#paybatchref:varchar#
getTransferViewDetails.TOColumnMap={toAccount=toAccount,fromAccount=fromAccount,paymentAmount=paymentAmount,paymentDate=paymentDate,transferFrequency=transferFrequency,transferType=transferType,confirmationNo=confirmationNo,status=status,durationValue=durationValue,noOfTransfers=noOfTransfers,amountTransferred=amountTransferred,payfreqpaymentcount=payfreqpaymentcount,payfreqenddate=payfreqenddate,payfreqlimit=payfreqlimit,payfrequency=payfrequency,lastTransactionDate=lastTransactionDate}
getTransferViewDetails.OutputType=com.tcs.ebw.payments.transferobject.GetViewOutputDetailsTO
getTransferViewDetails.StmtType=PreparedStatement

updateParentTxnAfterSkip.Query=update TXN_PARENT set txn_parent_ver=txn_parent_ver+1,prefered_previous_txn_dt=#prefered_previous_txn_dt:timestamp#,next_txn_dt=#next_txn_dt:timestamp# where par_txn_no=#par_txn_no:numeric#
updateParentTxnAfterSkip.StmtType=PreparedStatement

getParentTransactionDetails.Query=select  from_acct,to_acct,amount,frequency,duration,untildate,thrshold_amt,max_txn_no,accum_amt,accum_txn_no,prefered_previous_txn_dt,next_txn_dt,par_txn_confno,par_txn_request_dt from txn_parent where par_txn_no=#par_txn_no:numeric#
getParentTransactionDetails.TOColumnMap={from_acct=from_acct,to_acct=to_acct,amount=amount,frequency=frequency,duration=duration,untildate=untildate,thrshold_amt=thrshold_amt,max_txn_no=max_txn_no,accum_amt=accum_amt,accum_txn_no=accum_txn_no,prefered_previous_txn_dt=prefered_previous_txn_dt,next_txn_dt=next_txn_dt,par_txn_confno=par_txn_confno,par_txn_request_dt=par_txn_request_dt}
getParentTransactionDetails.OutputType=com.tcs.ebw.payments.transferobject.TxnParentTO
getParentTransactionDetails.StmtType=PreparedStatement

getInternalHolidaysList.Query=select '"' || CHAR(DATE(HLDY_DT)) || '"' as HLDY_DT  FROM  HOLIDAY_VIEW where HOL_TYPE=1 and OBJ_TYP='GMSBKUSNYC'
getInternalHolidaysList.TOColumnMap={HLDY_DT=HLDY_DT}
getInternalHolidaysList.OutputType=java.util.ArrayList
getInternalHolidaysList.StmtType=Statement

getExternalHolidaysList.Query=select distinct '"' || CHAR(DATE(HLDY_DT)) || '"' as HLDY_DT  FROM  HOLIDAY_VIEW where HOL_TYPE in (1,3) and OBJ_TYP in ('GMSBKUSNYC','USD')
getExternalHolidaysList.TOColumnMap={HLDY_DT=HLDY_DT}
getExternalHolidaysList.OutputType=java.util.ArrayList
getExternalHolidaysList.StmtType=Statement

getInternalHolidaysListObj.Query=select DATE(HLDY_DT) AS HLDY_DT FROM  HOLIDAY_VIEW where HOL_TYPE=1 and OBJ_TYP='GMSBKUSNYC'
getInternalHolidaysListObj.TOColumnMap={HLDY_DT=HLDY_DT}
getInternalHolidaysListObj.OutputType=java.util.ArrayList
getInternalHolidaysListObj.StmtType=Statement

getExternalHolidaysListObj.Query=select distinct DATE(HLDY_DT) as HLDY_DT  FROM  HOLIDAY_VIEW where HOL_TYPE in (1,3) and OBJ_TYP in ('GMSBKUSNYC','USD')
getExternalHolidaysListObj.TOColumnMap={HLDY_DT=HLDY_DT}
getExternalHolidaysListObj.OutputType=java.util.ArrayList
getExternalHolidaysListObj.StmtType=Statement

getInternalCutOffTime.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=155
getInternalCutOffTime.TOColumnMap={VAL=VAL}
getInternalCutOffTime.OutputType=java.util.ArrayList
getInternalCutOffTime.StmtType=Statement

getExternalCutOffTime.Query=select END_TIME from CUT_OFF_VIEW
getExternalCutOffTime.TOColumnMap={END_TIME=END_TIME}
getExternalCutOffTime.OutputType=java.util.ArrayList
getExternalCutOffTime.StmtType=Statement

getExternalMinAmount.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=501
getExternalMinAmount.TOColumnMap={VAL=VAL}
getExternalMinAmount.OutputType=java.util.ArrayList
getExternalMinAmount.StmtType=Statement

getExtAcctMaxAttmpsPrmtr.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=710
getExtAcctMaxAttmpsPrmtr.TOColumnMap={VAL=VAL}
getExtAcctMaxAttmpsPrmtr.OutputType=java.util.ArrayList
getExtAcctMaxAttmpsPrmtr.StmtType=Statement

getConfigParameterValues.Query=SELECT * FROM APP_CONFIG_PARAM
getConfigParameterValues.TOColumnMap ={PARAMETERNAME=PARAMETERNAME,DESCRIPTION=DESCRIPTION,PARAMETERVALUE=PARAMETERVALUE,CREATEDBY=CREATEDBY,CREATEDDATE=CREATEDDATE,MODIFIEDBY=MODIFIEDBY,MODIFIEDDATE=MODIFIEDDATE,VERSIONNUM=VERSIONNUM}
getConfigParameterValues.OutputType=java.util.ArrayList
getConfigParameterValues.StmtType=Statement

getInternalBsnsDaysForApproval.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=854
getInternalBsnsDaysForApproval.TOColumnMap={VAL=VAL}
getInternalBsnsDaysForApproval.OutputType=java.util.ArrayList
getInternalBsnsDaysForApproval.StmtType=Statement

getTxnExpiryPeriod.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=854
getTxnExpiryPeriod.TOColumnMap={VAL=VAL}
getTxnExpiryPeriod.OutputType=java.util.ArrayList
getTxnExpiryPeriod.StmtType=Statement

getACHTxnSettlePeriod.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=715
getACHTxnSettlePeriod.TOColumnMap={VAL=VAL}
getACHTxnSettlePeriod.OutputType=java.util.ArrayList
getACHTxnSettlePeriod.StmtType=Statement

getFutrDtNotDays.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=700
getFutrDtNotDays.TOColumnMap={VAL=VAL}
getFutrDtNotDays.OutputType=java.util.ArrayList
getFutrDtNotDays.StmtType=Statement

getExtAccntExpiryNotDays.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=701
getExtAccntExpiryNotDays.TOColumnMap={VAL=VAL}
getExtAccntExpiryNotDays.OutputType=java.util.ArrayList
getExtAccntExpiryNotDays.StmtType=Statement

getMaxAttemptsToAddAccnt.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=710
getMaxAttemptsToAddAccnt.TOColumnMap={VAL=VAL}
getMaxAttemptsToAddAccnt.OutputType=java.util.ArrayList
getMaxAttemptsToAddAccnt.StmtType=Statement

getMaxFtrDts.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=714
getMaxFtrDts.TOColumnMap={VAL=VAL}
getMaxFtrDts.OutputType=java.util.ArrayList
getMaxFtrDts.StmtType=Statement

getACHTxnDays.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=715
getACHTxnDays.TOColumnMap={VAL=VAL}
getACHTxnDays.OutputType=java.util.ArrayList
getACHTxnDays.StmtType=Statement

getContactNumber.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=853
getContactNumber.TOColumnMap={VAL=VAL}
getContactNumber.OutputType=java.util.ArrayList
getContactNumber.StmtType=Statement

getIntAccForTrialDeposit.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=852
getIntAccForTrialDeposit.TOColumnMap={VAL=VAL}
getIntAccForTrialDeposit.OutputType=java.util.ArrayList
getIntAccForTrialDeposit.StmtType=Statement

setTranasactionEnrichment.Query=insert into TRANSACTION_ENRICHMENT (txn_Pos_Num,keyAcct,acct_DrCrInd,enrichment_Ind,fa_id,office_id,account_num) values(#txn_Pos_Num:varchar#,#keyAcct:varchar#,#acct_DrCrInd:numeric#,#enrichment_Ind:numeric#,#fa_id:varchar#,#office_id:varchar#,#account_num:varchar#)
setTranasactionEnrichment.StmtType=PreparedStatement

verifyMSAccountDAP.Query=select ACCOUNT_NO,KEY_ACCOUNT_NO from SSO_ACCOUNT_PROPERTIES where lifeuserid=#life_user_id:varchar#
verifyMSAccountDAP.TOColumnMap={ACCOUNT_NO=ACCOUNT_NO,KEY_ACCOUNT_NO=KEY_ACCOUNT_NO}
verifyMSAccountDAP.OutputType=java.util.ArrayList
verifyMSAccountDAP.StmtType=PreparedStatement

verifyExtAccountOwner.Query=select count(*) as count from ds_payee_ref where cpypayeeid=#external_ref_id:varchar# and key_client=#key_client_id:varchar#
verifyExtAccountOwner.TOColumnMap={count=count}
verifyExtAccountOwner.OutputType=java.util.ArrayList
verifyExtAccountOwner.StmtType=Statement

verifyExtAccountDAP.Query=select count(*) as count from ds_payee_ref where cpystatus='32' and cpypayeeid=#external_ref_id:varchar#
verifyExtAccountDAP.TOColumnMap={count=count}
verifyExtAccountDAP.OutputType=java.util.ArrayList
verifyExtAccountDAP.StmtType=PreparedStatement

verifySuspedExtAccDAP.Query=select count(*) as count from ds_payee_ref where cpystatus='36' and cpypayeeid=#external_ref_id:varchar#
verifySuspedExtAccDAP.TOColumnMap={count=count}
verifySuspedExtAccDAP.OutputType=java.util.ArrayList
verifySuspedExtAccDAP.StmtType=PreparedStatement

getTxnVersionNum.Query=select versionnum from ds_pay_txns where paypayref=#txnReferenceId:varchar# and paybatchref=#txnBatchRefId:varchar#
getTxnVersionNum.TOColumnMap={versionnum=versionnum}
getTxnVersionNum.OutputType=com.tcs.ebw.payments.transferobject.VersionChkOutDtls
getTxnVersionNum.StmtType=PreparedStatement

getAccVersionNum.Query=select versionnum from ds_payee_ref where cpypayeeid=#accReferenceId:varchar# and cpyaccnum=#accRefNumber:varchar#
getAccVersionNum.TOColumnMap={versionnum=versionnum}
getAccVersionNum.OutputType=com.tcs.ebw.payments.transferobject.VersionChkOutDtls
getAccVersionNum.StmtType=PreparedStatement

getValidTxnStatus.Query=select input_status from ds_status_consistency where event_name=#event_name:varchar# and application_id=#application_id:varchar#
getValidTxnStatus.TOColumnMap={input_status=input_status}
getValidTxnStatus.OutputType=java.util.ArrayList
getValidTxnStatus.StmtType=PreparedStatement

getBatchVersionNum.Query=select batversionnum from ds_batch where batbatchref=#txnBatchRefId:varchar#
getBatchVersionNum.TOColumnMap={batversionnum=batversionnum}
getBatchVersionNum.OutputType=com.tcs.ebw.payments.transferobject.VersionChkOutDtls
getBatchVersionNum.StmtType=PreparedStatement

getParentTxnVersionNum.Query=select txn_parent_ver as txnversionnum from txn_parent tp,ds_pay_txns dt where dt.paypayref=#txnReferenceId:varchar# and dt.par_txn_no=tp.par_txn_no
getParentTxnVersionNum.TOColumnMap={txnversionnum=txnversionnum}
getParentTxnVersionNum.OutputType=com.tcs.ebw.payments.transferobject.VersionChkOutDtls
getParentTxnVersionNum.StmtType=PreparedStatement

updateRecParentConfNo.Query=update TXN_PARENT set txn_parent_ver=txn_parent_ver+1,next_txn_id=#next_txn_id:varchar#,par_txn_confno=#par_txn_confno:varchar# where par_txn_no=#par_txn_no:numeric#
updateRecParentConfNo.StmtType=PreparedStatement

getTxnStatus.Query=select payccsstatuscode as txn_status from ds_pay_txns where paypayref=#paypayref:varchar# and paybatchref=#paybatchref:varchar#
getTxnStatus.TOColumnMap={txn_status=txn_status}
getTxnStatus.OutputType=com.tcs.ebw.payments.transferobject.GetTransactionStatus
getTxnStatus.StmtType=PreparedStatement

updateTransitionDate.Query=update DS_PAY_TXNS set requested_exe_dt=#requested_exe_dt:timestamp# where PAYPAYREF=#paypayref:varchar#
updateTransitionDate.StmtType=PreparedStatement

getPayConfirmationId.Query=select nextval for paypayref_seq as clientTransactionID from sysibm.sysdummy1
getPayConfirmationId.TOColumnMap={clientTransactionID=clientTransactionID}
getPayConfirmationId.OutputType=java.util.ArrayList
getPayConfirmationId.StmtType=PreparedStatement

uuidCompare.Query=select uuid from CLIENT_SECURITY where SESSIONID=#sessionId:varchar# and SECUREID=#securityTokenId:varchar#
uuidCompare.TOColumnMap={uuid=uuid}
uuidCompare.OutputType=com.tcs.ebw.transferobject.SecurityCheckTO
uuidCompare.StmtType=Statement

deleteMMSessionEntry.Query=delete from CLIENT_SECURITY where SESSIONID=#sessionId:varchar# and SECUREID=#securityTokenId:varchar#
deleteMMSessionEntry.StmtType=PreparedStatement

updateRTABookedInFlag.Query=update ds_pay_txns set rta_booked_in_flag=#rta_booked_in_flag:varchar# where paypayref=#paypayref:varchar#
updateRTABookedInFlag.StmtType=PreparedStatement

getBusRuleCntrlUserID.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=860
getBusRuleCntrlUserID.TOColumnMap={VAL=VAL}
getBusRuleCntrlUserID.OutputType=java.util.ArrayList
getBusRuleCntrlUserID.StmtType=Statement

getBusRuleCntrlAppID.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=861
getBusRuleCntrlAppID.TOColumnMap={VAL=VAL}
getBusRuleCntrlAppID.OutputType=java.util.ArrayList
getBusRuleCntrlAppID.StmtType=Statement

getBusRuleCntrlServerID.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=862
getBusRuleCntrlServerID.TOColumnMap={VAL=VAL}
getBusRuleCntrlServerID.OutputType=java.util.ArrayList
getBusRuleCntrlServerID.StmtType=Statement

getAcntViewUserID.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=863
getAcntViewUserID.TOColumnMap={VAL=VAL}
getAcntViewUserID.OutputType=java.util.ArrayList
getAcntViewUserID.StmtType=Statement

getAcntViewAppID.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=864
getAcntViewAppID.TOColumnMap={VAL=VAL}
getAcntViewAppID.OutputType=java.util.ArrayList
getAcntViewAppID.StmtType=Statement

getAcntViewAuthAppID.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=865
getAcntViewAuthAppID.TOColumnMap={VAL=VAL}
getAcntViewAuthAppID.OutputType=java.util.ArrayList
getAcntViewAuthAppID.StmtType=Statement

getAcntViewAuthVerb.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=866
getAcntViewAuthVerb.TOColumnMap={VAL=VAL}
getAcntViewAuthVerb.OutputType=java.util.ArrayList
getAcntViewAuthVerb.StmtType=Statement

getAcntViewWebServerID.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=867
getAcntViewWebServerID.TOColumnMap={VAL=VAL}
getAcntViewWebServerID.OutputType=java.util.ArrayList
getAcntViewWebServerID.StmtType=Statement

getRTABUserID.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=868
getRTABUserID.TOColumnMap={VAL=VAL}
getRTABUserID.OutputType=java.util.ArrayList
getRTABUserID.StmtType=Statement

getAcntPlatingUserID.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=869
getAcntPlatingUserID.TOColumnMap={VAL=VAL}
getAcntPlatingUserID.OutputType=java.util.ArrayList
getAcntPlatingUserID.StmtType=Statement

getAcntPlatingAppID.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=870
getAcntPlatingAppID.TOColumnMap={VAL=VAL}
getAcntPlatingAppID.OutputType=java.util.ArrayList
getAcntPlatingAppID.StmtType=Statement

getAcntPlatingServerIP.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=871
getAcntPlatingServerIP.TOColumnMap={VAL=VAL}
getAcntPlatingServerIP.OutputType=java.util.ArrayList
getAcntPlatingServerIP.StmtType=Statement

verifyExtAccRoutingNum.Query=select count(*) as count from ds_bank_ref where bnkcode=#external_routing_num:varchar#
verifyExtAccRoutingNum.TOColumnMap={count=count}
verifyExtAccRoutingNum.OutputType=java.util.ArrayList
verifyExtAccRoutingNum.StmtType=Statement

getInternalMinAmount.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=893
getInternalMinAmount.TOColumnMap={VAL=VAL}
getInternalMinAmount.OutputType=java.util.ArrayList
getInternalMinAmount.StmtType=Statement

getInternalMaxAmount.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=894
getInternalMaxAmount.TOColumnMap={VAL=VAL}
getInternalMaxAmount.OutputType=java.util.ArrayList
getInternalMaxAmount.StmtType=Statement

getExternalMaxAmount.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=895
getExternalMaxAmount.TOColumnMap={VAL=VAL}
getExternalMaxAmount.OutputType=java.util.ArrayList
getExternalMaxAmount.StmtType=Statement

getMaxUntilDollarLimit.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=897
getMaxUntilDollarLimit.TOColumnMap={VAL=VAL}
getMaxUntilDollarLimit.OutputType=java.util.ArrayList
getMaxUntilDollarLimit.StmtType=Statement

verifyAccountLink.Query=select count(*) as count from ext_account_link where ext_reference_id=#ext_reference_id:varchar# and int_key_account_no=#int_key_account_no:varchar#
verifyAccountLink.TOColumnMap={count=count}
verifyAccountLink.OutputType=java.util.ArrayList
verifyAccountLink.StmtType=PreparedStatement

createAccountLink.Query=insert into ext_account_link (ext_reference_id,int_key_account_no,int_office,int_fa,int_account,approver_name,approver_id,confirmation_date) values(#ext_reference_id:varchar#,#int_key_account_no:varchar#,#int_office:varchar#,#int_fa:varchar#,#int_account:varchar#,#approver_name:varchar#,#approver_id:varchar#,#confirmation_date:timestamp#)
createAccountLink.StmtType=PreparedStatement

resetApprovalInfo.Query=update ds_pay_txns set versionnum=versionnum+1,paytxneprydate=#paytxneprydate:timestamp#,next_approver_role=#next_approver_role:varchar# where paypayref=#paypayref:varchar#
resetApprovalInfo.StmtType=PreparedStatement

getRSATxnTypes.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=902
getRSATxnTypes.TOColumnMap={VAL=VAL}
getRSATxnTypes.OutputType=java.util.ArrayList
getRSATxnTypes.StmtType=Statement

updateRecParentTxnDate.Query=update txn_parent set txn_parent_ver=txn_parent_ver+1,par_txn_request_dt=#par_txn_request_dt:timestamp# where par_txn_no=#par_txn_no:numeric#
updateRecParentTxnDate.StmtType=PreparedStatement


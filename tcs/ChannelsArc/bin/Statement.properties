#This property file will be used to map the query to a key
###############################################################################
#.Query will have the query to be executed
###############################################################################
#.TOColumnMap will have the mappings between Table Columns and the TO Variables
#.InputType will specify the inputType to be supplied to the where clause 
#incase of Select, Update and Delete query statements
#and values clause incase of Insert Query statement

###############################################################################
#.OutputType will specify the outputType expected after the execution 
#of query specially framed for Select Query Statements
###############################################################################

############## Client Serv Related Quiries #######################

getDomainValues.Query=SELECT distinct dmndomain||'~'||dmndomainval,dmndomainvaldesc FROM ds_domains
getDomainValues.TOColumnMap={dmndomain=dmndomain,dmndomainvaldesc=dmndomainvaldesc}
getDomainValues.OutputType=java.util.HashMap
getDomainValues.StmtType=Statement

#Pending Transfer List Starts

getFrequencyValues.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_FrequencyValue'
getFrequencyValues.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getFrequencyValues.OutputType=java.util.Vector

getStatusValues.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_StatusCode' and dmndomainval in ('2','6', '46')
getStatusValues.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getStatusValues.OutputType=java.util.Vector

getPendingTransfersLIST_page.Query=select versionnum,REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM, PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,txn_type,EDITLINK,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select txn_data1.versionnum ,txn_data1.REQUESTED_EXE_DT ,txn_data1.PAYFREQUENCYDESC , txn_data1.PAYDEBITACCNUM ,case when txn_data1.KEYACCOUNTNUMBER_TO = B.KEY_ACCOUNT_NO then COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) when txn_data1.KEYACCOUNTNUMBER_TO is null then txn_data1.PAYPAYEENAME1 when txn_data1.txn_type='INT' then concat('XXX-',RIGHT(TXN_DATA1.PAYPAYEEACCNUM,4)) else concat('XXX-',RIGHT(TXN_DATA1.tempdebit,4)) end  as PAYPAYEEACCNUM, txn_data1.PAYPAYREF ,txn_data1.PAYDEBITAMT ,txn_data1.txn_type,txn_data1.status,txn_data1.EDITLINK,txn_data1.PAYTYPECODE ,txn_data1.PAYBATCHREF from(select txn_data.versionnum,txn_data.REQUESTED_EXE_DT,txn_data.PAYFREQUENCYDESC,case when txn_data.KEYACCOUNTNUMBER_from = A.KEY_ACCOUNT_NO then cOALESCE(A.NICK_NAME,A.FRIENDLY_NAME) when TXN_DATA.KEYACCOUNTNUMBER_from is null then TXN_DATA.PAYPAYEENAME1 else CONCAT('XXX-',right(TXN_DATA.PAYDEBITACCNUM,4)) END as PAYDEBITACCNUM,txn_data.PAYPAYEEACCNUM,txn_data.tempdebit,txn_data.PAYPAYEENAME1,txn_data.KEYACCOUNTNUMBER_TO,txn_data.txn_type,  txn_data.PAYPAYREF,txn_data.PAYDEBITAMT,txn_data.status,'Edit,View,Cancel' as EDITLINK,txn_data.PAYTYPECODE,txn_data.PAYBATCHREF,txn_data.life_user_id from (select dpt.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,dpt.paydebitaccnum as tempdebit,PAYPAYEENAME1,DPT.KEYACCOUNTNUMBER_TO ,DPT.KEYACCOUNTNUMBER_FROM,dpt.LIFE_USER_ID  ,dpt.txn_type ,CAST(PAYPAYREF AS BIGINT) as PAYPAYREF,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,PAYTYPECODE,PAYBATCHREF   from DS_PAY_TXNS DPT WHERE dpt.LIFE_USER_ID=#lifeUserId:varchar# and TRIAL_DEPO='N'  and  (DPT.payccsstatuscode in ('2','6') or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT)> CURRENT DATE))) as txn_data left outer join sso_account_properties A on txn_data.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and txn_data.LIFE_USER_ID=a.LIFEUSERID ) as txn_data1 left outer join sso_account_properties B on txn_data1.KEYACCOUNTNUMBER_TO =b.KEY_ACCOUNT_NO and txn_data1.LIFE_USER_ID=b.LIFEUSERID #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only
getPendingTransfersLIST_page.TOColumnMap={versionnum=versionnum,REQUESTED_EXE_DT=REQUESTED_EXE_DT,PAYFREQUENCYDESC=PAYFREQUENCYDESC,PAYDEBITACCNUM=PAYDEBITACCNUM,PAYPAYEEACCNUM=PAYPAYEEACCNUM,PAYPAYREF=PAYPAYREF,PAYDEBITAMT=PAYDEBITAMT,STATUS=STATUS,txn_type=txn_type,EDITLINK=EDITLINK,PAYTYPECODE=PAYTYPECODE,PAYBATCHREF=PAYBATCHREF,total_rows=total_rows}
getPendingTransfersLIST_page.OutputType=java.util.ArrayList
getPendingTransfersLIST.StmtType=PreparedStatement
getPendingTransfersLIST.PgnUniqueKeys=REQUESTED_EXE_DT:Date:ASC#PAYPAYREF:numeric:ASC
getPendingTransfersLIST.SortKeys=REQUESTED_EXE_DT:Date:ASC#PAYPAYREF:numeric:ASC

getSearchPaymentsLIST_page.Query=select versionnum,REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM, PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,txn_type,EDITLINK,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select txn_data1.versionnum ,txn_data1.REQUESTED_EXE_DT ,txn_data1.PAYFREQUENCYDESC , txn_data1.PAYDEBITACCNUM ,case when txn_data1.KEYACCOUNTNUMBER_TO = B.KEY_ACCOUNT_NO then COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) when txn_data1.KEYACCOUNTNUMBER_TO is null then txn_data1.PAYPAYEENAME1 when txn_data1.txn_type='INT' then concat('XXX-',RIGHT(TXN_DATA1.PAYPAYEEACCNUM,4)) else concat('XXX-',RIGHT(TXN_DATA1.tempdebit,4)) end  as PAYPAYEEACCNUM, txn_data1.PAYPAYREF,txn_data1.PAYPAYREF1 ,txn_data1.PAYDEBITAMT ,txn_data1.status,txn_data1.txn_type,txn_data1.EDITLINK,txn_data1.PAYTYPECODE ,txn_data1.PAYBATCHREF from(select txn_data.versionnum,txn_data.REQUESTED_EXE_DT,txn_data.PAYFREQUENCYDESC,case when txn_data.KEYACCOUNTNUMBER_from = A.KEY_ACCOUNT_NO then cOALESCE(A.NICK_NAME,A.FRIENDLY_NAME) when TXN_DATA.KEYACCOUNTNUMBER_from is null then TXN_DATA.PAYPAYEENAME1 else CONCAT('XXX-',right(TXN_DATA.PAYDEBITACCNUM,4)) END as PAYDEBITACCNUM,txn_data.PAYPAYEEACCNUM,txn_data.tempdebit,txn_data.PAYPAYEENAME1,txn_data.KEYACCOUNTNUMBER_TO,txn_data.txn_type,  txn_data.PAYPAYREF,txn_data.PAYPAYREF1,txn_data.payccsstatuscode,txn_data.PAYRECURRING,txn_data.PAYDEBITAMT,txn_data.status,'Edit,View,Cancel' as EDITLINK,txn_data.PAYTYPECODE,txn_data.PAYBATCHREF,txn_data.life_user_id from (select dpt.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,dpt.paydebitaccnum as tempdebit,PAYPAYEENAME1,DPT.KEYACCOUNTNUMBER_TO ,DPT.KEYACCOUNTNUMBER_FROM,dpt.LIFE_USER_ID  ,dpt.txn_type ,CAST(PAYPAYREF as bigint) as PAYPAYREF,PAYPAYREF as PAYPAYREF1 ,payccsstatuscode,PAYRECURRING,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,PAYTYPECODE,PAYBATCHREF   from DS_PAY_TXNS DPT WHERE dpt.LIFE_USER_ID=#lifeUserId:varchar# and TRIAL_DEPO='N'  and  (DPT.payccsstatuscode in ('2','6') or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT)> CURRENT DATE))) as txn_data left outer join sso_account_properties A on txn_data.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and txn_data.LIFE_USER_ID=a.LIFEUSERID ) as txn_data1 left outer join sso_account_properties B on txn_data1.KEYACCOUNTNUMBER_TO =b.KEY_ACCOUNT_NO and txn_data1.LIFE_USER_ID=b.LIFEUSERID  where DATE(txn_data1.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND ( UPPER(B.NICK_NAME) like #accountNo:varchar# OR UPPER(B.FRIENDLY_NAME) like  #accountNo:varchar# OR UPPER(B.ACCOUNT_NO) like #accountNo:varchar# OR UPPER(txn_data1.PAYPAYEENAME1) like  #accountNo:varchar# )  AND txn_data1.paydebitamt BETWEEN (#minAmount:numeric#) AND (#maxAmount:numeric#) AND txn_data1.PAYPAYREF1 like #confirmationNo:varchar# AND txn_data1.payccsstatuscode like #status:varchar# AND (txn_data1.payccsstatuscode in ('2','6') or (txn_data1.PAYCCSSTATUSCODE='46' and date(txn_data1.REQUESTED_EXE_DT) > CURRENT DATE)) AND txn_data1.PAYRECURRING like #frequency:varchar# #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only
getSearchPaymentsLIST_page.TOColumnMap={versionnum=versionnum,REQUESTED_EXE_DT=REQUESTED_EXE_DT,PAYFREQUENCYDESC=PAYFREQUENCYDESC,PAYDEBITACCNUM=PAYDEBITACCNUM,PAYPAYEEACCNUM=PAYPAYEEACCNUM,PAYPAYREF=PAYPAYREF,PAYDEBITAMT=PAYDEBITAMT,STATUS=STATUS,txn_type=txn_type,EDITLINK=EDITLINK,PAYTYPECODE=PAYTYPECODE,PAYBATCHREF=PAYBATCHREF,total_rows=total_rows}
getSearchPaymentsLIST_page.OutputType=java.util.ArrayList
getSearchPaymentsLIST.StmtType=PreparedStatement
getSearchPaymentsLIST.PgnUniqueKeys=REQUESTED_EXE_DT:Date:ASC#PAYPAYREF:numeric:ASC
getSearchPaymentsLIST.SortKeys=REQUESTED_EXE_DT:Date:ASC#PAYPAYREF:numeric:ASC

#Pending Transfer List Ends

#Transfer History List Starts

getTransferHistoryStatusValues.Query=select dmndomainval,dmndomainvaldesc from  ds_domains where dmndomain='D_StatusCode' and dmndomainval in ('4','44','20','46','48')
getTransferHistoryStatusValues.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getTransferHistoryStatusValues.OutputType=java.util.Vector

getTransferHistoryLIST_page.Query=select versionnum,REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM, PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,action,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select txn_data1.versionnum ,txn_data1.REQUESTED_EXE_DT ,txn_data1.PAYFREQUENCYDESC , txn_data1.PAYDEBITACCNUM ,case when txn_data1.KEYACCOUNTNUMBER_TO = B.KEY_ACCOUNT_NO then COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) when txn_data1.KEYACCOUNTNUMBER_TO is null then txn_data1.PAYPAYEENAME1 when txn_data1.txn_type='INT' then concat('XXX-',RIGHT(TXN_DATA1.PAYPAYEEACCNUM,4)) else concat('XXX-',RIGHT(TXN_DATA1.tempdebit,4)) end  as PAYPAYEEACCNUM,  txn_data1.PAYPAYREF, txn_data1.PAYDEBITAMT ,txn_data1.status,txn_data1.action,txn_data1.PAYTYPECODE ,txn_data1.PAYBATCHREF  from(select txn_data.versionnum,txn_data.REQUESTED_EXE_DT,txn_data.PAYFREQUENCYDESC,case when txn_data.KEYACCOUNTNUMBER_from = A.KEY_ACCOUNT_NO then cOALESCE(A.NICK_NAME,A.FRIENDLY_NAME) when TXN_DATA.KEYACCOUNTNUMBER_from is null then TXN_DATA.PAYPAYEENAME1 else CONCAT('XXX-',right(TXN_DATA.PAYDEBITACCNUM,4)) END as PAYDEBITACCNUM,txn_data.PAYPAYEEACCNUM,txn_data.tempdebit,txn_data.PAYPAYEENAME1,txn_data.KEYACCOUNTNUMBER_TO,  txn_data.txn_type,txn_data.PAYPAYREF,txn_data.PAYDEBITAMT,txn_data.status,'View' as ACTION,txn_data.PAYTYPECODE,txn_data.PAYBATCHREF,txn_data.life_user_id from (select dpt.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,dpt.paydebitaccnum as tempdebit,PAYPAYEENAME1,DPT.KEYACCOUNTNUMBER_TO ,DPT.KEYACCOUNTNUMBER_FROM,dpt.LIFE_USER_ID ,dpt.txn_type ,CAST(PAYPAYREF AS BIGINT) as PAYPAYREF,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,PAYTYPECODE,PAYBATCHREF   from DS_PAY_TXNS DPT WHERE dpt.LIFE_USER_ID=#lifeUserId:varchar# and TRIAL_DEPO='N' and  (DPT.PAYCCSSTATUSCODE in ('4','44','20','48','50','52')  or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT) <= CURRENT DATE))) as txn_data left outer join sso_account_properties A on txn_data.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and txn_data.LIFE_USER_ID=a.LIFEUSERID ) as txn_data1 left outer join sso_account_properties B on txn_data1.KEYACCOUNTNUMBER_TO =b.KEY_ACCOUNT_NO and txn_data1.LIFE_USER_ID=b.LIFEUSERID  #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
getTransferHistoryLIST_page.TOColumnMap={versionnum=versionnum,REQUESTED_EXE_DT=REQUESTED_EXE_DT,PAYFREQUENCYDESC=PAYFREQUENCYDESC,PAYDEBITACCNUM=PAYDEBITACCNUM,PAYPAYEEACCNUM=PAYPAYEEACCNUM,PAYPAYREF=PAYPAYREF,PAYDEBITAMT=PAYDEBITAMT,STATUS=STATUS,ACTION=ACTION,PAYTYPECODE=PAYTYPECODE,PAYBATCHREF=PAYBATCHREF,total_rows=total_rows}
getTransferHistoryLIST_page.OutputType=java.util.ArrayList
getTransferHistoryLIST.StmtType=PreparedStatement
getTransferHistoryLIST.PgnUniqueKeys=REQUESTED_EXE_DT:Date:DESC#PAYPAYREF:numeric:DESC
getTransferHistoryLIST.SortKeys=REQUESTED_EXE_DT:Date:DESC#PAYPAYREF:numeric:DESC

getSearchTransferHistoryLIST_page.Query=select versionnum,REQUESTED_EXE_DT,PAYFREQUENCYDESC,PAYDEBITACCNUM, PAYPAYEEACCNUM,PAYPAYREF,PAYDEBITAMT,STATUS,action,PAYTYPECODE,PAYBATCHREF,count(*) over() total_rows from (select txn_data1.versionnum ,txn_data1.REQUESTED_EXE_DT ,txn_data1.PAYFREQUENCYDESC , txn_data1.PAYDEBITACCNUM ,case when txn_data1.KEYACCOUNTNUMBER_TO = B.KEY_ACCOUNT_NO then COALESCE(B.NICK_NAME,B.FRIENDLY_NAME) when txn_data1.KEYACCOUNTNUMBER_TO is null then txn_data1.PAYPAYEENAME1 when txn_data1.txn_type='INT' then concat('XXX-',RIGHT(TXN_DATA1.PAYPAYEEACCNUM,4)) else concat('XXX-',RIGHT(TXN_DATA1.tempdebit,4)) end  as PAYPAYEEACCNUM,  txn_data1.PAYPAYREF,txn_data1.PAYPAYREF1, txn_data1.PAYDEBITAMT ,txn_data1.status,txn_data1.action,txn_data1.PAYTYPECODE ,txn_data1.PAYBATCHREF  from(select txn_data.versionnum,txn_data.REQUESTED_EXE_DT,txn_data.PAYFREQUENCYDESC,case when txn_data.KEYACCOUNTNUMBER_from = A.KEY_ACCOUNT_NO then cOALESCE(A.NICK_NAME,A.FRIENDLY_NAME) when TXN_DATA.KEYACCOUNTNUMBER_from is null then TXN_DATA.PAYPAYEENAME1 else CONCAT('XXX-',right(TXN_DATA.PAYDEBITACCNUM,4)) END as PAYDEBITACCNUM,txn_data.PAYPAYEEACCNUM,txn_data.tempdebit,txn_data.payccsstatuscode,txn_data.PAYPAYEENAME1,txn_data.KEYACCOUNTNUMBER_TO,  txn_data.txn_type,txn_data.PAYPAYREF,txn_data.PAYPAYREF1,txn_data.PAYRECURRING,txn_data.PAYDEBITAMT,txn_data.status,'View' as ACTION,txn_data.PAYTYPECODE,txn_data.PAYBATCHREF,txn_data.life_user_id from (select dpt.versionnum,REQUESTED_EXE_DT,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS PAYFREQUENCYDESC,PAYDEBITACCNUM,PAYPAYEEACCNUM,dpt.paydebitaccnum as tempdebit,payccsstatuscode,PAYPAYEENAME1,DPT.KEYACCOUNTNUMBER_TO ,DPT.KEYACCOUNTNUMBER_FROM,dpt.LIFE_USER_ID ,dpt.txn_type ,cast(PAYPAYREF as bigint) as PAYPAYREF,PAYPAYREF as PAYPAYREF1,PAYRECURRING,PAYDEBITAMT,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as STATUS,PAYTYPECODE,PAYBATCHREF   from DS_PAY_TXNS DPT WHERE dpt.LIFE_USER_ID=#lifeUserId:varchar# and TRIAL_DEPO='N' and  (DPT.PAYCCSSTATUSCODE in ('4','44','20','48','50','52')  or (DPT.PAYCCSSTATUSCODE='46' and date(DPT.REQUESTED_EXE_DT) <= CURRENT DATE))) as txn_data left outer join sso_account_properties A on txn_data.KEYACCOUNTNUMBER_FROM=A.KEY_ACCOUNT_NO and txn_data.LIFE_USER_ID=a.LIFEUSERID ) as txn_data1 left outer join sso_account_properties B on txn_data1.KEYACCOUNTNUMBER_TO =b.KEY_ACCOUNT_NO and txn_data1.LIFE_USER_ID=b.LIFEUSERID where DATE(txn_data1.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND txn_data1.paydebitamt BETWEEN (#minAmount:numeric#) AND (#maxAmount:numeric#) AND (  UPPER(B.NICK_NAME) like #accountNo:varchar# OR  UPPER(B.FRIENDLY_NAME) like  #accountNo:varchar# OR UPPER(B.ACCOUNT_NO) like #accountNo:varchar#  OR UPPER(txn_data1.PAYPAYEENAME1) like #accountNo:varchar# ) AND txn_data1.PAYPAYREF1 like #confirmationNo:varchar# AND txn_data1.payccsstatuscode in (#statusArr:varchar#) AND (txn_data1.payccsstatuscode in ('4','44','20','48','50','52') or (txn_data1.PAYCCSSTATUSCODE='46' and date(txn_data1.REQUESTED_EXE_DT) <= CURRENT DATE)) AND txn_data1.PAYRECURRING like #frequency:varchar# #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
getSearchTransferHistoryLIST_page.TOColumnMap={versionnum=versionnum,REQUESTED_EXE_DT=REQUESTED_EXE_DT,PAYFREQUENCYDESC=PAYFREQUENCYDESC,PAYDEBITACCNUM=PAYDEBITACCNUM,PAYPAYEEACCNUM=PAYPAYEEACCNUM,PAYPAYREF=PAYPAYREF,PAYDEBITAMT=PAYDEBITAMT,STATUS=STATUS,ACTION=ACTION,PAYTYPECODE=PAYTYPECODE,PAYBATCHREF=PAYBATCHREF,total_rows=total_rows}
getSearchTransferHistoryLIST_page.OutputType=java.util.ArrayList
getSearchTransferHistoryLIST.StmtType=PreparedStatement
getSearchTransferHistoryLIST.PgnUniqueKeys=REQUESTED_EXE_DT:Date:DESC#PAYPAYREF:numeric:DESC
getSearchTransferHistoryLIST.SortKeys=REQUESTED_EXE_DT:Date:DESC#PAYPAYREF:numeric:DESC

#Transfer History List Ends

#Add External Account Starts

getExtBankName.Query=select distinct BNKDES,BNKCODE from DS_BANK_REF where bnkcode=#bnkcode:varchar# and deleteflag='N'
getExtBankName.TOColumnMap={bnkdes=bnkdes,bnkcode=bnkcode}
getExtBankName.OutputType=com.tcs.ebw.payments.transferobject.DsBankRefTO[]
getExtBankName.StmtType=PreparedStatement

getExtAcctType.Query=select dmndomainvaldesc,dmndomainvaldesc from ds_domains where dmndomain='D_ExtAcctType'
getExtAcctType.TOColumnMap={dmndomainvaldesc=dmndomainvaldesc,dmndomainvaldesc=dmndomainvaldesc}
getExtAcctType.OutputType=java.util.Vector
getExtAcctType.StmtType=PreparedStatement

#getNewExtAcctType.Query=select dmndomainvaldesc,dmndomainvaldesc from ds_domains where dmndomain='D_NewExtAcctType'
#getNewExtAcctType.TOColumnMap={dmndomainvaldesc=dmndomainvaldesc,dmndomainvaldesc=dmndomainvaldesc}
#getNewExtAcctType.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_NewExtAcctType'

getNewExtAcctType.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_NewExtAcctType' order by sort_ord
getNewExtAcctType.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getNewExtAcctType.OutputType=java.util.Vector
getNewExtAcctType.StmtType=PreparedStatement

#setBeneficiary.Query=Insert into ds_payee_ref(cpygrpid,cpypayeeid,cpypayeerefno,cpypayeename1,cpyaccnum,cpyacctype,cpyboname1,cpybankcode,createdby,createddate,modifiedby,modifieddate,deleteflag,cpystatus,life_user_id,ver_trials,cpybranchscode) values (#cpygrpid:varchar#,#cpypayeeid:varchar#,#cpypayeerefno:varchar#,#cpypayeename1:varchar#,#cpyaccnum:varchar#,#cpyacctype:varchar#,#cpyboname1:varchar#,#cpybankcode:varchar#,#createdby:varchar#,CURRENT_TIMESTAMP,#modifiedby:varchar#,CURRENT_TIMESTAMP,#deleteflag:varchar#,#cpystatus:varchar#,#life_user_id:varchar#,#ver_trials:numeric#,#cpybranchscode:varchar#)
#setBeneficiary.Query=Insert into ds_payee_ref(cpygrpid,cpypayeeid,cpypayeerefno,cpypayeename1,cpyaccnum,cpyacctype,cpyboname1,cpybankcode,createdby,createddate,modifiedby,modifieddate,deleteflag,cpystatus,key_client_id,ver_trials,cpybranchscode,sign_up_mode,account_owner,account_form,voided_check) values (#cpygrpid:varchar#,#cpypayeeid:varchar#,#cpypayeerefno:varchar#,#cpypayeename1:varchar#,#cpyaccnum:varchar#,#cpyacctype:varchar#,#cpyboname1:varchar#,#cpybankcode:varchar#,#createdby:varchar#,CURRENT_TIMESTAMP,#modifiedby:varchar#,CURRENT_TIMESTAMP,#deleteflag:varchar#,#cpystatus:varchar#,#key_client_id:varchar#,#ver_trials:numeric#,#cpybranchscode:varchar#,#sign_up_mode:varchar#,#account_owner:varchar#,#account_form:varchar#,#voided_check:varchar#)
#setBeneficiary.StmtType=PreparedStatement
#setBeneficiaryLog.Query=insert into ds_payee_ref_log (cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,52,23,CURRENT_TIMESTAMP,#created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,#ver_trials:numeric#,#cpystatus:varchar#,#deleteflag:varchar#)
#setBeneficiaryLog.Query=insert into ds_payee_ref_log (cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,key_client_id,ver_trials,cpystatus,deleteflag,sign_up_mode,account_owner,account_form,voided_check) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,52,23,CURRENT_TIMESTAMP,#created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#key_client_id:varchar#,#ver_trials:numeric#,#cpystatus:varchar#,#deleteflag:varchar#,#sign_up_mode:varchar#,#account_owner:varchar#,#account_form:varchar#,#voided_check:varchar#)
#setBeneficiaryLog.StmtType=PreparedStatement
#setBeneficiary.Query=Insert into ds_payee_ref(cpygrpid,cpypayeeid,cpypayeerefno,cpypayeename1,cpyaccnum,cpyacctype,cpyboname1,cpybankcode,createdby,createddate,modifiedby,modifieddate,deleteflag,cpystatus,key_client,key_link,ver_trials,cpybranchscode,sign_up_mode,account_owner,account_form,voided_check) values (#cpygrpid:varchar#,#cpypayeeid:varchar#,#cpypayeerefno:varchar#,#cpypayeename1:varchar#,#cpyaccnum:varchar#,#cpyacctype:varchar#,#cpyboname1:varchar#,#cpybankcode:varchar#,#createdby:varchar#,CURRENT_TIMESTAMP,#modifiedby:varchar#,CURRENT_TIMESTAMP,#deleteflag:varchar#,#cpystatus:varchar#,#key_client:varchar#,#key_link:varchar#,#ver_trials:numeric#,#cpybranchscode:varchar#,#sign_up_mode:varchar#,#account_owner:varchar#,#account_form:varchar#,#voided_check:varchar#)


#<Phase3> <Modified for Phase 3 by Nikita on Date (23/Mar/2011)>
#Modified for Defect id:34553 and for primary account by Nikita 
#Modified for CR-261 by Malli/Nikita 
setBeneficiary.Query=Insert into ds_payee_ref(cpygrpid,cpypayeeid,cpypayeerefno,cpypayeename1,cpyaccnum,cpyacctype,cpyboname1,cpybankcode,createdby,createddate,modifiedby,modifieddate,deleteflag,cpystatus,key_client,key_link,ver_trials,cpybranchscode,sign_up_mode,account_owner,account_form,voided_check,third_party_ind,approval_date,primary_int_acct,ofac_case_id) values (#cpygrpid:varchar#,#cpypayeeid:varchar#,#cpypayeerefno:varchar#,#cpypayeename1:varchar#,#cpyaccnum:varchar#,#cpyacctype:varchar#,#cpyboname1:varchar#,#cpybankcode:varchar#,#createdby:varchar#,CURRENT_TIMESTAMP,#modifiedby:varchar#,CURRENT_TIMESTAMP,#deleteflag:varchar#,#cpystatus:varchar#,#key_client:varchar#,#key_link:varchar#,#ver_trials:numeric#,#cpybranchscode:varchar#,#sign_up_mode:varchar#,#account_owner:varchar#,#account_form:varchar#,#voided_check:varchar#,#third_party_ind:varchar#,#approval_date:timestamp#,#primary_int_acct:varchar#,#ofac_case_id:varchar#)
setBeneficiary.StmtType=PreparedStatement

#<Phase3> <Added for Phase 3 by Nikita on Date (23/Mar/2011)>
setBeneficiary1.Query=Insert into ext_acct_owner_dtls(cpypayeeid,first_name) values (#cpypayeeid:varchar#,#first_name:varchar#)
setBeneficiary1.StmtType=PreparedStatement

#Modified for Defect id:34553 and for primary account by Nikita 
#Modified for CR-261 by Malli/Nikita
setBeneficiaryLog.Query=insert into ds_payee_ref_log (cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,key_client,key_link,ver_trials,cpystatus,deleteflag,sign_up_mode,account_owner,account_form,voided_check,usercomments,approval_date,primary_int_acct,ofac_case_id) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,#fa_id:numeric#,#branch_id:numeric#,CURRENT_TIMESTAMP,#created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#key_client:varchar#,#key_link:varchar#,#ver_trials:numeric#,#cpystatus:varchar#,#deleteflag:varchar#,#sign_up_mode:varchar#,#account_owner:varchar#,#account_form:varchar#,#voided_check:varchar#,#usercomments:varchar#,#approval_date:timestamp#,#primary_int_acct:varchar#,#ofac_case_id:varchar#)
setBeneficiaryLog.StmtType=PreparedStatement

#For Setting Trial Deposit Amounts .. Not in use Starts

setBatchExtAcc.Query=insert into ds_batch (batbatchref,batgrpid,batapplicationid,batnooftxns,batstatus,batcreatedby,batmodifiedby,batcreateddate,batmodifieddate,txn_entry_date) values(#batbatchref:varchar#,#batgrpid:varchar#,'',#batnooftxns:numeric#,'1',#batcreatedby:varchar#,#batmodifiedby:varchar#,#batcreateddate:timestamp#,CURRENT_TIMESTAMP,#txn_entry_date:timestamp#)
setBatchExtAcc.StmtType=PreparedStatement

setStatusExtAcc.Query=insert into ds_pay_statuses (psttrxkey,pststatusdate,pstfileid,pststatuscode,pstdebitdate,pstnetamount,pstfxcontractno,pstfxdirectrate,pstcustomerfxrate,pstdebitcurr,pstdebitamount,pstpayeeamt,createdby,modifiedby) values (#psttrxkey:numeric#,CURRENT DATE,1,3,#pstdebitdate:date#,#pstnetamount:numeric#,#pstfxcontractno:varchar#,#pstfxdirectrate:mumeric#,#pstcustomerfxrate:numeric#,#pstdebitcurr:varchar#,#pstdebitamount:numeric#,#pstpayeeamt:numeric#,#createdby:varchar#,'User 1')
setStatusExtAcc.StmtType=PreparedStatement

setTrialDepositAmt.Query=insert into ds_pay_txns (PAYTRXKEY,paypayref,paygroupid,paybatchref,paydebitaccnum,paypayeeaccnum,paycurrcode,paydebitamt,paypymtdate,paypayeebankcode,paypayeeid,paypayeename1,createdby,modifiedby,acct_user_name,created_by_role,createdby_name,acct_to_type,createddate,requested_exe_dt,modifieddate,trial_depo,acct_user_id,deleteflag,life_user_id,paypayee_acct_type,payccsstatuscode) values (#paytrxkey:numeric#,#paypayref:varchar#,#paygroupid:varchar#,#paybatchref:varchar#,(select val from configurable_parameter_view  where PRMTR_ID = 852 and BRANCH_CODE = 4),#paypayeeaccnum:varchar#,#paycurrcode:varchar#,#paydebitamt:numeric#,#paypymtdate:timestamp#,#paypayeebankcode:varchar#,#paypayeeid:varchar#,#paypayeename1:varchar#,#createdby:varchar#,#modifiedby:varchar#,#acct_user_name:varchar#,#created_by_role:varchar#,#createdby_name:varchar#,#acct_to_type:varchar#,CURRENT_TIMESTAMP,#requested_exe_dt:timestamp#,CURRENT_TIMESTAMP,#trial_depo:varchar#,#acct_user_id:varchar#,'N',#life_user_id:varchar#,#paypayee_acct_type:varchar#,#payccsstatuscode:varchar#)
setTrialDepositAmt.StmtType=PreparedStatement

setTrialDepositAmtLog.Query=insert into ds_pay_txns_log (trx_log_key,created_modified_by_name,paygroupid,paybatchref,paypayref,debit_acct_no,credit_act_no,FROMFA_ID,FROMBRANCH_ID,TOFA_ID,TOBRANCH_ID,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,LIFE_USER_ID,created_modified_by_comments,last_action,amount,request_date,initiation_date,trial_depo,txn_status) values (next value for dspaytxnslog_seq,#created_modified_by_name:varchar#,#paygroupid:varchar#,#paybatchref:varchar#,#paypayref:varchar#,(select val from configurable_parameter_view  where PRMTR_ID = 852 and BRANCH_CODE = 4) ,#credit_act_no:varchar#,#fromfa_id:numeric#,#frombranch_id:numeric#,#tofa_id:numeric#,#tobranch_id:numeric#,CURRENT_TIMESTAMP,#created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#life_user_id:varchar#,#created_modified_by_comments:varchar#,#last_action:varchar#,#amount:numeric#,#request_date:timestamp#,#initiation_date:timestamp#,#trial_depo:varchar#,#txn_status:varchar#)
setTrialDepositAmtLog.StmtType=PreparedStatement

setTrialDepositStatus.Query=insert into ds_pay_statuses (psttrxkey,pststatusdate,pstfileid,pststatuscode,pstdebitdate,pstnetamount,pstfxcontractno,pstfxdirectrate,pstcustomerfxrate,pstdebitcurr,pstdebitamount,pstpayeeamt,createdby,modifiedby,trial_depo) values (#psttrxkey:numeric#,'2009-03-01',1,3,'2009-03-01',#pstnetamount:numeric#,#pstfxcontractno:varchar#,#pstfxdirectrate:mumeric#,#pstcustomerfxrate:numeric#,#pstdebitcurr:varchar#,#pstdebitamount:numeric#,#pstpayeeamt:numeric#,#createdby:varchar#,'User 1','TrialDeposit')
setTrialDepositStatus.StmtType=PreparedStatement

#Ends

#checkPayAcctNum.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('31','32','36','34','35') and life_user_id=#life_user_id:varchar#
#checkPayAcctNum.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('31','32','36','34','35') and key_client_id=#key_client_id:varchar#
#checkPayAcctNum.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('31','32','36','34','35') and key_client=#key_client:varchar# and key_link=#key_link:varchar#
#checkPayAcctNum.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('31','32','36','34','35') and concat(key_client,key_link) in (#keyClientId:varchar#)
#checkPayAcctNum.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('31','32','36','34','35') and key_client in (#keyClientId:varchar#)

checkPayAcctNum.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('31','32','36','34','35','40') and key_client in (#keyClientId:varchar#) with UR
checkPayAcctNum.TOColumnMap={count=count}
checkPayAcctNum.OutputType=java.util.ArrayList
checkPayAcctNum.StmtType=PreparedStatement

#checkPayExDelAcctNum.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('33','37') and life_user_id=#life_user_id:varchar#
#checkPayExDelAcctNum.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('33','37') and key_client_id=#key_client_id:varchar#
#checkPayExDelAcctNum.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('33','37') and key_client=#key_client:varchar# and key_link=#key_link:varchar#
#checkPayExDelAcctNum.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('33','37') and concat(key_client,key_link) in (#keyClientId:varchar#)
#checkPayExDelAcctNum.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('33','37') and key_client in (#keyClientId:varchar#)

checkPayExDelAcctNum.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('33','37') and key_client in (#keyClientId:varchar#) with UR
checkPayExDelAcctNum.TOColumnMap={count=count}
checkPayExDelAcctNum.OutputType=java.util.ArrayList
checkPayExDelAcctNum.StmtType=PreparedStatement

#checkBypassAcctNum.Query=select count(*) as count from ds_bypass where accnum=#accnum:varchar# and routingnum=#routingnum:varchar# and cpystatus='32' and life_user_id=#life_user_id:varchar#
#checkBypassAcctNum.Query=select count(*) as count from ds_bypass where accnum=#accnum:varchar# and routingnum=#routingnum:varchar# and cpystatus='32' and key_client_id=#key_client_id:varchar#
#checkBypassAcctNum.Query=select count(*) as count from ds_bypass where accnum=#accnum:varchar# and routingnum=#routingnum:varchar# and cpystatus='32' and key_client=#key_client:varchar# and key_link=#key_link:varchar#
#checkBypassAcctNum.Query=select count(*) as count from ds_bypass where accnum=#accnum:varchar# and routingnum=#routingnum:varchar# and cpystatus='32' and concat(key_client,key_link) in (#keyClientId:varchar#)
#checkBypassAcctNum.Query=select count(*) as count from ds_bypass where accnum=#accnum:varchar# and routingnum=#routingnum:varchar# and cpystatus='32' and key_client in (#keyClientId:varchar#)

checkBypassAcctNum.Query=select count(*) as count from ds_bypass where accnum=#accnum:varchar# and routingnum=#routingnum:varchar# and cpystatus in('32','40') and key_client in (#keyClientId:varchar#) with UR
checkBypassAcctNum.TOColumnMap={count=count}
checkBypassAcctNum.OutputType=java.util.ArrayList
checkBypassAcctNum.StmtType=PreparedStatement

#UpdateBypassAcctNum.Query=update ds_bypass set CPYSTATUS='39' where accnum=#accnum:varchar# and  routingnum=#routingnum:varchar# and CPYSTATUS='32' and life_user_id=#life_user_id:varchar#
#UpdateBypassAcctNum.Query=update ds_bypass set CPYSTATUS='39' where accnum=#accnum:varchar# and  routingnum=#routingnum:varchar# and CPYSTATUS='32' and key_client_id=#key_client_id:varchar#
#UpdateBypassAcctNum.Query=update ds_bypass set CPYSTATUS='39' where accnum=#accnum:varchar# and  routingnum=#routingnum:varchar# and CPYSTATUS='32' and key_client=#key_client:varchar# and key_link=#key_link:varchar#
#UpdateBypassAcctNum.Query=update ds_bypass set CPYSTATUS='39' where accnum=#accnum:varchar# and  routingnum=#routingnum:varchar# and CPYSTATUS='32' and concat(key_client,key_link) in (#keyClientId:varchar#)

UpdateBypassAcctNum.Query=update ds_bypass set CPYSTATUS='39' where accnum=#accnum:varchar# and  routingnum=#routingnum:varchar# and CPYSTATUS in('32','40') and key_client in (#keyClientId:varchar#)
UpdateBypassAcctNum.StmtType=PreparedStatement

## Add External Account Ends

#Account Maintenance List Starts

getExtAcctCountVal.Query=select count(*) as count from DS_PAYEE_REF where cpystatus ='31' and key_client in (#keyClientId:varchar#)
getExtAcctCountVal.TOColumnMap={count=count}
getExtAcctCountVal.OutputType=java.util.ArrayList
getExtAcctCountVal.StmtType=PreparedStatement

#getExternalAccountsLIST_page.Query=select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as  CPYACCNUM,CPYSTATUS,ACTIONCOL,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,CPYBOADDR3,createddate,total_rows from (select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,CPYACCNUM,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=CPYSTATUS) as CPYSTATUS,'Delete' as ACTIONCOL,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM as CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,(select count(*)  from DS_PAYEE_REF where cpystatus ='31' and LIFE_USER_ID like #lifeUserId:varchar#) as CPYBOADDR3,date(createddate) as createddate,count(*) over() total_rows from  DS_PAYEE_REF DPT where DPT.LIFE_USER_ID like #lifeUserId:varchar# and DPT.CPYSTATUS in ('32','31','35','34','36')  #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
#getExternalAccountsLIST_page.Query=select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as  CPYACCNUM,CPYSTATUS,ACCOUNT_OWNER,ACTIONCOL,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,CPYBOADDR3,createddate,key_client_id,total_rows from (select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,CPYACCNUM,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=CPYSTATUS) as CPYSTATUS,ACCOUNT_OWNER,'Delete' as ACTIONCOL,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM as CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,(select count(*)  from DS_PAYEE_REF where cpystatus ='31' and key_client_id like #key_client_id:varchar#) as CPYBOADDR3,date(createddate) as createddate,key_client_id,count(*) over() total_rows from  DS_PAYEE_REF DPT where DPT.key_client_id like #key_client_id:varchar# and DPT.CPYSTATUS in ('32','31','35','34','36')  #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
#getExternalAccountsLIST_page.Query=select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as  CPYACCNUM,CPYSTATUS,ACCOUNT_OWNER,ACTIONCOL,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,CPYBOADDR3,createddate,key_client,key_link,total_rows from (select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,CPYACCNUM,(select dmndomainvaldesc from  DS_DOMAINS where UPPER(dmndomain)='D_StatusCode' and dmndomainval=CPYSTATUS) as CPYSTATUS,ACCOUNT_OWNER,'Delete' as ACTIONCOL,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM as CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,(select count(*)  from DS_PAYEE_REF where cpystatus ='31' and UPPER(key_client)=#key_client:varchar# and key_link=#key_link:varchar#) as CPYBOADDR3,date(createddate) as createddate,key_client,key_link,count(*) over() total_rows from  DS_PAYEE_REF DPT where and UPPER(DPT.key_client)=#key_client:varchar# and DPT.key_link=#key_link:varchar# and DPT.CPYSTATUS in ('32','31','35','36')  #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
#getExternalAccountsLIST_page.Query=select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as  CPYACCNUM,CPYSTATUS,ACCOUNT_OWNER,ACTIONCOL,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,CPYBOADDR3,createddate,key_client,key_link,total_rows from (select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,CPYACCNUM,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=CPYSTATUS) as CPYSTATUS,COALESCE(ACCOUNT_OWNER,CREATEDBY) as ACCOUNT_OWNER,'Delete' as ACTIONCOL,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM as CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,(select count(*)  from DS_PAYEE_REF where cpystatus ='31' and concat(key_client,key_link) in (#keyClientId:varchar#)) as CPYBOADDR3,date(createddate) as createddate,key_client,key_link,count(*) over() total_rows from  DS_PAYEE_REF DPT where concat(key_client,key_link) in (#keyClientId:varchar#) and DPT.CPYSTATUS in ('32','31','35','36') #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
#getExternalAccountsLIST_page.Query=select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as  CPYACCNUM,CPYSTATUS,ACCOUNT_OWNER,ACTIONCOL,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,CPYBOADDR3,createddate,key_client,key_link,total_rows from (select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,CPYACCNUM,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=CPYSTATUS) as CPYSTATUS,COALESCE(ACCOUNT_OWNER,CREATEDBY) as ACCOUNT_OWNER,'Delete' as ACTIONCOL,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM as CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,(select count(*)  from DS_PAYEE_REF where cpystatus ='31' and key_client in (#keyClientId:varchar#)) as CPYBOADDR3,date(createddate) as createddate,key_client,key_link,count(*) over() total_rows from  DS_PAYEE_REF DPT where key_client in (#keyClientId:varchar#) and DPT.CPYSTATUS in ('32','31','35','36') #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
#getExternalAccountsLIST_page.TOColumnMap={versionnum=versionnum,CPYCLRCODETT=CPYCLRCODETT,CPYPAYEENAME1=CPYPAYEENAME1,CPYBONAME1=CPYBONAME1,CPYACCNUM=CPYACCNUM,CPYSTATUS=CPYSTATUS,ACCOUNT_OWNER=ACCOUNT_OWNER,ACTIONCOL=ACTIONCOL,CPYACCTYPE=CPYACCTYPE,CPYPAYEEID=CPYPAYEEID,CPYBRANCHSCODE=CPYBRANCHSCODE,CPYACCNUM1=CPYACCNUM1,LIFE_USER_ID=LIFE_USER_ID,CPYBANKCODE=CPYBANKCODE,CPYBOADDR3=CPYBOADDR3,createddate=createddate,key_client=key_client,key_link=key_link,total_rows=total_rows}
##Final Working 17May10
#getExternalAccountsLIST_page.Query=select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as  CPYACCNUM,CPYSTATUS,ACCOUNT_OWNER,CPYINTERBANKSWIFTCODE,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,CPYBOADDR3,createddate,key_client,key_link,total_rows from (select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,CPYACCNUM,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=CPYSTATUS) as CPYSTATUS,COALESCE(ACCOUNT_OWNER,CREATEDBY) as ACCOUNT_OWNER,'Delete' as CPYINTERBANKSWIFTCODE,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM as CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,(select count(*)  from DS_PAYEE_REF where cpystatus ='31' and key_client in (#keyClientId:varchar#)) as CPYBOADDR3,date(createddate) as createddate,key_client,key_link,count(*) over() total_rows from  DS_PAYEE_REF DPT where key_client in (#keyClientId:varchar#) and DPT.CPYSTATUS in ('32','31','35','36') #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
##Final Working 15June10 Before Adding Outer join.
#getExternalAccountsLIST_page.Query=select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,CPYACCNUM,CPYSTATUS,ACCOUNT_OWNER,CPYINTERBANKSWIFTCODE,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,CPYBOADDR3,createddate,key_client,key_link,statuscode,total_rows from (select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,CPYACCNUM,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=CPYSTATUS) as CPYSTATUS,COALESCE(ACCOUNT_OWNER,CREATEDBY) as ACCOUNT_OWNER,'Delete' as CPYINTERBANKSWIFTCODE,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM as CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,(select count(*) from DS_PAYEE_REF where cpystatus ='31' and key_client in (#keyClientId:varchar#)) as CPYBOADDR3,date(createddate) as createddate,key_client,key_link,cpystatus as statuscode,count(*) over() total_rows from  DS_PAYEE_REF DPT where key_client in (#keyClientId:varchar#) and DPT.CPYSTATUS in ('32','31','35','36') #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
#Name has been changed for getting 50 records.
#getExternalAccountsLIST_page.Query=select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,CPYACCNUM,CPYSTATUS,ACCOUNT_OWNER,CPYINTERBANKSWIFTCODE,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,CPYBOADDR3,createddate,key_client,key_link,statuscode,total_rows from (select DPT.versionnum,DPT.CPYCLRCODETT,DPT.CPYPAYEENAME1,DPT.CPYBONAME1,DPT.CPYACCNUM,dsdom.dmndomainvaldesc as CPYSTATUS,COALESCE(DPT.ACCOUNT_OWNER,DPT.CREATEDBY) as ACCOUNT_OWNER,'Delete' as CPYINTERBANKSWIFTCODE,DPT.CPYACCTYPE,DPT.CPYPAYEEID,DPT.CPYBRANCHSCODE,CPYACCNUM as CPYACCNUM1,DPT.LIFE_USER_ID,DPT.CPYBANKCODE,(select count(*) from DS_PAYEE_REF where cpystatus ='31' and key_client in (#keyClientId:varchar#)) as CPYBOADDR3,date(DPT.createddate) as createddate,DPT.key_client,DPT.key_link,cpystatus as statuscode,count(*) over() total_rows from  DS_PAYEE_REF DPT left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS where key_client in (#keyClientId:varchar#) and DPT.CPYSTATUS in ('32','31','35','36') #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
#getExternalAccountsMS360LIST_page.Query=select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,CPYACCNUM,CPYSTATUS,ACCOUNT_OWNER,CPYINTERBANKSWIFTCODE,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,CPYBOADDR3,createddate,key_client,key_link,statuscode,total_rows from (select DPT.versionnum,DPT.CPYCLRCODETT,DPT.CPYPAYEENAME1,DPT.CPYBONAME1,DPT.CPYACCNUM,dsdom.dmndomainvaldesc as CPYSTATUS,COALESCE(DPT.ACCOUNT_OWNER,DPT.CREATEDBY) as ACCOUNT_OWNER,'Delete' as CPYINTERBANKSWIFTCODE,DPT.CPYACCTYPE,DPT.CPYPAYEEID,DPT.CPYBRANCHSCODE,CPYACCNUM as CPYACCNUM1,DPT.LIFE_USER_ID,DPT.CPYBANKCODE,(select count(*) from DS_PAYEE_REF where cpystatus ='31' and key_client in (#keyClientId:varchar#)) as CPYBOADDR3,date(DPT.createddate) as createddate,DPT.key_client,DPT.key_link,cpystatus as statuscode,count(*) over() total_rows from  DS_PAYEE_REF DPT left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS where key_client in (#keyClientId:varchar#) and DPT.CPYSTATUS in ('32','31','35','36') #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only with UR
#getExternalAccountsMS360LIST_page.Query=select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,CPYACCNUM,CPYSTATUS,ACCOUNT_OWNER,CPYINTERBANKSWIFTCODE,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,CPYBOADDR3,createddate,key_client,key_link,statuscode,total_rows from (select DPT.versionnum,DPT.CPYCLRCODETT,DPT.CPYPAYEENAME1,DPT.CPYBONAME1,DPT.CPYACCNUM,dsdom.dmndomainvaldesc as CPYSTATUS,COALESCE(DPT.ACCOUNT_OWNER,DPT.CREATEDBY) as ACCOUNT_OWNER,'Delete' as CPYINTERBANKSWIFTCODE,DPT.CPYACCTYPE,DPT.CPYPAYEEID,DPT.CPYBRANCHSCODE,CPYACCNUM as CPYACCNUM1,DPT.LIFE_USER_ID,DPT.CPYBANKCODE,'' as CPYBOADDR3,date(DPT.createddate) as createddate,DPT.key_client,DPT.key_link,cpystatus as statuscode,count(*) over() total_rows from  DS_PAYEE_REF DPT left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS where DPT.CPYSTATUS in ('32','31','35','36') and key_client in (#keyClientId:varchar#)  #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only with UR

#existing
#getExternalAccountsMS360LIST_page.Query=select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,CPYACCNUM,CPYSTATUS,ACCOUNT_OWNER,CPYINTERBANKSWIFTCODE,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,CPYBOADDR3,createddate,key_client,key_link,statuscode,total_rows from (select DPT.versionnum,DPT.CPYCLRCODETT,DPT.CPYPAYEENAME1,dsbnk.bnkdes as CPYBONAME1,DPT.CPYACCNUM,dsdom.dmndomainvaldesc as CPYSTATUS,COALESCE(DPT.ACCOUNT_OWNER,DPT.CREATEDBY) as ACCOUNT_OWNER,'Delete' as CPYINTERBANKSWIFTCODE,DPT.CPYACCTYPE,DPT.CPYPAYEEID,DPT.CPYBRANCHSCODE,CPYACCNUM as CPYACCNUM1,DPT.LIFE_USER_ID,DPT.CPYBANKCODE,'' as CPYBOADDR3,date(DPT.createddate) as createddate,DPT.key_client,DPT.key_link,cpystatus as statuscode,count(*) over() total_rows from  DS_PAYEE_REF DPT left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS left outer join DS_BANK_REF dsbnk on dsbnk.bnkcode=DPT.CPYBANKCODE where DPT.CPYSTATUS in ('32','31','35','36') and key_client in (#keyClientId:varchar#)  #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only with UR
#getExternalAccountsMS360LIST_page.TOColumnMap={versionnum=versionnum,CPYCLRCODETT=CPYCLRCODETT,CPYPAYEENAME1=CPYPAYEENAME1,CPYBONAME1=CPYBONAME1,CPYACCNUM=CPYACCNUM,CPYSTATUS=CPYSTATUS,ACCOUNT_OWNER=ACCOUNT_OWNER,CPYINTERBANKSWIFTCODE=CPYINTERBANKSWIFTCODE,CPYACCTYPE=CPYACCTYPE,CPYPAYEEID=CPYPAYEEID,CPYBRANCHSCODE=CPYBRANCHSCODE,CPYACCNUM1=CPYACCNUM1,LIFE_USER_ID=LIFE_USER_ID,CPYBANKCODE=CPYBANKCODE,CPYBOADDR3=CPYBOADDR3,createddate=createddate,key_client=key_client,key_link=key_link,statuscode=statuscode,total_rows=total_rows}
#getExternalAccountsMS360LIST_page.OutputType=java.util.ArrayList
#getExternalAccountsMS360LIST.StmtType=PreparedStatement
#getExternalAccountsMS360LIST.PgnUniqueKeys=CPYSTATUS:varchar:ASC#CPYPAYEEID:varchar:ASC
#getExternalAccountsMS360LIST.SortKeys=CPYSTATUS:varchar:ASC#CPYPAYEEID:varchar:ASC
#existing

getExternalAccountsMS360LIST_page.Query=select versionnum,CPYCLRCODETT,CPYPAYEENAME1,THIRD_PARTY_IND,CPYBONAME1,CPYACCNUM,CPYSTATUS,ACCOUNT_OWNER,CPYINTERBANKSWIFTCODE,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,CPYBOADDR3,createddate,key_client,key_link,statuscode,total_rows from (select DPT.versionnum,DPT.CPYCLRCODETT,DPT.CPYPAYEENAME1,case when DPT.THIRD_PARTY_IND='Yes' then DPT.THIRD_PARTY_IND else 'No' end as THIRD_PARTY_IND,dsbnk.bnkdes as CPYBONAME1,DPT.CPYACCNUM,case when THIRD_PARTY_IND='Yes' and dsdom.dmndomainvaldesc='Active' then dsdom.dmndomainvaldesc||' (Outbound Only)' else dsdom.dmndomainvaldesc end as CPYSTATUS,COALESCE(DPT.ACCOUNT_OWNER,DPT.CREATEDBY) as ACCOUNT_OWNER,'Delete' as CPYINTERBANKSWIFTCODE,DPT.CPYACCTYPE,DPT.CPYPAYEEID,DPT.CPYBRANCHSCODE,CPYACCNUM as CPYACCNUM1,DPT.LIFE_USER_ID,DPT.CPYBANKCODE,'' as CPYBOADDR3,date(DPT.createddate) as createddate,DPT.key_client,DPT.key_link,cpystatus as statuscode,count(*) over() total_rows from  DS_PAYEE_REF DPT left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS left outer join DS_BANK_REF dsbnk on dsbnk.bnkcode=DPT.CPYBANKCODE where DPT.CPYSTATUS in ('32','31','35','36','40') and key_client in (#keyClientId:varchar#)  #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only with UR
getExternalAccountsMS360LIST_page.TOColumnMap={versionnum=versionnum,CPYCLRCODETT=CPYCLRCODETT,CPYPAYEENAME1=CPYPAYEENAME1,THIRD_PARTY_IND=THIRD_PARTY_IND,CPYBONAME1=CPYBONAME1,CPYACCNUM=CPYACCNUM,CPYSTATUS=CPYSTATUS,ACCOUNT_OWNER=ACCOUNT_OWNER,CPYINTERBANKSWIFTCODE=CPYINTERBANKSWIFTCODE,CPYACCTYPE=CPYACCTYPE,CPYPAYEEID=CPYPAYEEID,CPYBRANCHSCODE=CPYBRANCHSCODE,CPYACCNUM1=CPYACCNUM1,LIFE_USER_ID=LIFE_USER_ID,CPYBANKCODE=CPYBANKCODE,CPYBOADDR3=CPYBOADDR3,createddate=createddate,key_client=key_client,key_link=key_link,statuscode=statuscode,total_rows=total_rows}
getExternalAccountsMS360LIST_page.OutputType=java.util.ArrayList
getExternalAccountsMS360LIST.StmtType=PreparedStatement
getExternalAccountsMS360LIST.PgnUniqueKeys=CPYSTATUS:varchar:ASC#CPYPAYEEID:varchar:ASC
getExternalAccountsMS360LIST.SortKeys=CPYSTATUS:varchar:ASC#CPYPAYEEID:varchar:ASC

#getSearchExternalAccountsLIST_page.Query=select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as  CPYACCNUM,CPYSTATUS,ACCOUNT_OWNER,ACTIONCOL,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,CPYBOADDR3,createddate,key_client,key_link,total_rows from (select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,CPYACCNUM,(select dmndomainvaldesc from  DS_DOMAINS where UPPER(dmndomain)='D_StatusCode' and dmndomainval=CPYSTATUS) as CPYSTATUS,ACCOUNT_OWNER,'Delete' as ACTIONCOL,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM as CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,(select count(*)  from DS_PAYEE_REF where cpystatus ='31' and UPPER(key_client)=#key_client:varchar# and key_link=#key_link:varchar#) as CPYBOADDR3,date(createddate) as createddate,key_client,key_link,count(*) over() total_rows from  DS_PAYEE_REF DPT where and UPPER(DPT.key_client)=#key_client:varchar# and DPT.key_link=#key_link:varchar# and DPT.CPYSTATUS in (#extAcctStatus:varchar#)  #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
#getSearchExternalAccountsLIST_page.Query=select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as  CPYACCNUM,CPYSTATUS,ACCOUNT_OWNER,ACTIONCOL,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,CPYBOADDR3,createddate,key_client,key_link,total_rows from (select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,CPYACCNUM,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=CPYSTATUS) as CPYSTATUS,COALESCE(ACCOUNT_OWNER,CREATEDBY) as ACCOUNT_OWNER,'Delete' as ACTIONCOL,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM as CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,(select count(*)  from DS_PAYEE_REF where cpystatus ='31' and concat(key_client,key_link) in (#keyClientId:varchar#)) as CPYBOADDR3,date(createddate) as createddate,key_client,key_link,count(*) over() total_rows from  DS_PAYEE_REF DPT where concat(key_client,key_link) in (#keyClientId:varchar#) and DPT.CPYSTATUS in (#extAcctStatus:varchar#)  #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
##Final Working 17May10
#getSearchExternalAccountsLIST_page.Query=select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as  CPYACCNUM,CPYSTATUS,ACCOUNT_OWNER,CPYINTERBANKSWIFTCODE,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,CPYBOADDR3,createddate,key_client,key_link,total_rows from (select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,CPYACCNUM,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=CPYSTATUS) as CPYSTATUS,COALESCE(ACCOUNT_OWNER,CREATEDBY) as ACCOUNT_OWNER,'Delete' as CPYINTERBANKSWIFTCODE,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM as CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,(select count(*)  from DS_PAYEE_REF where cpystatus ='31' and key_client in (#keyClientId:varchar#)) as CPYBOADDR3,date(createddate) as createddate,key_client,key_link,count(*) over() total_rows from  DS_PAYEE_REF DPT where key_client in (#keyClientId:varchar#) and DPT.CPYSTATUS in (#extAcctStatus:varchar#)  #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
##Final Working 15June10 Before Adding Outer join.
#getSearchExternalAccountsLIST_page.Query=select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,CPYACCNUM,CPYSTATUS,ACCOUNT_OWNER,CPYINTERBANKSWIFTCODE,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,CPYBOADDR3,createddate,key_client,key_link,statuscode,total_rows from (select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,CPYACCNUM,(select dmndomainvaldesc from  DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=CPYSTATUS) as CPYSTATUS,COALESCE(ACCOUNT_OWNER,CREATEDBY) as ACCOUNT_OWNER,'Delete' as CPYINTERBANKSWIFTCODE,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM as CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,(select count(*)  from DS_PAYEE_REF where cpystatus ='31' and key_client in (#keyClientId:varchar#)) as CPYBOADDR3,date(createddate) as createddate,key_client,key_link,cpystatus as statuscode,count(*) over() total_rows from  DS_PAYEE_REF DPT where key_client in (#keyClientId:varchar#) and DPT.CPYSTATUS in (#extAcctStatus:varchar#)  #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
#getSearchExternalAccountsLIST_page.Query=select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,CPYACCNUM,CPYSTATUS,ACCOUNT_OWNER,CPYINTERBANKSWIFTCODE,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,CPYBOADDR3,createddate,key_client,key_link,statuscode,total_rows from (select DPT.versionnum,DPT.CPYCLRCODETT,DPT.CPYPAYEENAME1,DPT.CPYBONAME1,DPT.CPYACCNUM,dsdom.dmndomainvaldesc as CPYSTATUS,COALESCE(DPT.ACCOUNT_OWNER,DPT.CREATEDBY) as ACCOUNT_OWNER,'Delete' as CPYINTERBANKSWIFTCODE,DPT.CPYACCTYPE,DPT.CPYPAYEEID,DPT.CPYBRANCHSCODE,CPYACCNUM as CPYACCNUM1,DPT.LIFE_USER_ID,DPT.CPYBANKCODE,(select count(*) from DS_PAYEE_REF where cpystatus ='31' and key_client in (#keyClientId:varchar#)) as CPYBOADDR3,date(DPT.createddate) as createddate,DPT.key_client,DPT.key_link,cpystatus as statuscode,count(*) over() total_rows from  DS_PAYEE_REF DPT left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS where key_client in (#keyClientId:varchar#) and DPT.CPYSTATUS in (#extAcctStatus:varchar#) #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only with UR
#getSearchExternalAccountsLIST_page.Query=select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,CPYACCNUM,CPYSTATUS,ACCOUNT_OWNER,CPYINTERBANKSWIFTCODE,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,CPYBOADDR3,createddate,key_client,key_link,statuscode,total_rows from (select DPT.versionnum,DPT.CPYCLRCODETT,DPT.CPYPAYEENAME1,DPT.CPYBONAME1,DPT.CPYACCNUM,dsdom.dmndomainvaldesc as CPYSTATUS,COALESCE(DPT.ACCOUNT_OWNER,DPT.CREATEDBY) as ACCOUNT_OWNER,'Delete' as CPYINTERBANKSWIFTCODE,DPT.CPYACCTYPE,DPT.CPYPAYEEID,DPT.CPYBRANCHSCODE,CPYACCNUM as CPYACCNUM1,DPT.LIFE_USER_ID,DPT.CPYBANKCODE,'' as CPYBOADDR3,date(DPT.createddate) as createddate,DPT.key_client,DPT.key_link,cpystatus as statuscode,count(*) over() total_rows from  DS_PAYEE_REF DPT left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS where key_client in (#keyClientId:varchar#) and DPT.CPYSTATUS in (#extAcctStatus:varchar#) #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only with UR

#existing
#getSearchExternalAccountsLIST_page.Query=select versionnum,CPYCLRCODETT,CPYPAYEENAME1,CPYBONAME1,CPYACCNUM,CPYSTATUS,ACCOUNT_OWNER,CPYINTERBANKSWIFTCODE,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,CPYBOADDR3,createddate,key_client,key_link,statuscode,total_rows from (select DPT.versionnum,DPT.CPYCLRCODETT,DPT.CPYPAYEENAME1,dsbnk.bnkdes as CPYBONAME1,DPT.CPYACCNUM,dsdom.dmndomainvaldesc as CPYSTATUS,COALESCE(DPT.ACCOUNT_OWNER,DPT.CREATEDBY) as ACCOUNT_OWNER,'Delete' as CPYINTERBANKSWIFTCODE,DPT.CPYACCTYPE,DPT.CPYPAYEEID,DPT.CPYBRANCHSCODE,CPYACCNUM as CPYACCNUM1,DPT.LIFE_USER_ID,DPT.CPYBANKCODE,'' as CPYBOADDR3,date(DPT.createddate) as createddate,DPT.key_client,DPT.key_link,cpystatus as statuscode,count(*) over() total_rows from  DS_PAYEE_REF DPT left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS left outer join DS_BANK_REF dsbnk on dsbnk.bnkcode=DPT.CPYBANKCODE where key_client in (#keyClientId:varchar#) and DPT.CPYSTATUS in (#extAcctStatus:varchar#) #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only with UR
#getSearchExternalAccountsLIST_page.TOColumnMap={versionnum=versionnum,CPYCLRCODETT=CPYCLRCODETT,CPYPAYEENAME1=CPYPAYEENAME1,CPYBONAME1=CPYBONAME1,CPYACCNUM=CPYACCNUM,CPYSTATUS=CPYSTATUS,ACCOUNT_OWNER=ACCOUNT_OWNER,CPYINTERBANKSWIFTCODE=CPYINTERBANKSWIFTCODE,CPYACCTYPE=CPYACCTYPE,CPYPAYEEID=CPYPAYEEID,CPYBRANCHSCODE=CPYBRANCHSCODE,CPYACCNUM1=CPYACCNUM1,LIFE_USER_ID=LIFE_USER_ID,CPYBANKCODE=CPYBANKCODE,CPYBOADDR3=CPYBOADDR3,createddate=createddate,key_client=key_client,key_link=key_link,statuscode=statuscode,total_rows=total_rows}
#getSearchExternalAccountsLIST_page.OutputType=java.util.ArrayList
#getSearchExternalAccountsLIST.StmtType=PreparedStatement
#getSearchExternalAccountsLIST.PgnUniqueKeys=CPYSTATUS:varchar:ASC#CPYPAYEEID:varchar:ASC
#getSearchExternalAccountsLIST.SortKeys=CPYSTATUS:varchar:ASC#CPYPAYEEID:varchar:ASC
#existing

getSearchExternalAccountsLIST_page.Query=select versionnum,CPYCLRCODETT,CPYPAYEENAME1,THIRD_PARTY_IND,CPYBONAME1,CPYACCNUM,CPYSTATUS,ACCOUNT_OWNER,CPYINTERBANKSWIFTCODE,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,CPYBOADDR3,createddate,key_client,key_link,statuscode,total_rows from (select DPT.versionnum,DPT.CPYCLRCODETT,DPT.CPYPAYEENAME1,case when DPT.THIRD_PARTY_IND='Yes' then DPT.THIRD_PARTY_IND else 'No' end as THIRD_PARTY_IND,dsbnk.bnkdes as CPYBONAME1,DPT.CPYACCNUM,case when THIRD_PARTY_IND='Yes' and dsdom.dmndomainvaldesc='Active' then dsdom.dmndomainvaldesc||' (Outbound Only)' else dsdom.dmndomainvaldesc end as CPYSTATUS,COALESCE(DPT.ACCOUNT_OWNER,DPT.CREATEDBY) as ACCOUNT_OWNER,'Delete' as CPYINTERBANKSWIFTCODE,DPT.CPYACCTYPE,DPT.CPYPAYEEID,DPT.CPYBRANCHSCODE,CPYACCNUM as CPYACCNUM1,DPT.LIFE_USER_ID,DPT.CPYBANKCODE,'' as CPYBOADDR3,date(DPT.createddate) as createddate,DPT.key_client,DPT.key_link,cpystatus as statuscode,count(*) over() total_rows from  DS_PAYEE_REF DPT left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS left outer join DS_BANK_REF dsbnk on dsbnk.bnkcode=DPT.CPYBANKCODE where key_client in (#keyClientId:varchar#) and DPT.CPYSTATUS in (#extAcctStatus:varchar#) #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only with UR
getSearchExternalAccountsLIST_page.TOColumnMap={versionnum=versionnum,CPYCLRCODETT=CPYCLRCODETT,CPYPAYEENAME1=CPYPAYEENAME1,THIRD_PARTY_IND=THIRD_PARTY_IND,CPYBONAME1=CPYBONAME1,CPYACCNUM=CPYACCNUM,CPYSTATUS=CPYSTATUS,ACCOUNT_OWNER=ACCOUNT_OWNER,CPYINTERBANKSWIFTCODE=CPYINTERBANKSWIFTCODE,CPYACCTYPE=CPYACCTYPE,CPYPAYEEID=CPYPAYEEID,CPYBRANCHSCODE=CPYBRANCHSCODE,CPYACCNUM1=CPYACCNUM1,LIFE_USER_ID=LIFE_USER_ID,CPYBANKCODE=CPYBANKCODE,CPYBOADDR3=CPYBOADDR3,createddate=createddate,key_client=key_client,key_link=key_link,statuscode=statuscode,total_rows=total_rows}
getSearchExternalAccountsLIST_page.OutputType=java.util.ArrayList
getSearchExternalAccountsLIST.StmtType=PreparedStatement
getSearchExternalAccountsLIST.PgnUniqueKeys=CPYSTATUS:varchar:ASC#CPYPAYEEID:varchar:ASC
getSearchExternalAccountsLIST.SortKeys=CPYSTATUS:varchar:ASC#CPYPAYEEID:varchar:ASC

#Verify External Accounts Starts

verifyTrialAmounts.Query=select COUNT(*) as count from ds_pay_txns where paydebitamt IN (#amount1:numeric#,#amount2:numeric#) and paypayeeaccnum=#cpypayeeid:varchar#
verifyTrialAmounts.TOColumnMap={count=count}
verifyTrialAmounts.OutputType=java.util.ArrayList
verifyTrialAmounts.StmtType=PreparedStatement

#updateVerSucessStatus.Query=update DS_PAYEE_REF set versionnum=versionnum+1,CPYSTATUS='32' where cpyaccnum=#cpyaccnum:varchar# and cpyboname1=#cpyboname1:varchar# and life_user_id=#life_user_id:varchar# and cpypayeeid=#cpypayeeid:varchar#
#updateVerSucessStatus.Query=update DS_PAYEE_REF set versionnum=versionnum+1,cpystatus='32' where cpyaccnum=#cpyaccnum:varchar# and cpyboname1=#cpyboname1:varchar# and cpypayeeid=#cpypayeeid:varchar#

updateVerSucessStatus.Query=update DS_PAYEE_REF set versionnum=versionnum+1,cpystatus=#cpystatus:varchar# where cpypayeeid=#cpypayeeid:varchar#
updateVerSucessStatus.StmtType=PreparedStatement

#setExtAcctSuccessLogDetails.Query=insert into ds_payee_ref_log(cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,key_client,key_link,ver_trials,cpystatus,deleteflag,usercomments,life_user_id) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,52,23,CURRENT_TIMESTAMP, #created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#key_client:varchar#,#key_link:varchar#,(select versionnum from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#cpystatus:varchar#,'N',#usercomments:varchar#,#life_user_id:varchar#)
#setExtAcctSuccessLogDetails.Query=insert into ds_payee_ref_log (cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag,sign_up_mode,key_client,key_link,account_owner,account_form,voided_check) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,#fa_id:numeric#,#branch_id:numeric#,CURRENT_TIMESTAMP,#created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,(select versionnum from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#cpystatus:varchar#,#deleteflag:varchar#,(select sign_up_mode from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#key_client:varchar#,#key_link:varchar#,(select account_owner from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),(select account_form from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),(select voided_check from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#))

setExtAcctSuccessLogDetails.Query=insert into ds_payee_ref_log (cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag,sign_up_mode,key_client,key_link,account_owner,account_form,voided_check) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,#fa_id:numeric#,#branch_id:numeric#,CURRENT_TIMESTAMP,#created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,(select versionnum from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#cpystatus:varchar#,#deleteflag:varchar#,#sign_up_mode:varchar#,#key_client:varchar#,#key_link:varchar#,#account_owner:varchar#,#account_form:varchar#,#voided_check:varchar#)
setExtAcctSuccessLogDetails.StmtType=PreparedStatement

#updateVerFailureStatus.Query=update DS_PAYEE_REF set versionnum=versionnum+1,CPYSTATUS='33' where cpyaccnum=#cpyaccnum:varchar# and cpyboname1=#cpyboname1:varchar# and life_user_id=#life_user_id:varchar# and cpypayeeid=#cpypayeeid:varchar#
#updateVerFailureStatus.Query=update DS_PAYEE_REF set versionnum=versionnum+1,CPYSTATUS='33' where cpyaccnum=#cpyaccnum:varchar# and cpyboname1=#cpyboname1:varchar# and cpypayeeid=#cpypayeeid:varchar#

updateVerFailureStatus.Query=update DS_PAYEE_REF set versionnum=versionnum+1,cpystatus=#cpystatus:varchar# where cpypayeeid=#cpypayeeid:varchar#
updateVerFailureStatus.StmtType=PreparedStatement

#setExtAcctFailureLogDetails.Query=insert into ds_payee_ref_log(cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,key_client,key_link,ver_trials,cpystatus,deleteflag,usercomments,life_user_id) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,52,23,CURRENT_TIMESTAMP, #created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#key_client:varchar#,#key_link:varchar#,(select versionnum from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#cpystatus:varchar#,'N',#usercomments:varchar#,#life_user_id:varchar#)
#setExtAcctFailureLogDetails.Query=insert into ds_payee_ref_log(cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag,usercomments,sign_up_mode,key_client,key_link,account_owner,account_form,voided_check) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,#fa_id:numeric#,#branch_id:numeric#,CURRENT_TIMESTAMP, #created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,(select versionnum from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#cpystatus:varchar#,#deleteflag:varchar#,#usercomments:varchar#,(select sign_up_mode from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#key_client:varchar#,#key_link:varchar#,(select account_owner from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),(select account_form from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),(select voided_check from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#))
#setExtAcctFailureLogDetails.Query=insert into ds_payee_ref_log(cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag,usercomments,sign_up_mode,key_client,key_link,account_owner,account_form,voided_check) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,#fa_id:numeric#,#branch_id:numeric#,CURRENT_TIMESTAMP, #created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,(select versionnum from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#cpystatus:varchar#,#deleteflag:varchar#,#usercomments:varchar#,#sign_up_mode:varchar#,#key_client:varchar#,#key_link:varchar#,#account_owner:varchar#,#account_form:varchar#,#voided_check:varchar#)

setExtAcctFailureLogDetails.Query=insert into ds_payee_ref_log(cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag,usercomments,sign_up_mode,key_client,key_link,account_owner,account_form,voided_check) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,#fa_id:numeric#,#branch_id:numeric#,CURRENT_TIMESTAMP, #created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,#ver_trials:numeric#,#cpystatus:varchar#,#deleteflag:varchar#,#usercomments:varchar#,#sign_up_mode:varchar#,#key_client:varchar#,#key_link:varchar#,#account_owner:varchar#,#account_form:varchar#,#voided_check:varchar#)
setExtAcctFailureLogDetails.StmtType=PreparedStatement

getExtAcctCount.Query= select dpr.CPYBRANCHSCODE from DS_PAYEE_REF dpr, DS_PAY_TXNS dpt where dpt.paypayeeid=#extAccNo:varchar# and dpt.paypayeeid=dpr.cpyaccnum and dpr.cpyboname1=#extBoName:varchar#
getExtAcctCount.TOColumnMap={CPYBRANCHSCODE=CPYBRANCHSCODE}
getExtAcctCount.OutputType=java.util.ArrayList
getExtAcctCount.StmtType=PreparedStatement

setExtAcctCountVal.Query=update DS_PAYEE_REF set CPYBRANCHSCODE=(#extAcctCountVal:varchar#) where cpypayeeid=#cpypayeeid:varchar#
setExtAcctCountVal.StmtType=PreparedStatement

#getExtAcctRefNum.Query=select versionnum,cpyboname1,cpyacctype,cpypayeename1,cpybranchscode,cpyaccnum,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as cpyaccnum1,cpybankcode,cpystatus,life_user_id from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#
#getExtAcctRefNum.Query=select versionnum,cpyboname1,cpyacctype,cpypayeename1,cpybranchscode,cpyaccnum,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as cpyaccnum1,cpybankcode,cpystatus,life_user_id,key_client,key_link,createddate from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#
#getExtAcctRefNum.Query=select versionnum,cpyboname1,cpyacctype,cpypayeename1,cpybranchscode,cpyaccnum,cpyaccnum as cpyaccnum1,cpybankcode,cpystatus,life_user_id,key_client,key_link,createddate from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#
#getExtAcctRefNum.Query=select versionnum,cpyboname1,cpyacctype,cpypayeename1,cpybranchscode,cpyaccnum,cpyaccnum as cpyaccnum1,cpybankcode,cpystatus,life_user_id,key_client,key_link,createddate,sign_up_mode,account_owner,account_form,voided_check from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#
#getExtAcctRefNum.TOColumnMap={versionnum=versionnum,cpyboname1=cpyboname1,cpyacctype=cpyacctype,cpypayeename1=cpypayeename1,cpybranchscode=cpybranchscode,cpyaccnum=cpyaccnum,cpyaccnum1=cpyaccnum1,cpybankcode=cpybankcode,cpystatus=cpystatus,life_user_id=life_user_id,key_client=key_client,key_link=key_link,createddate=createddate,=sign_up_mode,account_owner=account_owner,account_form=account_form,voided_check=voided_check}
#getExtAcctRefNum.Query=select dpr.versionnum,dpr.cpyboname1,dsdom.dmndomainvaldesc as cpyacctypedesc,dpr.cpyacctype,dpr.cpypayeename1,dpr.cpybranchscode,dpr.cpyaccnum,cpyaccnum as cpyaccnum1,dpr.cpybankcode,dpr.cpystatus,dpr.life_user_id,dpr.key_client,dpr.key_link,dpr.createddate,dpr.sign_up_mode,dpr.account_owner,dpr.account_form,dpr.voided_check from ds_payee_ref dpr left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_NewExtAcctType' and dsdom.dmndomainval=dpr.cpyacctype where cpypayeeid=#cpypayeeid:varchar#

getExtAcctRefNum.Query=select dpr.versionnum,dsbnk.bnkdes as cpyboname1,dsdom.dmndomainvaldesc as cpyacctypedesc,dpr.cpyacctype,dpr.cpypayeename1,dpr.cpybranchscode,dpr.cpyaccnum,cpyaccnum as cpyaccnum1,dpr.cpybankcode,dpr.cpystatus,dpr.life_user_id,dpr.key_client,dpr.key_link,dpr.createddate,dpr.sign_up_mode,dpr.account_owner,dpr.account_form,dpr.voided_check from ds_payee_ref dpr left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_NewExtAcctType' and dsdom.dmndomainval=dpr.cpyacctype left outer join DS_BANK_REF dsbnk on dsbnk.bnkcode=dpr.CPYBANKCODE where dpr.cpypayeeid=#cpypayeeid:varchar#
getExtAcctRefNum.TOColumnMap={versionnum=versionnum,cpyboname1=cpyboname1,cpyacctype=cpyacctype,cpyacctypedesc=cpyacctypedesc,cpypayeename1=cpypayeename1,cpybranchscode=cpybranchscode,cpyaccnum=cpyaccnum,cpyaccnum1=cpyaccnum1,cpybankcode=cpybankcode,cpystatus=cpystatus,life_user_id=life_user_id,key_client=key_client,key_link=key_link,createddate=createddate,=sign_up_mode,account_owner=account_owner,account_form=account_form,voided_check=voided_check}
getExtAcctRefNum.OutputType=com.tcs.ebw.payments.transferobject.ExtAcctVerifyOutTO
getExtAcctRefNum.StmtType=PreparedStatement

getExtAcctFrmVal.Query=select versionnum,cpyboname1,cpyacctype,cpypayeename1,cpybranchscode,cpyaccnum,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as cpyaccnum1,cpybankcode from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#
getExtAcctFrmVal.TOColumnMap={versionnum=versionnum,cpyboname1=cpyboname1,cpyacctype=cpyacctype,cpypayeename1=cpypayeename1,cpybranchscode=cpybranchscode,cpyaccnum=cpyaccnum,cpyaccnum1=cpyaccnum1,cpybankcode=cpybankcode}
getExtAcctFrmVal.OutputType=com.tcs.ebw.payments.transferobject.ExtAcctVerifySubOutTO[]
getExtAcctFrmVal.StmtType=PreparedStatement

#getExtEditAcctRefNum.Query=select versionnum,cpyboname1,cpyacctype,cpypayeename1,cpybranchscode,cpyaccnum,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as cpyaccnum1,cpybankcode,cpystatus,life_user_id,COALESCE(ACCOUNT_OWNER,CREATEDBY) as accowner from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#
#getExtEditAcctRefNum.Query=select versionnum,cpyboname1,cpyacctype,cpypayeename1,cpybranchscode,cpyaccnum,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as cpyaccnum1,cpybankcode,cpystatus,life_user_id,COALESCE(ACCOUNT_OWNER,CREATEDBY) as accowner,key_client,key_link from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#
#getExtEditAcctRefNum.Query=select versionnum,cpyboname1,cpyacctype,cpypayeename1,cpybranchscode,cpyaccnum, cpyaccnum as cpyaccnum1,cpybankcode,cpystatus,life_user_id,COALESCE(ACCOUNT_OWNER,CREATEDBY) as accowner,key_client,key_link from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#
#getExtEditAcctRefNum.Query=select dpr.versionnum,dsbnk.bnkdes as cpyboname1,dpr.cpyacctype,dpr.cpypayeename1,dpr.cpybranchscode,dpr.cpyaccnum, cpyaccnum as cpyaccnum1,dpr.cpybankcode,dpr.cpystatus,dpr.life_user_id,account_owner as accowner,dpr.key_client,dpr.key_link,dpr.sign_up_mode,dpr.account_owner,dpr.account_form,dpr.voided_check from ds_payee_ref dpr left outer join DS_BANK_REF dsbnk on dsbnk.bnkcode=dpr.CPYBANKCODE where dpr.cpypayeeid=#cpypayeeid:varchar#

#getExtEditAcctRefNum.Query=select dpr.versionnum,dsbnk.bnkdes as cpyboname1,dpr.cpyacctype,dpr.cpypayeename1,dpr.cpybranchscode,dpr.cpyaccnum, cpyaccnum as cpyaccnum1,dpr.cpybankcode,dpr.cpystatus,dpr.life_user_id,account_owner as accowner,dpr.key_client,dpr.key_link,dpr.sign_up_mode,dpr.account_owner,dpr.account_form,dpr.voided_check from ds_payee_ref dpr left outer join DS_BANK_REF dsbnk on dsbnk.bnkcode=dpr.CPYBANKCODE where dpr.cpypayeeid=#cpypayeeid:varchar# and 1=1 with UR
#getExtEditAcctRefNum.TOColumnMap={versionnum=versionnum,cpyboname1=cpyboname1,cpyacctype=cpyacctype,cpypayeename1=cpypayeename1,cpybranchscode=cpybranchscode,cpyaccnum=cpyaccnum,cpyaccnum1=cpyaccnum1,cpybankcode=cpybankcode,cpystatus=cpystatus,life_user_id=life_user_id,accowner=accowner,key_client=key_client,key_link=key_link,sign_up_mode=sign_up_mode,account_owner=account_owner,account_form=account_form,voided_check=voided_check}
#<Phase3> <Modified for Phase 3 by Nikita on Date (23/Mar/2011)>
#<Modified for Defect id:34145 by Nikita >
getExtEditAcctRefNum.Query=select dpr.versionnum,dsbnk.bnkdes as cpyboname1,dpr.cpyacctype,dpr.cpypayeename1,dpr.cpybranchscode,dpr.cpyaccnum, cpyaccnum as cpyaccnum1,dpr.cpybankcode,dpr.cpystatus,dpr.life_user_id,account_owner as accowner,dpr.key_client,dpr.key_link,dpr.sign_up_mode,dpr.account_owner,dpr.account_form,dpr.voided_check,case when dpr.THIRD_PARTY_IND='Yes' then dpr.THIRD_PARTY_IND else 'No' end as thirdpartyaccradio,eaod.FIRST_NAME as namethirdpartyacc from ds_payee_ref dpr left outer join DS_BANK_REF dsbnk on dsbnk.bnkcode=dpr.CPYBANKCODE  left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=dpr.cpystatus  left outer join EXT_ACCT_OWNER_DTLS eaod on eaod.CPYPAYEEID=dpr.cpypayeeid and dsdom.dmndomainval=dpr.cpystatus where dpr.cpypayeeid=#cpypayeeid:varchar# and 1=1 with UR
getExtEditAcctRefNum.TOColumnMap={versionnum=versionnum,cpyboname1=cpyboname1,cpyacctype=cpyacctype,cpypayeename1=cpypayeename1,cpybranchscode=cpybranchscode,cpyaccnum=cpyaccnum,cpyaccnum1=cpyaccnum1,cpybankcode=cpybankcode,cpystatus=cpystatus,life_user_id=life_user_id,accowner=accowner,key_client=key_client,key_link=key_link,sign_up_mode=sign_up_mode,account_owner=account_owner,account_form=account_form,voided_check=voided_check,thirdpartyaccradio=thirdpartyaccradio,namethirdpartyacc=namethirdpartyacc}
getExtEditAcctRefNum.OutputType=com.tcs.ebw.payments.transferobject.ExtAcctEditOutTO
getExtEditAcctRefNum.StmtType=PreparedStatement

#getExtDeleteAcctRefNum.Query=select versionnum,cpyboname1,cpyacctype,cpypayeename1,cpybranchscode,cpyaccnum,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as cpyaccnum1,cpybankcode,cpystatus,life_user_id from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#
#getExtDeleteAcctRefNum.Query=select versionnum,cpyboname1,cpyacctype,cpypayeename1,cpybranchscode,cpyaccnum,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as cpyaccnum1,cpybankcode,cpystatus,life_user_id,key_client,key_link from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#
#getExtDeleteAcctRefNum.Query=select versionnum,cpyboname1,cpyacctype,cpypayeename1,cpybranchscode,cpyaccnum,cpyaccnum as cpyaccnum1,cpybankcode,cpystatus,life_user_id,key_client,key_link from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#
#getExtDeleteAcctRefNum.Query=select versionnum,cpyboname1,cpyacctype,cpypayeename1,cpybranchscode,cpyaccnum,cpyaccnum as cpyaccnum1,cpybankcode,cpystatus,life_user_id,key_client,key_link,sign_up_mode,account_owner,account_form,voided_check from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#
#getExtDeleteAcctRefNum.Query=select dpr.versionnum,dpr.cpyboname1,dpr.cpyacctype,dsdom.dmndomainvaldesc as cpyacctype1,dpr.cpypayeename1,dpr.cpybranchscode,dpr.cpyaccnum,cpyaccnum as cpyaccnum1,dpr.cpybankcode,dpr.cpystatus,dpr.life_user_id,dpr.key_client,dpr.key_link,dpr.sign_up_mode,dpr.account_owner,dpr.account_form,dpr.voided_check from ds_payee_ref dpr left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_NewExtAcctType' and dsdom.dmndomainval=dpr.cpyacctype where dpr.cpypayeeid=#cpypayeeid:varchar#

getExtDeleteAcctRefNum.Query=select dpr.versionnum,dsbnk.bnkdes as cpyboname1,dpr.cpyacctype,dsdom.dmndomainvaldesc as cpyacctype1,dpr.cpypayeename1,dpr.cpybranchscode,dpr.cpyaccnum,cpyaccnum as cpyaccnum1,dpr.cpybankcode,dpr.cpystatus,dpr.life_user_id,dpr.key_client,dpr.key_link,dpr.sign_up_mode,dpr.account_owner,dpr.account_form,dpr.voided_check from ds_payee_ref dpr left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_NewExtAcctType' and dsdom.dmndomainval=dpr.cpyacctype left outer join DS_BANK_REF dsbnk on dsbnk.bnkcode=dpr.CPYBANKCODE where dpr.cpypayeeid=#cpypayeeid:varchar#
getExtDeleteAcctRefNum.TOColumnMap={versionnum=versionnum,cpyboname1=cpyboname1,cpyacctype=cpyacctype,cpyacctype1=cpyacctype1,cpypayeename1=cpypayeename1,cpybranchscode=cpybranchscode,cpyaccnum=cpyaccnum,cpyaccnum1=cpyaccnum1,cpybankcode=cpybankcode,cpystatus=cpystatus,life_user_id=life_user_id,key_client=key_client,key_link=key_link,sign_up_mode=sign_up_mode,account_owner=account_owner,account_form=account_form,voided_check=voided_check}
getExtDeleteAcctRefNum.OutputType=com.tcs.ebw.payments.transferobject.ExtAcctDeleteOutTO
getExtDeleteAcctRefNum.StmtType=PreparedStatement

#Verify External Account Ends

#Edit External Account Starts
#Newly Added for Edit Routing Num changes check -- Starts 

#checkPayAcctNumEdit.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('31','32','36','34','35') and key_client=#key_client:varchar# and key_link=#key_link:varchar#
#checkPayAcctNumEdit.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('31','32','36','34','35') and concat(key_client,key_link) in (#keyClientId:varchar#)
#checkPayAcctNumEdit.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('31','32','36','34','35') and key_client in (#keyClientId:varchar#)

checkPayAcctNumEdit.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('31','32','36','34','35') and key_client in (#keyClientId:varchar#) with UR
checkPayAcctNumEdit.TOColumnMap={count=count}
checkPayAcctNumEdit.OutputType=java.util.ArrayList
checkPayAcctNumEdit.StmtType=PreparedStatement

#checkPayExDelAcctNumEdit.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('33','37') and key_client=#key_client:varchar# and key_link=#key_link:varchar#
#checkPayExDelAcctNumEdit.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('33','37') and concat(key_client,key_link) in (#keyClientId:varchar#)
#checkPayExDelAcctNumEdit.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('33','37') and key_client in (#keyClientId:varchar#)
#checkPayExDelAcctNumEdit.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('33','37') and key_client=#key_client:varchar#

checkPayExDelAcctNumEdit.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('33','37') and key_client=#key_client:varchar#  and 1=1 with UR
checkPayExDelAcctNumEdit.TOColumnMap={count=count}
checkPayExDelAcctNumEdit.OutputType=java.util.ArrayList
checkPayExDelAcctNumEdit.StmtType=PreparedStatement

#checkBypassAcctNumEdit.Query=select count(*) as count from ds_bypass where accnum=#accnum:varchar# and routingnum=#routingnum:varchar# and cpystatus='32' and key_client=#key_client:varchar# and key_link=#key_link:varchar#
#checkBypassAcctNumEdit.Query=select count(*) as count from ds_bypass where accnum=#accnum:varchar# and routingnum=#routingnum:varchar# and cpystatus='32' and concat(key_client,key_link) in (#keyClientId:varchar#)
#checkBypassAcctNumEdit.Query=select count(*) as count from ds_bypass where accnum=#accnum:varchar# and routingnum=#routingnum:varchar# and cpystatus='32' and key_client in (#keyClientId:varchar#)

#checkBypassAcctNumEdit.Query=select count(*) as count from ds_bypass where accnum=#accnum:varchar# and routingnum=#routingnum:varchar# and cpystatus='32' and key_client=#key_client:varchar#

checkBypassAcctNumEdit.Query=select count(*) as count from ds_bypass where accnum=#accnum:varchar# and routingnum=#routingnum:varchar# and cpystatus='32' and key_client=#key_client:varchar# and 1=1 with UR
checkBypassAcctNumEdit.TOColumnMap={count=count}
checkBypassAcctNumEdit.OutputType=java.util.ArrayList
checkBypassAcctNumEdit.StmtType=PreparedStatement

#UpdateBypassAcctNumEdit.Query=update ds_bypass set CPYSTATUS='39' where accnum=#accnum:varchar# and  routingnum=#routingnum:varchar# and CPYSTATUS='32' and key_client=#key_client:varchar# and key_link=#key_link:varchar#
#UpdateBypassAcctNumEdit.Query=update ds_bypass set CPYSTATUS='39' where accnum=#accnum:varchar# and  routingnum=#routingnum:varchar# and CPYSTATUS='32' and concat(key_client,key_link) in (#keyClientId:varchar#)
#UpdateBypassAcctNumEdit.Query=update ds_bypass set CPYSTATUS='39' where accnum=#accnum:varchar# and  routingnum=#routingnum:varchar# and CPYSTATUS='32' and key_client in (#keyClientId:varchar#)

UpdateBypassAcctNumEdit.Query=update ds_bypass set CPYSTATUS='39' where accnum=#accnum:varchar# and  routingnum=#routingnum:varchar# and CPYSTATUS='32' and key_client=#key_client:varchar#
UpdateBypassAcctNumEdit.StmtType=PreparedStatement

#Newly Added for Edit Routing Num changes check -- Ends

#updateExternalAccount.Query=update ds_payee_ref set versionnum=versionnum+1,cpypayeename1=#nickName:varchar#,cpyacctype=#accType:varchar#,cpybankcode=#extRoutingNum:varchar#,cpyboname1=(select distinct bnkref.BNKDES from DS_BANK_REF bnkref where bnkref.BNKCODE=#extRoutingNum:varchar#) where cpypayeeid=#cpypayeeid:varchar# and cpyaccnum=#extAccNo:varchar#

updateExternalAccount.Query=update ds_payee_ref set versionnum=versionnum+1,cpypayeename1=#nickName:varchar#,cpyacctype=#accType:varchar#,cpybankcode=#extRoutingNum:varchar#,cpyboname1=(select distinct bnkref.BNKDES from DS_BANK_REF bnkref where bnkref.BNKCODE=#extRoutingNum:varchar#) where cpypayeeid=#cpypayeeid:varchar#
updateExternalAccount.StmtType=PreparedStatement

updateExtAccDsPayTxns.Query=update ds_pay_txns set versionnum=versionnum+1,paypayeename1=#nickName:varchar# where PAYPAYEEACCNUM=#cpypayeeid:varchar#
updateExtAccDsPayTxns.StmtType=PreparedStatement

#setExtAcctEditLogDetails.Query=insert into ds_payee_ref_log(cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,52,23,CURRENT_TIMESTAMP, #created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,(select versionnum from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),'32','N')
#setExtAcctEditLogDetails.Query=insert into ds_payee_ref_log(cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,key_client,key_link,ver_trials,cpystatus,deleteflag,usercomments,life_user_id) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,52,23,CURRENT_TIMESTAMP, #created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#key_client:varchar#,#key_link:varchar#,(select versionnum from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#cpystatus:varchar#,'N',#usercomments:varchar#,#life_user_id:varchar#)
#setExtAcctEditLogDetails.Query=insert into ds_payee_ref_log(cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag,sign_up_mode,key_client,key_link,account_owner,account_form,voided_check) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,(select distinct bnkref.BNKDES from DS_BANK_REF bnkref where bnkref.BNKCODE=#cpybankcode:varchar#),#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,#fa_id:numeric#,#branch_id:numeric#,CURRENT_TIMESTAMP, #created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,(select versionnum from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#cpystatus:varchar#,#deleteflag:varchar#,(select sign_up_mode from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#key_client:varchar#,#key_link:varchar#,(select account_owner from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),(select account_form from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),(select voided_check from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#))

setExtAcctEditLogDetails.Query=insert into ds_payee_ref_log(cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag,sign_up_mode,key_client,key_link,account_owner,account_form,voided_check) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,(select distinct bnkref.BNKDES from DS_BANK_REF bnkref where bnkref.BNKCODE=#cpybankcode:varchar#),#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,#fa_id:numeric#,#branch_id:numeric#,CURRENT_TIMESTAMP, #created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,(select versionnum from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#cpystatus:varchar#,#deleteflag:varchar#,#sign_up_mode:varchar#,#key_client:varchar#,#key_link:varchar#,#account_owner:varchar#,#account_form:varchar#,#voided_check:varchar#)
setExtAcctEditLogDetails.StmtType=PreparedStatement

#Edit External Account Ends

#Delete External Account Starts

#checkExtAccDelDsPayTxnsDetails.Query=select count(*) as count from ds_pay_txns where paypayeeaccnum=#cpypayeeid:varchar# and payccsstatuscode in('2','6','46') and trial_depo='N'

checkExtAccDelDsPayTxnsDetails.Query=select count(*) as count from ds_pay_txns where paypayeeaccnum=#cpypayeeid:varchar# and payccsstatuscode in('2','6','46','80') and trial_depo='N'
checkExtAccDelDsPayTxnsDetails.TOColumnMap={count=count}
checkExtAccDelDsPayTxnsDetails.OutputType=java.util.ArrayList
checkExtAccDelDsPayTxnsDetails.StmtType=PreparedStatement

#getExtAccDelDsPayTxnsDetails.Query=select versionnum,frombr_acct_no_fa,tobr_acct_no_fa,txn_type,acct_user_id,paypymtdate,requested_exe_dt,paydebitamt,paypayref,paybatchref,fromfa_id,frombranch_id,tofa_id,tobranch_id,createdby_name,paydebitaccnum,paypayeeaccnum,keyaccountnumber_from,created_by_role,payccsstatuscode,payrecurring,life_user_id,current_owner_role,par_txn_no,rta_booked_in_flag from ds_pay_txns where paypayeeaccnum=#cpypayeeid:varchar# and payccsstatuscode in('2','6','46') and trial_depo='N'
#getExtAccDelDsPayTxnsDetails.Query=select versionnum,frombr_acct_no_fa,tobr_acct_no_fa,txn_type,acct_user_id,paypymtdate,requested_exe_dt,paydebitamt,paypayref,paybatchref,fromfa_id,frombranch_id,tofa_id,tobranch_id,createdby_name,paydebitaccnum,paypayeeaccnum,keyaccountnumber_from,created_by_role,payccsstatuscode,payrecurring,life_user_id,current_owner_role,par_txn_no,rta_booked_in_flag from ds_pay_txns where paypayeeaccnum=#cpypayeeid:varchar# and payccsstatuscode in('2','6') or (payccsstatuscode='46' and (REQUESTED_EXE_DT > CURRENT_TIMESTAMP)) and trial_depo='N'

getExtAccDelDsPayTxnsDetails.Query=select versionnum,frombr_acct_no_fa,tobr_acct_no_fa,txn_type,acct_user_id,paypymtdate,requested_exe_dt,paydebitamt,paypayref,paybatchref,fromfa_id,frombranch_id,tofa_id,tobranch_id,createdby_name,paydebitaccnum,paypayeeaccnum,keyaccountnumber_from,created_by_role,payccsstatuscode,payrecurring,life_user_id,current_owner_role,par_txn_no,rta_booked_in_flag from ds_pay_txns where paypayeeaccnum=#cpypayeeid:varchar# and (payccsstatuscode in('2','6','80') or (payccsstatuscode='46' and (REQUESTED_EXE_DT > CURRENT_TIMESTAMP))) and trial_depo='N' with ur
getExtAccDelDsPayTxnsDetails.TOColumnMap={versionnum=versionnum,frombr_acct_no_fa=frombr_acct_no_fa,tobr_acct_no_fa=tobr_acct_no_fa,txn_type=txn_type,acct_user_id=acct_user_id,paypymtdate=paypymtdate,requested_exe_dt=requested_exe_dt,paydebitamt=paydebitamt,paypayref=paypayref,paybatchref=paybatchref,fromfa_id=fromfa_id,frombranch_id=frombranch_id,tofa_id=tofa_id,tobranch_id=tobranch_id,createdby_name=createdby_name,paydebitaccnum=paydebitaccnum,paypayeeaccnum=paypayeeaccnum,keyaccountnumber_from=keyaccountnumber_from,created_by_role=created_by_role,payccsstatuscode=payccsstatuscode,payrecurring=payrecurring,life_user_id=life_user_id,current_owner_role=current_owner_role,par_txn_no=par_txn_no,rta_booked_in_flag=rta_booked_in_flag}
getExtAccDelDsPayTxnsDetails.OutputType=com.tcs.ebw.payments.transferobject.ExtAcctMaintDelDsPayTxnsOutTO[]
getExtAccDelDsPayTxnsDetails.StmtType=PreparedStatement

#setExtAccDelDsPayTxnsDetails.Query=insert into DS_PAY_TXNS_LOG (TRX_LOG_KEY,CREATED_MODIFIED_BY_NAME,PAYGROUPID,PAYBATCHREF,PAYPAYREF,DEBIT_ACCT_NO,CREDIT_ACT_NO,FROMFA_ID,FROMBRANCH_ID,TOFA_ID,TOBRANCH_ID,CREATED_MODIFIED_DATE,CREATED_MODIFIED_BY_ID,CREATED_MODIFIED_BY_EMP_ID,CREATED_MODIFIED_BY_ROLE,LIFE_USER_ID,PAYINVOICEAMT,CREATED_MODIFIED_BY_COMMENTS,LAST_ACTION,AMOUNT,REQUEST_DATE,TXN_STATUS) values (next value for dspaytxnslog_seq,#created_modified_by_name:varchar#,#paygroupid:varchar#,#paybatchref:varchar#,#paypayref:varchar#,#debit_acct_no:varchar#,#credit_act_no:varchar#,#fromfa_id:numeric#,#frombranch_id:numeric#,#tofa_id:numeric#,#tobranch_id:numeric#,CURRENT_TIMESTAMP,#created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#life_user_id:varchar#,#payinvoiceamt:numeric#,#created_modified_by_comments:varchar#,#last_action:varchar#,#amount:numeric#,#request_date:timestamp#,'20')

setExtAccDelDsPayTxnsDetails.Query=insert into DS_PAY_TXNS_LOG (TRX_LOG_KEY,CREATED_MODIFIED_BY_NAME,PAYGROUPID,PAYBATCHREF,PAYPAYREF,DEBIT_ACCT_NO,CREDIT_ACT_NO,FROMFA_ID,FROMBRANCH_ID,TOFA_ID,TOBRANCH_ID,CREATED_MODIFIED_DATE,CREATED_MODIFIED_BY_ID,CREATED_MODIFIED_BY_EMP_ID,CREATED_MODIFIED_BY_ROLE,LIFE_USER_ID,PAYINVOICEAMT,CREATED_MODIFIED_BY_COMMENTS,LAST_ACTION,AMOUNT,REQUEST_DATE,TXN_STATUS) values (next value for dspaytxnslog_seq,#created_modified_by_name:varchar#,#paygroupid:varchar#,#paybatchref:varchar#,#paypayref:varchar#,#debit_acct_no:varchar#,#credit_act_no:varchar#,#fromfa_id:numeric#,#frombranch_id:numeric#,#tofa_id:numeric#,#tobranch_id:numeric#,CURRENT_TIMESTAMP,#created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#life_user_id:varchar#,#payinvoiceamt:numeric#,#created_modified_by_comments:varchar#,#last_action:varchar#,#amount:numeric#,#request_date:timestamp#,#txn_status:varchar#)
setExtAccDelDsPayTxnsDetails.StmtType=PreparedStatement

#deleteExtAccTxnParent.Query=update txn_parent set txn_parent_ver=txn_parent_ver+1,status='20' where par_txn_no in (select par_txn_no from ds_pay_txns where paypayref=#paypayref:varchar# and life_user_id=#lifeuserid:varchar#)
#deleteExtAccTxnParent.Query=update txn_parent set txn_parent_ver=txn_parent_ver+1,status='20' where par_txn_no in (select par_txn_no from ds_pay_txns where paypayref=#paypayref:varchar#)
#deleteExtAccTxnParent.Query=update txn_parent set txn_parent_ver=txn_parent_ver+1,status=#statusCode:varchar# where par_txn_no in (select par_txn_no from ds_pay_txns where paypayref=#paypayref:varchar#)

deleteExtAccTxnParent.Query=update txn_parent set txn_parent_ver=txn_parent_ver+1,status=#statusCode:varchar# where par_txn_no=#par_txn_no:numeric#
deleteExtAccTxnParent.StmtType=PreparedStatement

#deleteExtAccBatch.Query=update ds_batch set batversionnum=batversionnum+1,BATSTATUS='20' where batbatchref in (select paybatchref from ds_pay_txns where paypayref=#paypayref:varchar# and life_user_id=#lifeuserid:varchar#)
#deleteExtAccBatch.Query=update ds_batch set batversionnum=batversionnum+1,BATSTATUS='20' where batbatchref in (select paybatchref from ds_pay_txns where paypayref=#paypayref:varchar#)
#deleteExtAccBatch.Query=update ds_batch set batversionnum=batversionnum+1,batstatus=#statusCode:varchar# where batbatchref in (select paybatchref from ds_pay_txns where paypayref=#paypayref:varchar#)

deleteExtAccBatch.Query=update ds_batch set batversionnum=batversionnum+1,batstatus=#statusCode:varchar# where batbatchref =#paybatchref:varchar#
deleteExtAccBatch.StmtType=PreparedStatement

#deleteExtAccDsPayTxns.Query=update ds_pay_txns set versionnum=versionnum+1,PAYCCSSTATUSCODE='20',requested_exe_dt=#requestedexedate:timestamp# where paypayref=#paypayref:varchar# and life_user_id=#lifeuserid:varchar#
#deleteExtAccDsPayTxns.Query=update ds_pay_txns set versionnum=versionnum+1,PAYCCSSTATUSCODE='20',requested_exe_dt=#requestedexedate:timestamp# where paypayref=#paypayref:varchar#

deleteExtAccDsPayTxns.Query=update ds_pay_txns set versionnum=versionnum+1,payccsstatuscode=#statusCode:varchar#,requested_exe_dt=#requestedexedate:timestamp# where paypayref=#paypayref:varchar# and payccsstatuscode in ('2','6','46','80')
deleteExtAccDsPayTxns.StmtType=PreparedStatement

#deleteExtAccDsPayeeRef.Query=update ds_payee_ref set versionnum=versionnum+1,CPYSTATUS='37' where cpypayeeid=#cpypayeeid:varchar# and life_user_id=#lifeuserid:varchar#
#deleteExtAccDsPayeeRef.Query=update ds_payee_ref set versionnum=versionnum+1,CPYSTATUS='37' where cpypayeeid=#cpypayeeid:varchar# and key_client=#key_client:varchar# and key_link=#key_link:varchar#
#deleteExtAccDsPayeeRef.Query=update ds_payee_ref set versionnum=versionnum+1,CPYSTATUS='37' where cpypayeeid=#cpypayeeid:varchar#

deleteExtAccDsPayeeRef.Query=update ds_payee_ref set versionnum=versionnum+1,cpystatus=#status:varchar# where cpypayeeid=#cpypayeeid:varchar#
deleteExtAccDsPayeeRef.StmtType=PreparedStatement

#setExtAcctDeleteLogDetails.Query=insert into ds_payee_ref_log(cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,52,23,CURRENT_TIMESTAMP, #created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,(select versionnum from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),'37','N')
#setExtAcctDeleteLogDetails.Query=insert into ds_payee_ref_log(cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,key_client,key_link,ver_trials,cpystatus,deleteflag,usercomments,life_user_id) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,52,23,CURRENT_TIMESTAMP, #created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#key_client:varchar#,#key_link:varchar#,(select versionnum from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#cpystatus:varchar#,'N',#usercomments:varchar#,#life_user_id:varchar#)
#setExtAcctDeleteLogDetails.Query=insert into ds_payee_ref_log(cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag,sign_up_mode,key_client,key_link,account_owner,account_form,voided_check) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,#fa_id:numeric#,#branch_id:numeric#,CURRENT_TIMESTAMP, #created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,(select versionnum from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#cpystatus:varchar#,#deleteflag:varchar#,(select sign_up_mode from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#key_client:varchar#,#key_link:varchar#,(select account_owner from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),(select account_form from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),(select voided_check from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#))

setExtAcctDeleteLogDetails.Query=insert into ds_payee_ref_log(cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag,sign_up_mode,key_client,key_link,account_owner,account_form,voided_check) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,#fa_id:numeric#,#branch_id:numeric#,CURRENT_TIMESTAMP, #created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,(select versionnum from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#cpystatus:varchar#,#deleteflag:varchar#,#sign_up_mode:varchar#,#key_client:varchar#,#key_link:varchar#,#account_owner:varchar#,#account_form:varchar#,#voided_check:varchar#)
setExtAcctDeleteLogDetails.StmtType=PreparedStatement

#Delete External Account Ends

#Details External Account Starts

#getExtDetailsAcctRefNum.Query=select versionnum,CPYACCTYPE as accType,CPYBONAME1 as accHeldAt,CPYPAYEENAME1 as nickName,(select dsdom.dmndomainvaldesc from DS_DOMAINS dsdom where dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=CPYSTATUS) as status,cpypayeeid,MODIFIEDDATE as verificationDate from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#
#getExtDetailsAcctRefNum.Query=select versionnum,CPYACCTYPE as accType,CPYBONAME1 as accHeldAt,CPYPAYEENAME1 as nickName,dsdom.dmndomainvaldesc as status,cpypayeeid,MODIFIEDDATE as verificationDate from ds_payee_ref DPT left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS where cpypayeeid=#cpypayeeid:varchar#
#getExtDetailsAcctRefNum.TOColumnMap={versionnum=versionnum,accType=accType,accHeldAt=accHeldAt,nickName=nickName,status=status,cpypayeeid=cpypayeeid,verificationDate=verificationDate}
#getExtDetailsAcctRefNum.Query=select dpr.versionnum,dsdom1.dmndomainvaldesc as accType,dsbnk.bnkdes as accHeldAt,CPYPAYEENAME1 as nickName,dsdom.dmndomainvaldesc as status,dpr.cpypayeeid,MODIFIEDDATE as verificationDate from ds_payee_ref dpr left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=dpr.CPYSTATUS left outer join DS_DOMAINS dsdom1 on dsdom1.dmndomain='D_NewExtAcctType' and dsdom1.dmndomainval=dpr.cpyacctype left outer join DS_BANK_REF dsbnk on dsbnk.bnkcode=dpr.CPYBANKCODE where dpr.cpypayeeid=#cpypayeeid:varchar#

getExtDetailsAcctRefNum.Query=select dpr.versionnum,dsdom1.dmndomainvaldesc as accType,dpr.CPYBONAME1 as accHeldAt,CPYPAYEENAME1 as nickName,dsdom.dmndomainvaldesc as status,dpr.cpypayeeid,MODIFIEDDATE as verificationDate from ds_payee_ref dpr left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=dpr.CPYSTATUS left outer join DS_DOMAINS dsdom1 on dsdom1.dmndomain='D_NewExtAcctType' and dsdom1.dmndomainval=dpr.cpyacctype where dpr.cpypayeeid=#cpypayeeid:varchar#
getExtDetailsAcctRefNum.TOColumnMap={versionnum=versionnum,accType=accType,accHeldAt=accHeldAt,nickName=nickName,status=status,cpypayeeid=cpypayeeid,verificationDate=verificationDate}
getExtDetailsAcctRefNum.OutputType=com.tcs.ebw.payments.transferobject.ExtAcctDetailsTO
getExtDetailsAcctRefNum.StmtType=PreparedStatement

#getAccHistoryLIST.Query=select CREATEDBY,LAST_ACTION,CPYPAYEENAME1,CPYSTATUS,COMMENTS,ACTIONDATE,count(*) over() total_rows from (select CREATED_MODIFIED_BY_ID as CREATEDBY,DPT.LAST_ACTION,DPT.CPYPAYEENAME1,(select dsdom.dmndomainvaldesc from DS_DOMAINS dsdom where dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS) as CPYSTATUS,DPT.USERCOMMENTS as COMMENTS,TIMESTAMP(CREATED_MODIFIED_DATE) as ACTIONDATE from  DS_PAYEE_REF_LOG DPT where DPT.CPYPAYEEID=#cpypayeeid:varchar#  )
#getAccHistoryLIST.Query=select CREATEDBY,LAST_ACTION,CPYACCNUM,CPYACCTYPE,CPYBANKCODE,CPYBONAME1,CPYPAYEENAME1,CPYSTATUS,COMMENTS,ACTIONDATE,count(*) over() total_rows from (select CREATED_MODIFIED_BY_ID as CREATEDBY,DPT.LAST_ACTION,DPT.CPYACCNUM,DPT.CPYACCTYPE,DPT.CPYBANKCODE,DPT.CPYBONAME1,DPT.CPYPAYEENAME1,(select dsdom.dmndomainvaldesc from DS_DOMAINS dsdom where dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS) as CPYSTATUS,DPT.USERCOMMENTS as COMMENTS,TIMESTAMP(CREATED_MODIFIED_DATE) as ACTIONDATE from  DS_PAYEE_REF_LOG DPT where DPT.CPYPAYEEID=#cpypayeeid:varchar#)
#getAccHistoryLIST.Query=select CREATEDBY,LAST_ACTION,CPYACCNUM,CPYACCTYPE,CPYBANKCODE,CPYBONAME1,CPYPAYEENAME1,CPYSTATUS,COMMENTS,ACTIONDATE,count(*) over() total_rows from (select CREATED_MODIFIED_BY_ID as CREATEDBY,DPT.LAST_ACTION,DPT.CPYACCNUM,DPT.CPYACCTYPE,DPT.CPYBANKCODE,DPT.CPYBONAME1,DPT.CPYPAYEENAME1, dsdom.dmndomainvaldesc as CPYSTATUS,DPT.USERCOMMENTS as COMMENTS,TIMESTAMP(CREATED_MODIFIED_DATE) as ACTIONDATE from  DS_PAYEE_REF_LOG DPT left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS where DPT.CPYPAYEEID=#cpypayeeid:varchar#)
#getAccHistoryLIST.Query=select CREATEDBY,LAST_ACTION,CPYACCNUM,CPYACCTYPE,CPYBANKCODE,CPYBONAME1,CPYPAYEENAME1,CPYSTATUS,COMMENTS,ACTIONDATE,count(*) over() total_rows from (select CREATED_MODIFIED_BY_ID as CREATEDBY,DPT.LAST_ACTION,DPT.CPYACCNUM,dsdom1.dmndomainvaldesc as CPYACCTYPE,DPT.CPYBANKCODE,DPT.CPYBONAME1,DPT.CPYPAYEENAME1, dsdom.dmndomainvaldesc as CPYSTATUS,DPT.USERCOMMENTS as COMMENTS,TIMESTAMP(CREATED_MODIFIED_DATE) as ACTIONDATE from  DS_PAYEE_REF_LOG DPT left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS left outer join DS_DOMAINS dsdom1 on dsdom1.dmndomain='D_NewExtAcctType' and dsdom1.dmndomainval=DPT.cpyacctype where DPT.CPYPAYEEID=#cpypayeeid:varchar#)

#getAccHistoryLIST.Query=select CREATEDBY,LAST_ACTION,CPYACCNUM,CPYACCTYPE,CPYBANKCODE,CPYBONAME1,CPYPAYEENAME1,CPYSTATUS,COMMENTS,ACTIONDATE,count(*) over() total_rows from (select CREATED_MODIFIED_BY_ID as CREATEDBY,DPT.LAST_ACTION,DPT.CPYACCNUM,dsdom1.dmndomainvaldesc as CPYACCTYPE,DPT.CPYBANKCODE,dsbnk.bnkdes as CPYBONAME1,DPT.CPYPAYEENAME1,dsdom.dmndomainvaldesc as CPYSTATUS,DPT.USERCOMMENTS as COMMENTS,TIMESTAMP(DPT.CREATED_MODIFIED_DATE) as ACTIONDATE from DS_PAYEE_REF_LOG DPT left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS left outer join DS_DOMAINS dsdom1 on dsdom1.dmndomain='D_NewExtAcctType' and dsdom1.dmndomainval=DPT.cpyacctype left outer join DS_BANK_REF dsbnk on dsbnk.bnkcode=DPT.CPYBANKCODE where DPT.CPYPAYEEID=#cpypayeeid:varchar# order by ACTIONDATE) with ur
#getAccHistoryLIST.TOColumnMap={CREATEDBY=CREATEDBY,LAST_ACTION=LAST_ACTION,CPYACCNUM=CPYACCNUM,CPYACCTYPE=CPYACCTYPE,CPYBANKCODE=CPYBANKCODE,CPYBONAME1=CPYBONAME1,CPYPAYEENAME1=CPYPAYEENAME1,CPYSTATUS=CPYSTATUS,COMMENTS=COMMENTS,ACTIONDATE=ACTIONDATE,total_rows=total_rows}

#<Phase3> <Modified for Phase 3 by Nikita on Date (01/Apr/2011)>
getAccHistoryLIST.Query= select CREATEDBY,LAST_ACTION,CPYACCNUM,CPYACCTYPE,CPYBANKCODE,CPYBONAME1,CPYPAYEENAME1,CPYSTATUS,COMMENTS,ACTIONDATE,count(*) over() total_rows from (select CREATED_MODIFIED_BY_ID as CREATEDBY,DPT.LAST_ACTION,DPT.CPYACCNUM,dsdom1.dmndomainvaldesc as CPYACCTYPE,DPT.CPYBANKCODE,dsbnk.bnkdes as CPYBONAME1,DPT.CPYPAYEENAME1,case when dpr.THIRD_PARTY_IND='Yes' and dsdom.dmndomainvaldesc='Active' then dsdom.dmndomainvaldesc||' (Outbound Only)' else dsdom.dmndomainvaldesc end  as CPYSTATUS, DPT.USERCOMMENTS as COMMENTS,TIMESTAMP(DPT.CREATED_MODIFIED_DATE) as ACTIONDATE from DS_PAYEE_REF_LOG DPT left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS left outer join DS_DOMAINS dsdom1 on dsdom1.dmndomain='D_NewExtAcctType' and dsdom1.dmndomainval=DPT.cpyacctype left outer join DS_BANK_REF dsbnk on dsbnk.bnkcode=DPT.CPYBANKCODE left outer join DS_PAYEE_REF dpr on dpr.CPYPAYEEID=DPT.CPYPAYEEID where DPT.CPYPAYEEID=#cpypayeeid:varchar# order by ACTIONDATE) with ur
getAccHistoryLIST.TOColumnMap={CREATEDBY=CREATEDBY,LAST_ACTION=LAST_ACTION,CPYACCNUM=CPYACCNUM,CPYACCTYPE=CPYACCTYPE,CPYBANKCODE=CPYBANKCODE,CPYBONAME1=CPYBONAME1,CPYPAYEENAME1=CPYPAYEENAME1,CPYSTATUS=CPYSTATUS,COMMENTS=COMMENTS,ACTIONDATE=ACTIONDATE,total_rows=total_rows}
getAccHistoryLIST.OutputType=java.util.ArrayList
getAccHistoryLIST.StmtType=PreparedStatement
getAccHistoryLIST.SortKeys=ACTIONDATE:datetime:ASC

#getVerificationDtlsLIST.Query=select COALESCE(account_form,'No') as ADD_ACC_FORM_RECVD, COALESCE(voided_check,'No') as VOID_CHK_RECVD, CREATED_MODIFIED_BY_ROLE as CONFIRMED_BY,CREATED_MODIFIED_BY_EMP_ID as USER_ID,TIMESTAMP(CREATED_MODIFIED_DATE) as ACTIONDATE from ds_payee_ref_log where CPYPAYEEID=#cpypayeeid:varchar#
#getVerificationDtlsLIST.Query=select COALESCE((select account_form from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),'No') as ADD_ACC_FORM_RECVD,COALESCE((select voided_check from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),'No') as VOID_CHK_RECVD,CREATED_MODIFIED_BY_ROLE as CONFIRMED_BY,CREATED_MODIFIED_BY_EMP_ID as USER_ID,TIMESTAMP(CREATED_MODIFIED_DATE) as ACTIONDATE from ds_payee_ref_log where CPYPAYEEID=#cpypayeeid:varchar#

#getLnkdMSSBAcctsLIST.Query=select ACCTNUM,CNFDATE,CNFRMDBY,USRID,count(*) over() total_rows (select (INT_OFFICE || '-' || INT_ACCOUNT || '-' || INT_FA) as ACCTNUM,CONFIRMATION_DATE as CNFDATE,APPROVER_NAME as CNFRMDBY,APPROVER_ID as USRID from EXT_ACCOUNT_LINK where EXT_REFERENCE_ID=#cpypayeeid:varchar#)

getLnkdMSSBAcctsLIST.Query=select (INT_OFFICE || '-' || INT_ACCOUNT || '-' || INT_FA) as ACCTNUM,date(CONFIRMATION_DATE) as CNFDATE,APPROVER_NAME as CNFRMDBY,APPROVER_ID as USRID from EXT_ACCOUNT_LINK where EXT_REFERENCE_ID=#cpypayeeid:varchar# with ur
getLnkdMSSBAcctsLIST.TOColumnMap={ACCTNUM=ACCTNUM,CNFDATE=CNFDATE,CNFRMDBY=CNFRMDBY,USRID=USRID}
getLnkdMSSBAcctsLIST.OutputType=java.util.ArrayList
getLnkdMSSBAcctsLIST.StmtType=PreparedStatement
#<Phase3> <Added for Phase 3 by Nikita on Date (29/Mar/2011)>-Start
#<Phase3> <Modified for Defect id:34357 by Nikita 
#Modified for CR-261 by 259245
getextAccDeatils.Query=select account_owner as accOwner,case when THIRD_PARTY_IND='Yes' then THIRD_PARTY_IND else 'No' end as thirdpartyaccradio,eaod.FIRST_NAME as namethirdpartyacc,cpybranchscode,ofac_case_id from ds_payee_ref dpr left outer join EXT_ACCT_OWNER_DTLS eaod on  eaod.CPYPAYEEID=dpr.cpypayeeid where dpr.cpypayeeid=#cpypayeeid:varchar# with ur
getextAccDeatils.TOColumnMap={accOwner=accOwner,thirdpartyaccradio=thirdpartyaccradio,namethirdpartyacc=namethirdpartyacc,cpybranchscode=cpybranchscode,ofac_case_id=ofac_case_id}
getextAccDeatils.OutputType=com.tcs.ebw.payments.transferobject.ExtAcctViewTO
getextAccDeatils.StmtType=PreparedStatement
#<Phase3> <Added for Phase 3 by Nikita on Date (29/Mar/2011)>-End

#Details External Account Ends

#Account Maintenance List Ends


########### Queries Related to  Create , Modify , Cancel , Skip , Approve , Reject screens in both COE and CS #######################

getPaymentFrequency.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_Duration' order by sort_ord with ur
getPaymentFrequency.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getPaymentFrequency.OutputType=java.util.Vector

approveBatch.Query=update ds_batch set batversionnum=batversionnum+1,batstatus=#batstatus:varchar#, batmodifieddate=#batmodifieddate:timestamp#,batmodifiedby=#batmodifiedby:varchar#, batauthby1=#batauthby1:varchar#,emp_id1=#emp_id1:varchar# where batbatchref=#batbatchref:varchar#
approveBatch.StmtType=PreparedStatement

approvepayTransaction.Query=update ds_pay_txns set versionnum=versionnum+1,modifieddate=#modifieddate:timestamp#,payccsstatuscode=#payccsstatuscode:varchar#,modifiedby=#modifiedby:varchar#,sent_to_paymnt=#sent_to_paymnt:varchar#,actual_exe_dt=#actual_exe_dt:timestamp#,coe_user_name=#coe_user_name:varchar#,next_approver_role=#next_approver_role:varchar#,dont_spawn_flag=#dont_spawn_flag:varchar#,ofac_case_id=#ofac_case_id:varchar# where paypayref=#paypayref:varchar# and paybatchref=#paybatchref:varchar#
approvepayTransaction.StmtType=PreparedStatement

setBatch.Query=insert into ds_batch (batbatchref,batgrpid,batapplicationid,batnooftxns,batstatus,batcreatedby,batmodifiedby,batcreateddate,batmodifieddate,txn_entry_date) values(#batbatchref:varchar#,#batgrpid:varchar#,#batapplicationid:varchar#,#batnooftxns:numeric#,#batstatus:varchar#,#batcreatedby:varchar#,#batmodifiedby:varchar#,#batcreateddate:timestamp#,CURRENT_TIMESTAMP,#txn_entry_date:timestamp#)
setBatch.StmtType=PreparedStatement

setpayTransaction.Query=insert into ds_pay_txns (payccsstatuscode,paytrxkey,paygroupid,paybatchref,paypayref,paytypecode,paydebitaccnum,paycurrcode,paydebitamt,paypymtdate,paypayeeaccnum,payrecurring,payfrequency,payfreqpaymentcount,payfreqenddate,createdby,modifiedby,acct_user_id,par_txn_no,createddate,fromfa_id,fromfa_id_hist,tofa_id,tofa_id_hist,frombranch_id,frombranch_id_hist,tobranch_id,tobranch_id_hist,fromacct_tier,toacct_tier,acct_type1,acct_from_type,acct_to_type,acct_user_name,fromacct_no_hist,toacct_no_hist,created_by_role,createdby_name,txn_type,keyaccountnumber_from,keyaccountnumber_to,friendlyname_from,friendlyname_to,nickname_from,nickname_to,life_user_id,frombr_acct_no_fa,tobr_acct_no_fa,fromacct_type1,toacct_type1,requested_exe_dt,actual_exe_dt,sent_to_paymnt,payfreqlimit,trial_depo,paytxneprydate,payissueddate,modifieddate,rsa_review_flag,next_approver_role,initiator_role,initiator_id,current_owner_role,current_owner_id,auth_mode,auth_info_reciever,verbal_auth_client_name,verbal_auth_date,verbal_auth_time,client_verification_desc,same_name_flag,dont_spawn_flag,retirement_mnemonic,qualifier,reverse_qualifier,modifiedby_name,auth_confirmed_by,ofac_case_id,display_qualifier) values (#payccsstatuscode:varchar#,#paytrxkey:numeric#,#paygroupid:varchar#,#paybatchref:varchar#,#paypayref:varchar#,#paytypecode:varchar#,#paydebitaccnum:varchar#,#paycurrcode:varchar#,#paydebitamt:BigDecimal#,#paypymtdate:timestamp#,#paypayeeaccnum:varchar#,#payrecurring:varchar#,#payfrequency:varchar#,#payfreqpaymentcount:numeric#,#payfreqenddate:timestamp#,#createdby:varchar#,#modifiedby:varchar#,#acct_user_id:varchar#,#par_txn_no:numeric#,#createddate:timestamp#,#fromfa_id:numeric#,#fromfa_id_hist:numeric#,#tofa_id:numeric#,#tofa_id_hist:numeric#,#frombranch_id:numeric#,#frombranch_id_hist:numeric#,#tobranch_id:numeric#,#tobranch_id_hist:numeric#,#fromacct_tier:varchar#,#toacct_tier:varchar#,#acct_type1:numeric#,#acct_from_type:varchar#,#acct_to_type:varchar#,#acct_user_name:varchar#,#fromacct_no_hist:varchar#,#toacct_no_hist:varchar#,#created_by_role:varchar#,#createdby_name:varchar#,#txn_type:varchar#,#keyaccountnumber_from:varchar#,#keyaccountnumber_to:varchar#,#friendlyname_from:varchar#,#friendlyname_to:varchar#,#nickname_from:varchar#,#nickname_to:varchar#,#life_user_id:varchar#,#frombr_acct_no_fa:varchar#,#tobr_acct_no_fa:varchar#,#fromacct_type1:varchar#,#toacct_type1:varchar#,#requested_exe_dt:timestamp#,#actual_exe_dt:timestamp#,#sent_to_paymnt:varchar#,#payfreqlimit:BigDecimal#,#trial_depo:varchar#,#paytxneprydate:timestamp#,#payissueddate:timestamp#,CURRENT_TIMESTAMP,#rsa_review_flag:varchar#,#next_approver_role:varchar#,#initiator_role:varchar#,#initiator_id:varchar#,#current_owner_role:varchar#,#current_owner_id:varchar#,#auth_mode:varchar#,#auth_info_reciever:varchar#,#verbal_auth_client_name:varchar#,#verbal_auth_date:timestamp#,#verbal_auth_time:varchar#,#client_verification_desc:varchar#,#same_name_flag:varchar#,#dont_spawn_flag:varchar#,#retirement_mnemonic:varchar#,#qualifier:varchar#,#reverse_qualifier:varchar#,#modifiedby_name:varchar#,#auth_confirmed_by:varchar#,#ofac_case_id:varchar#,#display_qualifier:varchar#)
setpayTransaction.StmtType=PreparedStatement

setRecurringTransaction.Query=insert into txn_parent (par_txn_no,from_acct,to_acct,amount,frequency,duration,untildate,thrshold_amt,max_txn_no,accum_amt,accum_txn_no,last_txn_id,last_txn_dt,next_txn_id,next_txn_dt,status,create_dt,prefered_previous_txn_dt,actual_previous_txn_dt,modifiedby,modifieddate,initiation_dt,par_txn_request_dt) values (#par_txn_no:numeric#,#from_acct:varchar#,#to_acct:varchar#,#amount:BigDecimal#,#frequency:varchar#,#duration:varchar#,#untildate:timestamp#,#thrshold_amt:BigDecimal#,#max_txn_no:numeric#,#accum_amt:BigDecimal#,#accum_txn_no:numeric#,#last_txn_id:varchar#,#last_txn_dt:timestamp#,#next_txn_id:varchar#,#next_txn_dt:timestamp#,#status:varchar#,#create_dt:timestamp#,#prefered_previous_txn_dt:timestamp#,#actual_previous_txn_dt:timestamp#,#modifiedby:varchar#,#modifieddate:timestamp#,#initiation_dt:timestamp#,#par_txn_request_dt:timestamp#)
setRecurringTransaction.StmtType=PreparedStatement

setTransactionLog.Query=insert into ds_pay_txns_log (trx_log_key,created_modified_by_name,paygroupid,paybatchref,paypayref,debit_acct_no,credit_act_no,fromfa_id,frombranch_id,tofa_id,tobranch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,life_user_id,payinvoiceamt,created_modified_by_comments,last_action,amount,request_date,frequency,recurring_freq,repeat_untill,txn_status,trial_depo,initiation_date,keyaccountnumber_from,keyaccountnumber_to,paypayeeid,dont_spawn_flag,same_name_flag,auth_mode,auth_info_reciever,verbal_auth_client_name,verbal_auth_date,verbal_auth_time,client_verification_desc,rta_booked_in_flag,retirement_mnemonic,qualifier,reverse_qualifier,untildollarlimit,untilfreqenddate,untilnooftransfers,payee_name,third_party_reason,certified_check_flag,pickup_option,printing_branch,printer_name,default_address_flag,	foriegn_address_flag,delivery_address_line1,delivery_address_line2,delivery_address_line3,delivery_address_line4,print_address_flag,memo_line1,memo_line2,print_memo_check_flag,print_memo_stub_flag,fee_amount,charged_to,est_pickup_time, delivered_to_type,delivered_to_name,type_of_id,id_number,check_no,tracking_id,paytxneprydate,owner_role,owner_id,next_approver_role,authinfo_confby_name,issue_dt,check_status,void_reason_code,void_reason_desc,payee_type,ofac_case_id,display_qualifier) values (next value for dspaytxnslog_seq,#created_modified_by_name:varchar#,#paygroupid:varchar#,#paybatchref:varchar#,#paypayref:varchar#,#debit_acct_no:varchar#,#credit_act_no:varchar#,#fromfa_id:numeric#,#frombranch_id:numeric#,#tofa_id:numeric#,#tobranch_id:numeric#,CURRENT_TIMESTAMP,#created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#life_user_id:varchar#,#payinvoiceamt:numeric#,#created_modified_by_comments:varchar#,#last_action:varchar#,#amount:BigDecimal#,#request_date:timestamp#,#frequency:varchar#,#recurring_freq:varchar#,#repeat_untill:varchar#,#txn_status:varchar#,#trial_depo:varchar#,#initiation_date:timestamp#,#keyaccountnumber_from:varchar#,#keyaccountnumber_to:varchar#,#paypayeeid:varchar#,#dont_spawn_flag:varchar#,#same_name_flag:varchar#,#auth_mode:varchar#,#auth_info_reciever:varchar#,#verbal_auth_client_name:varchar#,#verbal_auth_date:timestamp#,#verbal_auth_time:varchar#,#client_verification_desc:varchar#,#rta_booked_in_flag:varchar#,#retirement_mnemonic:varchar#,#qualifier:varchar#,#reverse_qualifier:varchar#,#untilDollarLimit:BigDecimal#,#untilFreqEndDate:timestamp#,#untilNoOfTransfers:numeric#,#payeeName:varchar#,#thirdPartyReason:numeric#,#certifiedFlag:varchar#,#pickUpOption:numeric#,#printingBranch:varchar#,#printerName:varchar#,#defaultAddressFlag:varchar#,#foreignAddressFlag:varchar#,#deliveryAddrLine1:varchar#,#deliveryAddrLine2:varchar#,#deliveryAddrLine3:varchar#,#deliveryAddrLine4:varchar#,#printAddressFlag:varchar#,#memoLine1:varchar#,#memoLine2:varchar#,#printMemoCheckFlag:varchar#,#printMemoStubFlag:varchar#,#fee:BigDecimal#,#chargedTo:varchar#,#estPickupTime:timestamp#,#deliveredToType:varchar#,#deliveredToName:varchar#,#typeOfId:numeric#,#idNumber:varchar#,#checkNo:varchar#,#trackingId:varchar#,#paytxneprydate:timestamp#,#owner_role:varchar#,#owner_id:varchar#,#next_approver_role:varchar#,#authinfo_confby_name:varchar#,#issue_dt:timestamp#,#check_status:varchar#,#void_reason_code:numeric#,#void_reason_desc:varchar#,#payee_Type:numeric#,#ofac_case_id:varchar#,#display_qualifier:varchar#)
setTransactionLog.StmtType=PreparedStatement

updatePaymentConNo.Query=update DS_PAY_TXNS set versionnum=versionnum+1,pmnt_confirmationno=#pmnt_confirmationno:varchar# where PAYPAYREF=#paypayref:varchar# and PAYBATCHREF=#paybatchref:varchar#
updatePaymentConNo.StmtType=PreparedStatement

updateParentTxn.Query=update TXN_PARENT set txn_parent_ver=txn_parent_ver+1,accum_amt=accum_amt+#accum_amt:BigDecimal#,accum_txn_no=accum_txn_no+#accum_txn_no:numeric#,prefered_previous_txn_dt=#prefered_previous_txn_dt:timestamp#,actual_previous_txn_dt=#actual_previous_txn_dt:timestamp#,last_txn_id=#last_txn_id:varchar#,last_txn_dt=#last_txn_dt:timestamp#,next_txn_dt=#next_txn_dt:timestamp# where par_txn_no=#par_txn_no:numeric#
updateParentTxn.StmtType=PreparedStatement

updateRecTxnCount.Query=update TXN_PARENT set txn_parent_ver=txn_parent_ver+1,accum_amt=accum_amt-#accum_amt:BigDecimal#,accum_txn_no=accum_txn_no-#accum_txn_no:numeric# where par_txn_no=#par_txn_no:numeric#
updateRecTxnCount.StmtType=PreparedStatement

updateNextBussDtTxnParent.Query=update TXN_PARENT set txn_parent_ver=txn_parent_ver+1,next_txn_id=#next_txn_id:varchar#,status=#status:varchar# where par_txn_no=#par_txn_no:numeric#
updateNextBussDtTxnParent.StmtType=PreparedStatement

getOnLoadAccDetails.Query= select CPYPAYEENAME1,CPYPAYEENAME1 from DS_PAYEE_REF where life_user_id=#life_user_id:varchar# and cpystatus='32'
getOnLoadAccDetails.TOColumnMap={cpypayeename1=cpypayeename1,cpypayeename1=cpypayeename1}
getOnLoadAccDetails.OutputType=java.util.ArrayList
getOnLoadAccDetails.StmtType=PreparedStatement

getExternalAccounts.Query=select 'XX-'||trim(coalesce(right(cpyaccnum,4), right(cpyaccnum,3), right(cpyaccnum,2)))||' '||cpypayeename1||coalesce('('||trim(left(account_owner,24))||')','') as cpypayeename1,cpypayeeid from ds_payee_ref where key_client in (#key_client_id:varchar#) and cpystatus='32' and third_party_ind not in ('Yes') with ur
getExternalAccounts.TOColumnMap={cpypayeename1=cpypayeename1,cpypayeeid=cpypayeeid}
getExternalAccounts.OutputType=java.util.ArrayList
getExternalAccounts.StmtType=PreparedStatement

getThirdPartyExtAccounts.Query=select 'XX-'||trim(coalesce(right(cpyaccnum,4), right(cpyaccnum,3), right(cpyaccnum,2)))||' '||cpypayeename1||coalesce('('||trim(left(account_owner,24))||')','') as cpypayeename1,cpypayeeid from ds_payee_ref where key_client in (#key_client_id:varchar#) and cpystatus='32' and third_party_ind='Yes' with ur
getThirdPartyExtAccounts.TOColumnMap={cpypayeename1=cpypayeename1,cpypayeeid=cpypayeeid}
getThirdPartyExtAccounts.OutputType=java.util.ArrayList
getThirdPartyExtAccounts.StmtType=PreparedStatement

getExternalPayeeDetails.Query=select dp.cpypayeeid,db.bnkaddress1 as cpyadd1,db.bnkaddress2 as cpyadd2,db.bnkaddress3 as cpyadd3,dp.cpyacctype,dp.cpypayeename1||' '||'(XX-'||trim(coalesce(right(dp.cpyaccnum,4), right(dp.cpyaccnum,3), right(dp.cpyaccnum,2)))||')' as cpypayeename1, dp.cpybankcode,dp.cpyaccnum,db.bnkdes as cpyboname1,dp.life_user_id,dp.sign_up_mode,dp.account_owner,dp.cpypayeename1 as nick_name,dp.cpypayeerefno as created_by_id,dp.cpystatus,dp.key_client,dp.key_link,dp.account_form,dp.voided_check,dp.createddate as created_date,dp.primary_int_acct as primaryAccount,dp.third_party_ind,dp.ofac_case_id from ds_payee_ref dp left outer join ds_bank_ref db on db.bnkcode = dp.cpybankcode where cpypayeeid=#externalPayeeId:varchar#
getExternalPayeeDetails.TOColumnMap={cpypayeeid=cpypayeeid,cpyadd1=cpyadd1,cpyadd2=cpyadd2,cpyadd3=cpyadd3,cpyacctype=cpyacctype,cpypayeename1=cpypayeename1,cpybankcode=cpybankcode,cpyaccnum=cpyaccnum,cpyboname1=cpyboname1,life_user_id=life_user_id,sign_up_mode=sign_up_mode,account_owner=account_owner,nick_name=nick_name,created_by_id=created_by_id,cpystatus=cpystatus,key_client=key_client,key_link=key_link,account_form=account_form,voided_check=voided_check,created_date=created_date,primaryAccount=primaryAccount,third_party_ind=third_party_ind,ofac_case_id=ofac_case_id}
getExternalPayeeDetails.OutputType=com.tcs.ebw.payments.transferobject.DsExtPayeeDetailsOutTO
getExternalPayeeDetails.StmtType=PreparedStatement

modifyBatch.Query=update ds_batch set batversionnum=batversionnum+1,batstatus=#batstatus:varchar#, batmodifieddate=#batmodifieddate:timestamp#,batmodifiedby=#batmodifiedby:varchar# where batbatchref=#batbatchref:varchar#
modifyBatch.StmtType=PreparedStatement

modifypayTransaction.Query=update ds_pay_txns set versionnum=versionnum+1, paydebitamt=#paydebitamt:BigDecimal#,paypymtdate=#paypymtdate:timestamp#, payfrequency=#payfrequency:varchar#, payfreqpaymentcount=#payfreqpaymentcount:numeric#,payfreqenddate=#payfreqenddate:timestamp#, payfreqlimit=#payfreqlimit:BigDecimal#,modifieddate=#modifieddate:timestamp#,payccsstatuscode=#payccsstatuscode:varchar#,modifiedby=#modifiedby:varchar#,sent_to_paymnt=#sent_to_paymnt:varchar#,actual_exe_dt=#actual_exe_dt:timestamp#,requested_exe_dt=#requested_exe_dt:timestamp#,paytxneprydate=#paytxneprydate:timestamp#,rsa_review_flag=#rsa_review_flag:varchar#,next_approver_role=#next_approver_role:varchar#,current_owner_role=#current_owner_role:varchar#,current_owner_id=#current_owner_id:varchar#,dont_spawn_flag=#dont_spawn_flag:varchar#,same_name_flag=#same_name_flag:varchar#,auth_mode=#auth_mode:varchar#,auth_info_reciever=#auth_info_reciever:varchar#,verbal_auth_client_name=#verbal_auth_client_name:varchar#,verbal_auth_date=#verbal_auth_date:timestamp#,verbal_auth_time=#verbal_auth_time:varchar#,client_verification_desc=#client_verification_desc:varchar#,modifiedby_name=#modifiedby_name:varchar#,auth_confirmed_by=#auth_confirmed_by:varchar#,ofac_case_id=#ofac_case_id:varchar# where paypayref=#paypayref:varchar# and paybatchref=#paybatchref:varchar#
modifypayTransaction.StmtType=PreparedStatement

modifyRecurringTransaction.Query=update txn_parent set txn_parent_ver=txn_parent_ver+1,amount=#amount:BigDecimal#,frequency=#frequency:varchar#,duration=#duration:varchar#,modifiedby=#modifiedby:varchar#,modifieddate=#modifieddate:timestamp#,untildate=#untildate:timestamp#,thrshold_amt=#thrshold_amt:BigDecimal#,max_txn_no=#max_txn_no:numeric# where par_txn_no=#par_txn_no:numeric#
modifyRecurringTransaction.StmtType=PreparedStatement

cancelBatch.Query=update ds_batch set batversionnum=batversionnum+1,batstatus=#batstatus:varchar#,batmodifieddate=#batmodifieddate:timestamp#,batmodifiedby=#batmodifiedby:varchar# where batbatchref=#batbatchref:varchar#
cancelBatch.StmtType=PreparedStatement

cancelPaytransaction.Query=update ds_pay_txns set versionnum=versionnum+1,payccsstatuscode=#payccsstatuscode:varchar#,modifiedby=#modifiedby:varchar#,modifiedby_name=#modifiedby_name:varchar#,modifieddate=#modifieddate:timestamp#,paybatchflag=#paybatchflag:varchar# where paybatchref=#paybatchref:varchar# and  paypayref=#paypayref:varchar#
cancelPaytransaction.StmtType=PreparedStatement

cancelRecurringParent.Query=update txn_parent set txn_parent_ver=txn_parent_ver+1, status=#status:varchar#,modifiedby=#modifiedby:varchar#,modifieddate=#modifieddate:timestamp# where par_txn_no=#par_txn_no:numeric#
cancelRecurringParent.StmtType=PreparedStatement

getCancelPayDetails.Query=select dpt.versionnum,dpt.requested_exe_dt,dpt.frombr_acct_no_fa,dpt.tobr_acct_no_fa,dpt.paydebitamt,dpt.par_txn_no,dpt.payccsstatuscode,dpt.txn_type,dpt.createddate as created_date,dpt.paybatchref,dpt.keyaccountnumber_from,dpt.keyaccountnumber_to,tp.duration as duration,tp.max_txn_no as payfreqpaymentcount,tp.untildate as payfreqenddate,tp.frequency as payfrequency,tp.thrshold_amt as payfreqlimit,tp.accum_amt  as accumulatedAmt,tp.accum_txn_no as accumulatedTransfers,tp.prefered_previous_txn_dt as prefered_previous_txn_dt,tp.par_txn_request_dt,dr.cpypayeename1 as paypayeename1,dr.cpyaccnum as payeeaccnum,dr.cpypayeeid as paypayeeid,dr.account_owner as extAccOwner,tp.txn_parent_ver as partxnversionnum,dbt.batversionnum as batversionnum,dpt.dont_spawn_flag,ctd.payee_name as checkPayeeToName,dpt.actual_exe_dt from ds_pay_txns dpt left outer join ds_payee_ref dr on dpt.paypayeeaccnum=dr.cpypayeeid left outer join txn_parent tp on dpt.par_txn_no=tp.par_txn_no left outer join ds_batch dbt on dbt.batbatchref=dpt.paybatchref left outer join check_txn_dtls ctd on dpt.paypayref=ctd.confirmation_no where dpt.paypayref=#paypayref:varchar#
getCancelPayDetails.TOColumnMap={versionnum=versionnum,requested_exe_dt=requested_exe_dt,frombr_acct_no_fa=frombr_acct_no_fa,tobr_acct_no_fa=tobr_acct_no_fa,paydebitamt=paydebitamt,par_txn_no=par_txn_no,payccsstatuscode=payccsstatuscode,txn_type=txn_type,created_date=created_date,paybatchref=paybatchref,keyaccountnumber_from=keyaccountnumber_from,keyaccountnumber_to=keyaccountnumber_to,duration=duration,payfreqpaymentcount=payfreqpaymentcount,payfreqenddate=payfreqenddate,payfrequency=payfrequency,payfreqlimit=payfreqlimit,accumulatedAmt=accumulatedAmt,accumulatedTransfers=accumulatedTransfers,prefered_previous_txn_dt=prefered_previous_txn_dt,paypayeename1=paypayeename1,payeeaccnum=payeeaccnum,paypayeeid=paypayeeid,extAccOwner=extAccOwner,partxnversionnum=partxnversionnum,batversionnum=batversionnum,dont_spawn_flag=dont_spawn_flag,checkPayeeToName=checkPayeeToName,par_txn_request_dt=par_txn_request_dt,actual_exe_dt=actual_exe_dt}
getCancelPayDetails.OutputType=com.tcs.ebw.payments.transferobject.DsGetCancelPayOutTO
getCancelPayDetails.StmtType=PreparedStatement

selectModifiedPayBatchDetails.Query=select batgrpid,batapplicationid,batnooftxns,batbatchref,batstatus,batcreatedby,batmodifiedby,batcreateddate,batmodifieddate,txn_entry_date from ds_batch where batbatchref=#batbatchref:varchar#
selectModifiedPayBatchDetails.TOColumnMap={batgrpid=batgrpid,batbatchref=batbatchref,batapplicationid=batapplicationid,batnooftxns=batnooftxns,batstatus=batstatus,batcreatedby=batcreatedby,batmodifiedby=batmodifiedby,batcreateddate=batcreateddate,batmodifieddate=batmodifieddate,txn_entry_date=txn_entry_date}
selectModifiedPayBatchDetails.OutputType=com.tcs.ebw.payments.transferobject.DsBatchTO
selectModifiedPayBatchDetails.StmtType=PreparedStatement

selectModifiedPayTxnsDetails.Query=select dpt.payccsstatuscode,dpt.paytrxkey,dpt.paygroupid,dpt.paytypecode,dpt.paydebitaccnum,dpt.paypayref,dpt.paybatchref,dpt.paycurrcode,dpt.paydebitamt,dpt.paypymtdate,dpt.paypayeeaccnum,dr.cpypayeename1||' '||'(XX-'||trim(coalesce(right(dr.cpyaccnum,4), right(dr.cpyaccnum,3), right(dr.cpyaccnum,2)))||')'  as paypayeename1,dr.cpybankcode as paypayeebankcode,dr.cpybranchscode  as paypayeebranchcode,dr.cpyaccnum as paypayeeid,dpt.payrecurring,tp.frequency as payfrequency,tp.max_txn_no as payfreqpaymentcount,tp.untildate as payfreqenddate,dpt.createdby,dpt.modifiedby,dpt.acct_user_id,dpt.par_txn_no,dpt.createddate,dpt.fromfa_id,dpt.fromfa_id_hist,dpt.tofa_id,dpt.tofa_id_hist,dpt.frombranch_id,dpt.frombranch_id_hist,dpt.tobranch_id,dpt.tobranch_id_hist,dpt.fromacct_tier,dpt.toacct_tier,dpt.acct_type1,dpt.acct_from_type,dpt.acct_to_type,dpt.acct_user_name,dpt.fromacct_no_hist,dpt.toacct_no_hist,dpt.created_by_role,dpt.createdby_name,dpt.txn_type,dpt.keyaccountnumber_from,dpt.keyaccountnumber_to,dpt.friendlyname_from,dpt.friendlyname_to,dpt.nickname_from,dpt.nickname_to,dpt.life_user_id,dr.cpyacctype as paypayee_acct_type,dpt.frombr_acct_no_fa,dpt.tobr_acct_no_fa,dpt.fromacct_type1,dpt.toacct_type1,dpt.requested_exe_dt,dpt.actual_exe_dt,dpt.sent_to_paymnt,tp.thrshold_amt as payfreqlimit,dpt.next_approver_role,dpt.initiator_role,dpt.initiator_id,dpt.current_owner_role,dpt.current_owner_id,dpt.auth_mode,dpt.auth_info_reciever,dpt.verbal_auth_client_name,dpt.verbal_auth_date,dpt.verbal_auth_time,dpt.client_verification_desc,dpt.same_name_flag,dpt.dont_spawn_flag,dr.sign_up_mode as paydisctype,dpt.payacctype,dpt.rta_booked_in_flag,dpt.retirement_mnemonic,dpt.qualifier,dpt.reverse_qualifier,dpt.modifiedby_name,dpt.auth_confirmed_by,dpt.rsa_review_flag,dpt.pmnt_confirmationno,dpt.ofac_case_id,dpt.display_qualifier from ds_pay_txns dpt left outer join txn_parent tp on dpt.par_txn_no=tp.par_txn_no left outer join ds_payee_ref dr on dpt.paypayeeaccnum=dr.cpypayeeid where paypayref=#paypayref:varchar# and paybatchref=#paybatchref:varchar#
selectModifiedPayTxnsDetails.TOColumnMap={payccsstatuscode=payccsstatuscode,paypayref=paypayref,paybatchref=paybatchref,paytrxkey=paytrxkey,paygroupid=paygroupid,paytypecode=paytypecode,paydebitaccnum=paydebitaccnum,paycurrcode=paycurrcode,paydebitamt=paydebitamt,paypymtdate=paypymtdate,paypayeeaccnum=paypayeeaccnum,paypayeename1=paypayeename1,paypayeebankcode=paypayeebankcode,paypayeebranchcode=paypayeebranchcode,paypayeeid=paypayeeid,payrecurring=payrecurring,payfrequency=payfrequency,payfreqpaymentcount=payfreqpaymentcount,payfreqenddate=payfreqenddate,createdby=createdby,modifiedby=modifiedby,acct_user_id=acct_user_id,par_txn_no=par_txn_no,createddate=createddate,fromfa_id=fromfa_id,fromfa_id_hist=fromfa_id_hist,tofa_id=tofa_id,tofa_id_hist=tofa_id_hist,frombranch_id=frombranch_id,frombranch_id_hist=frombranch_id_hist,tobranch_id=tobranch_id,tobranch_id_hist=tobranch_id_hist,fromacct_tier=fromacct_tier,toacct_tier=toacct_tier,acct_type1=acct_type1,acct_from_type=acct_from_type,acct_to_type=acct_to_type,acct_user_name=acct_user_name,fromacct_no_hist=fromacct_no_hist,toacct_no_hist=toacct_no_hist,created_by_role=created_by_role,createdby_name=createdby_name,txn_type=txn_type,keyaccountnumber_from=keyaccountnumber_from,keyaccountnumber_to=keyaccountnumber_to,friendlyname_from=friendlyname_from,friendlyname_to=friendlyname_to,nickname_from=nickname_from,nickname_to=nickname_to,life_user_id=life_user_id,paypayee_acct_type=paypayee_acct_type,frombr_acct_no_fa=frombr_acct_no_fa,tobr_acct_no_fa=tobr_acct_no_fa,fromacct_type1=fromacct_type1,toacct_type1=toacct_type1,requested_exe_dt=requested_exe_dt,actual_exe_dt=actual_exe_dt,sent_to_paymnt=sent_to_paymnt,payfreqlimit=payfreqlimit,next_approver_role=next_approver_role,initiator_role=initiator_role,initiator_id=initiator_id,current_owner_role=current_owner_role,current_owner_id=current_owner_id,auth_mode=auth_mode,auth_info_reciever=auth_info_reciever,verbal_auth_client_name=verbal_auth_client_name,verbal_auth_date=verbal_auth_date,verbal_auth_time=verbal_auth_time,client_verification_desc=client_verification_desc,same_name_flag=same_name_flag,dont_spawn_flag=dont_spawn_flag,payacctype=payacctype,paydisctype=paydisctype,rta_booked_in_flag=rta_booked_in_flag,retirement_mnemonic=retirement_mnemonic,qualifier=qualifier,reverse_qualifier=reverse_qualifier,modifiedby_name=modifiedby_name,auth_confirmed_by=auth_confirmed_by,rsa_review_flag=rsa_review_flag,pmnt_confirmationno=pmnt_confirmationno,ofac_case_id=ofac_case_id,display_qualifier=display_qualifier}
selectModifiedPayTxnsDetails.OutputType=com.tcs.ebw.payments.transferobject.DsPayTxnsTO
selectModifiedPayTxnsDetails.StmtType=PreparedStatement

getCheckRequestDetails.Query=select ctd.check_no as checkNo,ctd.tracking_id as trackingId,ctd.payee_name as payeeName,ctd.printing_branch as printingBranch,ctd.pickup_option as pickUpOption,ctd.print_memo_stub_flag as printMemoStubFlag,ctd.print_memo_check_flag as printMemoCheckFlag,ctd.type_of_id as typeOfId,ctd.id_number as idNumber,ctd.fee_amount as fee,ctd.third_party_reason as thirdPartyReason,ctd.default_address_flag as defaultAddressFlag,ctd.foriegn_address_flag as foreignAddressFlag,ctd.delivery_address_line1 as deliveryAddrLine1,ctd.delivery_address_line2 as deliveryAddrLine2,ctd.delivery_address_line3 as deliveryAddrLine3,ctd.delivery_address_line4 as deliveryAddrLine4,ctd.memo_line1 as memoLine1,ctd.memo_line2 as memoLine2,ctd.certified_check_flag as certifiedFlag,ctd.est_pickup_time as estPickupTime,ctd.charged_to as chargedTo,ctd.delivered_to_name as deliveredToName,ctd.delivered_to_type as deliveredToType,ctd.payee_type as payeeType from check_txn_dtls ctd where ctd.confirmation_no like #confirmationNo:varchar#
getCheckRequestDetails.TOColumnMap={checkNo=checkNo,trackingId=trackingId,payeeName=payeeName,printingBranch=printingBranch,pickUpOption=pickUpOption,printMemoStubFlag=printMemoStubFlag,printMemoCheckFlag=printMemoCheckFlag,deliveredToType=deliveredToType,typeOfId=typeOfId,idNumber=idNumber,fee=fee,thirdPartyReason=thirdPartyReason,foreignAddressFlag=foreignAddressFlag,deliveryAddrLine1=deliveryAddrLine1,deliveryAddrLine2=deliveryAddrLine2,deliveryAddrLine3=deliveryAddrLine3,deliveryAddrLine4=deliveryAddrLine4,memoLine1=memoLine1,memoLine2=memoLine2,certifiedFlag=certifiedFlag,defaultAddressFlag=defaultAddressFlag,estPickupTime=estPickupTime,chargedTo=chargedTo,deliveredToName=deliveredToName,payeeType=payeeType}
getCheckRequestDetails.OutputType=com.tcs.ebw.payments.transferobject.CheckRequestTO
getCheckRequestDetails.StmtType=PreparedStatement

getCurrentBusinessDate.Query=select BUSINESS_DATE  from business_date_online_view where BRANCH_CODE=#branch_code:varchar#
getCurrentBusinessDate.TOColumnMap={business_date=business_date}
getCurrentBusinessDate.OutputType=com.tcs.ebw.payments.transferobject.DsConfigDetailsOut
getCurrentBusinessDate.StmtType=PreparedStatement

checkExtAccAvailablity.Query= select CPYSTATUS,CPYPAYEENAME1 from DS_PAYEE_REF where key_client in (#key_client_id:varchar#) with ur
checkExtAccAvailablity.TOColumnMap={cpystatus=cpystatus,cpypayeename1=cpypayeename1}
checkExtAccAvailablity.OutputType=java.util.ArrayList
checkExtAccAvailablity.StmtType=PreparedStatement

getEditTransferDetails.Query=select dpt.versionnum,dpt.paydebitamt,dpt.requested_exe_dt as initiationDate,dpt.keyaccountnumber_from,dpt.keyaccountnumber_to,dpt.frombr_acct_no_fa,dpt.tobr_acct_no_fa,dpt.txn_type as transactionType,dpt.rsa_review_flag as rsa_Review_Flag,dpt.payccsstatuscode,dpt.paybatchref,dpt.par_txn_no,dpt.same_name_flag,dpt.payrecurring as transferFrequency,tp.accum_amt as accumulatedamt,tp.accum_txn_no as accumulatedtransfers,tp.duration as duration,tp.max_txn_no as payfreqpaymentcount,tp.untildate as payfreqenddate,tp.frequency as payfrequencycombo,tp.thrshold_amt payfreqlimit,tp.txn_parent_ver as partxnversionnum,dbt.batversionnum as batversionnum,dr.cpypayeename1 as paypayeename1,dr.cpybankcode as paypayeebankcode,dr.cpyacctype as paypayee_acct_type,dr.cpyaccnum as payeeaccnum,dr.cpypayeeid as paypayeeid,dr.account_owner as extAccOwner,ds.dmndomainvaldesc as retirement_txn_type_desc from ds_pay_txns dpt left outer join ds_payee_ref dr on dpt.paypayeeaccnum=dr.cpypayeeid left outer join txn_parent tp on dpt.par_txn_no=tp.par_txn_no left outer join ds_domains ds on ds.dmndomain='D_IRATxnTypes' and ds.dmndomainval= dpt.retirement_mnemonic left outer join ds_batch dbt on dbt.batbatchref=dpt.paybatchref where dpt.paypayref=#paypayref:varchar# and dpt.paybatchref=#paybatchref:varchar#
getEditTransferDetails.TOColumnMap={versionnum=versionnum,paydebitamt=paydebitamt,initiationDate=initiationDate,keyaccountnumber_from=keyaccountnumber_from,keyaccountnumber_to=keyaccountnumber_to,frombr_acct_no_fa=frombr_acct_no_fa,tobr_acct_no_fa=tobr_acct_no_fa,transactionType=transactionType,rsa_Review_Flag=rsa_Review_Flag,payccsstatuscode=payccsstatuscode,paybatchref=paybatchref,par_txn_no=par_txn_no,same_name_flag=same_name_flag,transferFrequency=transferFrequency,accumulatedamt=accumulatedamt,accumulatedtransfers=accumulatedtransfers,duration=duration,payfreqpaymentcount=payfreqpaymentcount,payfreqenddate=payfreqenddate,payfrequencycombo=payfrequencycombo,payfreqlimit=payfreqlimit,partxnversionnum=partxnversionnum,batversionnum=batversionnum,paypayeename1=paypayeename1,paypayeebankcode=paypayeebankcode,paypayee_acct_type=paypayee_acct_type,payeeaccnum=payeeaccnum,paypayeeid=paypayeeid,extAccOwner=extAccOwner,retirement_txn_type_desc=retirement_txn_type_desc}
getEditTransferDetails.OutputType=com.tcs.ebw.payments.transferobject.DsGetEditTransferOutTO
getEditTransferDetails.StmtType=PreparedStatement

updateParentTxnAfterSkip.Query=update TXN_PARENT set txn_parent_ver=txn_parent_ver+1,prefered_previous_txn_dt=#prefered_previous_txn_dt:timestamp#,next_txn_dt=#next_txn_dt:timestamp# where par_txn_no=#par_txn_no:numeric#
updateParentTxnAfterSkip.StmtType=PreparedStatement

getParentTransactionDetails.Query=select from_acct,to_acct,amount,frequency,duration,untildate,thrshold_amt,max_txn_no,accum_amt,accum_txn_no,prefered_previous_txn_dt,next_txn_dt,par_txn_confno,par_txn_request_dt from txn_parent where par_txn_no=#par_txn_no:numeric#
getParentTransactionDetails.TOColumnMap={from_acct=from_acct,to_acct=to_acct,amount=amount,frequency=frequency,duration=duration,untildate=untildate,thrshold_amt=thrshold_amt,max_txn_no=max_txn_no,accum_amt=accum_amt,accum_txn_no=accum_txn_no,prefered_previous_txn_dt=prefered_previous_txn_dt,next_txn_dt=next_txn_dt,par_txn_confno=par_txn_confno,par_txn_request_dt=par_txn_request_dt}
getParentTransactionDetails.OutputType=com.tcs.ebw.payments.transferobject.TxnParentTO
getParentTransactionDetails.StmtType=PreparedStatement

getInternalHolidaysList.Query=select '"' || CHAR(DATE(HLDY_DT)) || '"' as HLDY_DT  FROM  HOLIDAY_VIEW where HOL_TYPE=1 and OBJ_TYP='GMSBKUSNYC'
getInternalHolidaysList.TOColumnMap={HLDY_DT=HLDY_DT}
getInternalHolidaysList.OutputType=java.util.ArrayList
getInternalHolidaysList.StmtType=Statement

getExternalHolidaysList.Query=select distinct '"' || CHAR(DATE(HLDY_DT)) || '"' as HLDY_DT  FROM  HOLIDAY_VIEW where HOL_TYPE in (1,3) and OBJ_TYP in ('GMSBKUSNYC','USD')
getExternalHolidaysList.TOColumnMap={HLDY_DT=HLDY_DT}
getExternalHolidaysList.OutputType=java.util.ArrayList
getExternalHolidaysList.StmtType=Statement

getInternalHolidaysListObj.Query=select DATE(HLDY_DT) AS HLDY_DT FROM  HOLIDAY_VIEW where HOL_TYPE=1 and OBJ_TYP='GMSBKUSNYC'
getInternalHolidaysListObj.TOColumnMap={HLDY_DT=HLDY_DT}
getInternalHolidaysListObj.OutputType=java.util.ArrayList
getInternalHolidaysListObj.StmtType=Statement

getExternalHolidaysListObj.Query=select distinct DATE(HLDY_DT) as HLDY_DT  FROM  HOLIDAY_VIEW where HOL_TYPE in (1,3) and OBJ_TYP in ('GMSBKUSNYC','USD')
getExternalHolidaysListObj.TOColumnMap={HLDY_DT=HLDY_DT}
getExternalHolidaysListObj.OutputType=java.util.ArrayList
getExternalHolidaysListObj.StmtType=Statement

getInternalCutOffTime.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=155
getInternalCutOffTime.TOColumnMap={VAL=VAL}
getInternalCutOffTime.OutputType=java.util.ArrayList
getInternalCutOffTime.StmtType=Statement

getCancelTxnFlag.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=905
getCancelTxnFlag.TOColumnMap={VAL=VAL}
getCancelTxnFlag.OutputType=java.util.ArrayList
getCancelTxnFlag.StmtType=Statement

getExternalCutOffTime.Query=select END_TIME from CUT_OFF_VIEW
getExternalCutOffTime.TOColumnMap={END_TIME=END_TIME}
getExternalCutOffTime.OutputType=java.util.ArrayList
getExternalCutOffTime.StmtType=Statement

getExtAcctMaxAttmpsPrmtr.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=710
getExtAcctMaxAttmpsPrmtr.TOColumnMap={VAL=VAL}
getExtAcctMaxAttmpsPrmtr.OutputType=java.util.ArrayList
getExtAcctMaxAttmpsPrmtr.StmtType=Statement

getConfigParameterValues.Query=SELECT * FROM APP_CONFIG_PARAM
getConfigParameterValues.TOColumnMap ={PARAMETERNAME=PARAMETERNAME,DESCRIPTION=DESCRIPTION,PARAMETERVALUE=PARAMETERVALUE,CREATEDBY=CREATEDBY,CREATEDDATE=CREATEDDATE,MODIFIEDBY=MODIFIEDBY,MODIFIEDDATE=MODIFIEDDATE,VERSIONNUM=VERSIONNUM}
getConfigParameterValues.OutputType=java.util.ArrayList
getConfigParameterValues.StmtType=Statement

getInternalBsnsDaysForApproval.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=854
getInternalBsnsDaysForApproval.TOColumnMap={VAL=VAL}
getInternalBsnsDaysForApproval.OutputType=java.util.ArrayList
getInternalBsnsDaysForApproval.StmtType=Statement

getTxnExpiryPeriod.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=854
getTxnExpiryPeriod.TOColumnMap={VAL=VAL}
getTxnExpiryPeriod.OutputType=java.util.ArrayList
getTxnExpiryPeriod.StmtType=Statement

getChkExpiryPeriod.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=872
getChkExpiryPeriod.TOColumnMap={VAL=VAL}
getChkExpiryPeriod.OutputType=java.util.ArrayList
getChkExpiryPeriod.StmtType=Statement

getACHTxnSettlePeriod.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=715
getACHTxnSettlePeriod.TOColumnMap={VAL=VAL}
getACHTxnSettlePeriod.OutputType=java.util.ArrayList
getACHTxnSettlePeriod.StmtType=Statement

getFutrDtNotDays.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=700
getFutrDtNotDays.TOColumnMap={VAL=VAL}
getFutrDtNotDays.OutputType=java.util.ArrayList
getFutrDtNotDays.StmtType=Statement

getExtAccntExpiryNotDays.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=701
getExtAccntExpiryNotDays.TOColumnMap={VAL=VAL}
getExtAccntExpiryNotDays.OutputType=java.util.ArrayList
getExtAccntExpiryNotDays.StmtType=Statement

getMaxAttemptsToAddAccnt.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=710
getMaxAttemptsToAddAccnt.TOColumnMap={VAL=VAL}
getMaxAttemptsToAddAccnt.OutputType=java.util.ArrayList
getMaxAttemptsToAddAccnt.StmtType=Statement

getACHTxnDays.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=715
getACHTxnDays.TOColumnMap={VAL=VAL}
getACHTxnDays.OutputType=java.util.ArrayList
getACHTxnDays.StmtType=Statement

getContactNumber.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=853
getContactNumber.TOColumnMap={VAL=VAL}
getContactNumber.OutputType=java.util.ArrayList
getContactNumber.StmtType=Statement

getIntAccForTrialDeposit.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=852
getIntAccForTrialDeposit.TOColumnMap={VAL=VAL}
getIntAccForTrialDeposit.OutputType=java.util.ArrayList
getIntAccForTrialDeposit.StmtType=Statement

setTranasactionEnrichment.Query=insert into TRANSACTION_ENRICHMENT (txn_Pos_Num,keyAcct,acct_DrCrInd,enrichment_Ind,fa_id,office_id,account_num) values(#txn_Pos_Num:varchar#,#keyAcct:varchar#,#acct_DrCrInd:numeric#,#enrichment_Ind:numeric#,#fa_id:varchar#,#office_id:varchar#,#account_num:varchar#)
setTranasactionEnrichment.StmtType=PreparedStatement

verifyMSAccountDAP.Query=select ACCOUNT_NO,KEY_ACCOUNT_NO from SSO_ACCOUNT_PROPERTIES where lifeuserid=#life_user_id:varchar#
verifyMSAccountDAP.TOColumnMap={ACCOUNT_NO=ACCOUNT_NO,KEY_ACCOUNT_NO=KEY_ACCOUNT_NO}
verifyMSAccountDAP.OutputType=java.util.ArrayList
verifyMSAccountDAP.StmtType=PreparedStatement

verifyExtAccountDAP.Query=select count(*) as count from ds_payee_ref where cpystatus='32' and cpypayeeid=#external_ref_id:varchar#
verifyExtAccountDAP.TOColumnMap={count=count}
verifyExtAccountDAP.OutputType=java.util.ArrayList
verifyExtAccountDAP.StmtType=PreparedStatement

verifySuspedExtAccDAP.Query=select count(*) as count from ds_payee_ref where cpystatus='36' and cpypayeeid=#external_ref_id:varchar#
verifySuspedExtAccDAP.TOColumnMap={count=count}
verifySuspedExtAccDAP.OutputType=java.util.ArrayList
verifySuspedExtAccDAP.StmtType=PreparedStatement

verifyExtAccountOwner.Query=select count(*) as count from ds_payee_ref where cpypayeeid=#external_ref_id:varchar# and key_client in (#key_client_id:varchar#)
verifyExtAccountOwner.TOColumnMap={count=count}
verifyExtAccountOwner.OutputType=java.util.ArrayList
verifyExtAccountOwner.StmtType=Statement

verifyExtAccRoutingNum.Query=select count(*) as count from ds_bank_ref where bnkcode=#external_routing_num:varchar#
verifyExtAccRoutingNum.TOColumnMap={count=count}
verifyExtAccRoutingNum.OutputType=java.util.ArrayList
verifyExtAccRoutingNum.StmtType=Statement

getTxnVersionNum.Query=select versionnum from ds_pay_txns where paypayref=#txnReferenceId:varchar# and paybatchref=#txnBatchRefId:varchar#
getTxnVersionNum.TOColumnMap={versionnum=versionnum}
getTxnVersionNum.OutputType=com.tcs.ebw.payments.transferobject.VersionChkOutDtls
getTxnVersionNum.StmtType=PreparedStatement

getAccVersionNum.Query=select versionnum from ds_payee_ref where cpypayeeid=#accReferenceId:varchar#
getAccVersionNum.TOColumnMap={versionnum=versionnum}
getAccVersionNum.OutputType=com.tcs.ebw.payments.transferobject.VersionChkOutDtls
getAccVersionNum.StmtType=PreparedStatement

getValidTxnStatus.Query=select input_status from ds_status_consistency where event_name=#event_name:varchar# and application_id=#application_id:varchar#
getValidTxnStatus.TOColumnMap={input_status=input_status}
getValidTxnStatus.OutputType=java.util.ArrayList
getValidTxnStatus.StmtType=PreparedStatement

getBatchVersionNum.Query=select batversionnum from ds_batch where batbatchref=#txnBatchRefId:varchar#
getBatchVersionNum.TOColumnMap={batversionnum=batversionnum}
getBatchVersionNum.OutputType=com.tcs.ebw.payments.transferobject.VersionChkOutDtls
getBatchVersionNum.StmtType=PreparedStatement

getParentTxnVersionNum.Query=select txn_parent_ver as txnversionnum from txn_parent tp,ds_pay_txns dt where dt.paypayref=#txnReferenceId:varchar# and dt.par_txn_no=tp.par_txn_no
getParentTxnVersionNum.TOColumnMap={txnversionnum=txnversionnum}
getParentTxnVersionNum.OutputType=com.tcs.ebw.payments.transferobject.VersionChkOutDtls
getParentTxnVersionNum.StmtType=PreparedStatement

getChkVersionNum.Query=select chktxnversionnum as chkversionnum from check_txn_dtls ctd where ctd.confirmation_no=#txnReferenceId:varchar#
getChkVersionNum.TOColumnMap={chkversionnum=chkversionnum}
getChkVersionNum.OutputType=com.tcs.ebw.payments.transferobject.VersionChkOutDtls
getChkVersionNum.StmtType=PreparedStatement

updateRecParentConfNo.Query=update TXN_PARENT set txn_parent_ver=txn_parent_ver+1,next_txn_id=#next_txn_id:varchar#,par_txn_confno=#par_txn_confno:varchar# where par_txn_no=#par_txn_no:numeric#
updateRecParentConfNo.StmtType=PreparedStatement

getTxnStatus.Query=select payccsstatuscode as txn_status from ds_pay_txns where paypayref=#paypayref:varchar#
getTxnStatus.TOColumnMap={txn_status=txn_status}
getTxnStatus.OutputType=com.tcs.ebw.payments.transferobject.GetTransactionStatus
getTxnStatus.StmtType=PreparedStatement

getExtAcntStatus.Query=select cpystatus as acnt_status from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#
getExtAcntStatus.TOColumnMap={acnt_status=acnt_status}
getExtAcntStatus.OutputType=com.tcs.ebw.payments.transferobject.GetTransactionStatus
getExtAcntStatus.StmtType=PreparedStatement

getTxnBatchStatus.Query=select batstatus as txn_status from ds_batch where batbatchref=#paybatchref:varchar#
getTxnBatchStatus.TOColumnMap={txn_status=txn_status}
getTxnBatchStatus.OutputType=com.tcs.ebw.payments.transferobject.GetTransactionStatus
getTxnBatchStatus.StmtType=PreparedStatement

updateTransitionDate.Query=update DS_PAY_TXNS set requested_exe_dt=#requested_exe_dt:timestamp# where PAYPAYREF=#paypayref:varchar#
updateTransitionDate.StmtType=PreparedStatement

getTxnVersionDetails.Query=select dpt.versionnum,dbt.batversionnum as batversionnum,tp.txn_parent_ver as partxnversionnum from ds_pay_txns dpt left outer join ds_batch dbt on dpt.paybatchref=dbt.batbatchref left outer join txn_parent tp on dpt.par_txn_no=tp.par_txn_no where dpt.paypayref=#paypayref:varchar#
getTxnVersionDetails.TOColumnMap={versionnum=versionnum,batversionnum=batversionnum,partxnversionnum=partxnversionnum}
getTxnVersionDetails.StmtType=PreparedStatement
getTxnVersionDetails.OutputType=com.tcs.ebw.payments.transferobject.TxnVersionDetails

updateBRValidation.Query=update BR_VALIDATION_LOG set APPRVD_BY=#approved_by:varchar#,RECENT_RUN=2 where BO_KEY=#bOKey:varchar# and RECENT_RUN=1
updateBRValidation.StmtType=PreparedStatement

getTxnNextApprovers.Query=select DISTINCT BS.EPR_APPROVER_ROLE as APPROVER_ROLE,BS.APPROVER_PRIORITY AS APPROVER_PRIORITY from BR_TXN_APPROVERS BA,BR_APPROVER_SEQ BS WHERE BA.BO_KEY=#paypayref:varchar# AND BA.APPROVER_ROLE=BS.APPROVER_ROLE AND BA.SQNC_NUM >=(select MAX(BA.SQNC_NUM) from BR_TXN_APPROVERS BA,BR_APPROVER_SEQ BS WHERE BA.APPROVER_ROLE=BS.APPROVER_ROLE and BA.BO_KEY=#paypayref:varchar# AND BS.EPR_APPROVER_ROLE like #next_approver_role:varchar#) order by BS.APPROVER_PRIORITY
getTxnNextApprovers.TOColumnMap={APPROVER_ROLE=APPROVER_ROLE,APPROVER_PRIORITY=APPROVER_PRIORITY}
getTxnNextApprovers.OutputType=java.util.ArrayList
getTxnNextApprovers.StmtType=PreparedStatement

updateRTABookedInFlag.Query=update ds_pay_txns set rta_booked_in_flag=#rta_booked_in_flag:varchar# where paypayref=#paypayref:varchar#
updateRTABookedInFlag.StmtType=PreparedStatement

getTxnUtilizedAmount.Query=select sum(dpt.paydebitamt) as utilized_amount from ds_pay_txns dpt where dpt.txn_type in ('INT') and dpt.keyaccountnumber_from=#from_account:varchar# and dpt.same_name_flag =#same_name_flg:varchar# and dpt.auth_mode =#auth_mode:varchar# and dpt.current_owner_id <> 'Client' and ((dpt.payccsstatuscode in ('2','6') and (dpt.requested_exe_dt between #startDate:timestamp# and #endDate:timestamp#)) OR (dpt.payccsstatuscode in ('4') and dpt.requested_exe_dt=#endDate:timestamp#))
getTxnUtilizedAmount.TOColumnMap={utilized_amount=utilized_amount}
getTxnUtilizedAmount.OutputType=com.tcs.ebw.payments.transferobject.UtilizedAmountTO
getTxnUtilizedAmount.StmtType=PreparedStatement

getChkUtilizedAmount.Query=select sum(dpt.paydebitamt) as utilized_amount from ds_pay_txns dpt where dpt.txn_type in ('CHK-LOC','CHK-REG') and dpt.keyaccountnumber_from=#from_account:varchar# and dpt.same_name_flag =#same_name_flg:varchar# and dpt.auth_mode =#auth_mode:varchar# and dpt.current_owner_id <> 'Client' and ((dpt.payccsstatuscode in ('2','6') and (dpt.requested_exe_dt between #startDate:timestamp# and #endDate:timestamp#)) OR (dpt.payccsstatuscode in ('4') and dpt.requested_exe_dt=#endDate:timestamp#))
getChkUtilizedAmount.TOColumnMap={utilized_amount=utilized_amount}
getChkUtilizedAmount.OutputType=com.tcs.ebw.payments.transferobject.UtilizedAmountTO
getChkUtilizedAmount.StmtType=PreparedStatement

getPayConfirmationId.Query=select nextval for paypayref_seq as clientTransactionID from sysibm.sysdummy1
getPayConfirmationId.TOColumnMap={clientTransactionID=clientTransactionID}
getPayConfirmationId.OutputType=java.util.ArrayList
getPayConfirmationId.StmtType=PreparedStatement

getHourValues.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_Hour' order by sort_ord asc
getHourValues.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getHourValues.OutputType=java.util.Vector

getMinuteValues.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_Minute' order by sort_ord asc
getMinuteValues.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getMinuteValues.OutputType=java.util.Vector

getTimeFormat.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_TimeFormat' order by sort_ord asc
getTimeFormat.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getTimeFormat.OutputType=java.util.Vector

getClientVerificationDesc.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_ClientVerification' order by sort_ord asc
getClientVerificationDesc.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getClientVerificationDesc.OutputType=java.util.Vector

getReasonCodeDetails.Query=select DATE(DATE_OF_INSERTION) as REASONCODEDATE,REPLACE(CHAR(TIME(DATE_OF_INSERTION)),'.',':') as REASONCODETIME,RULE_ID as REASONCODEVAL,ERR_LVL as REASONCODESEVERITY,ERRORMSG as REASONCODEDESC,RECENT_RUN AS RECENTRUN from BR_VALIDATION_LOG where BO_KEY=#paypayref:varchar# order by REASONCODEDATE desc, REASONCODETIME desc
getReasonCodeDetails.TOColumnMap={REASONCODEDATE=REASONCODEDATE,REASONCODETIME=REASONCODETIME,REASONCODEVAL=REASONCODEVAL,REASONCODESEVERITY=REASONCODESEVERITY,REASONCODEDESC=REASONCODEDESC,RECENTRUN=RECENTRUN}
getReasonCodeDetails.OutputType=java.util.ArrayList
getReasonCodeDetails.SortKeys=REASONCODEDATE:Date:DESC#REASONCODETIME:varchar:DESC
getReasonCodeDetails.StmtType=PreparedStatement

getActionTableDetails.Query=select dptl.created_modified_by_role as DEPT,dptl.last_action as ACTION,dptl.created_modified_by_id as LOGINID,dptl.created_modified_by_name as USERNAME,dptl.created_modified_date as ACTIONDATE,ds.dmndomainvaldesc as STATUS,dptl.CREATED_MODIFIED_BY_COMMENTS as COMMENTS from  ds_pay_txns_log dptl left outer join ds_domains ds on ds.dmndomain='D_COEStatusCode' and ds.dmndomainval=dptl.TXN_STATUS where paypayref = ( #paypayref:varchar# ) order by ACTIONDATE ASC
getActionTableDetails.TOColumnMap={DEPT=DEPT,ACTION=ACTION,LOGINID=LOGINID,USERNAME=USERNAME,ACTIONDATE=ACTIONDATE,STATUS=STATUS,COMMENTS=COMMENTS}
getActionTableDetails.OutputType=java.util.ArrayList
getActionTableDetails.SortKeys=ACTIONDATE:Date:ASC
getActionTableDetails.StmtType=PreparedStatement

getVerbalAuthDetails.Query=select auth_info_reciever as INFORECEIVER,verbal_auth_client_name as SPOKETO,date(verbal_auth_date) as AUTHDATE,verbal_auth_time as AUTHTIME, client_verification_desc as CLIENTVERIFICATION,auth_confirmed_by as COMFIRMEDBY,current_owner_id as AUTHUSERNAME from  ds_pay_txns where paypayref=#paypayref:varchar#
getVerbalAuthDetails.TOColumnMap={INFORECEIVER=INFORECEIVER,SPOKETO=SPOKETO,AUTHDATE=AUTHDATE,AUTHTIME=AUTHTIME,CLIENTVERIFICATION=CLIENTVERIFICATION,COMFIRMEDBY=COMFIRMEDBY,AUTHUSERNAME=AUTHUSERNAME}
getVerbalAuthDetails.OutputType=java.util.ArrayList
getVerbalAuthDetails.StmtType=PreparedStatement

getBusRuleCntrlUserID.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=860
getBusRuleCntrlUserID.TOColumnMap={VAL=VAL}
getBusRuleCntrlUserID.OutputType=java.util.ArrayList
getBusRuleCntrlUserID.StmtType=Statement

getBusRuleCntrlAppID.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=861
getBusRuleCntrlAppID.TOColumnMap={VAL=VAL}
getBusRuleCntrlAppID.OutputType=java.util.ArrayList
getBusRuleCntrlAppID.StmtType=Statement

getBusRuleCntrlServerID.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=862
getBusRuleCntrlServerID.TOColumnMap={VAL=VAL}
getBusRuleCntrlServerID.OutputType=java.util.ArrayList
getBusRuleCntrlServerID.StmtType=Statement

getAcntViewUserID.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=863
getAcntViewUserID.TOColumnMap={VAL=VAL}
getAcntViewUserID.OutputType=java.util.ArrayList
getAcntViewUserID.StmtType=Statement

getAcntViewAppID.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=864
getAcntViewAppID.TOColumnMap={VAL=VAL}
getAcntViewAppID.OutputType=java.util.ArrayList
getAcntViewAppID.StmtType=Statement

getAcntViewAuthAppID.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=865
getAcntViewAuthAppID.TOColumnMap={VAL=VAL}
getAcntViewAuthAppID.OutputType=java.util.ArrayList
getAcntViewAuthAppID.StmtType=Statement

getAcntViewAuthVerb.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=866
getAcntViewAuthVerb.TOColumnMap={VAL=VAL}
getAcntViewAuthVerb.OutputType=java.util.ArrayList
getAcntViewAuthVerb.StmtType=Statement

getAcntViewWebServerID.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=867
getAcntViewWebServerID.TOColumnMap={VAL=VAL}
getAcntViewWebServerID.OutputType=java.util.ArrayList
getAcntViewWebServerID.StmtType=Statement

getRTABUserID.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=868
getRTABUserID.TOColumnMap={VAL=VAL}
getRTABUserID.OutputType=java.util.ArrayList
getRTABUserID.StmtType=Statement

getAcntPlatingUserID.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=869
getAcntPlatingUserID.TOColumnMap={VAL=VAL}
getAcntPlatingUserID.OutputType=java.util.ArrayList
getAcntPlatingUserID.StmtType=Statement

getAcntPlatingAppID.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=870
getAcntPlatingAppID.TOColumnMap={VAL=VAL}
getAcntPlatingAppID.OutputType=java.util.ArrayList
getAcntPlatingAppID.StmtType=Statement

getAcntPlatingServerIP.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=871
getAcntPlatingServerIP.TOColumnMap={VAL=VAL}
getAcntPlatingServerIP.OutputType=java.util.ArrayList
getAcntPlatingServerIP.StmtType=Statement

getACHDefaultPlanCode.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=873
getACHDefaultPlanCode.TOColumnMap={VAL=VAL}
getACHDefaultPlanCode.OutputType=java.util.ArrayList
getACHDefaultPlanCode.StmtType=Statement

getCheckDefaultIRAPlanCode.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=874
getCheckDefaultIRAPlanCode.TOColumnMap={VAL=VAL}
getCheckDefaultIRAPlanCode.OutputType=java.util.ArrayList
getCheckDefaultIRAPlanCode.StmtType=Statement

getCheckNumCallerPgmId.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=875
getCheckNumCallerPgmId.TOColumnMap={VAL=VAL}
getCheckNumCallerPgmId.OutputType=java.util.ArrayList
getCheckNumCallerPgmId.StmtType=Statement

getCheckNumCallerAppId.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=876
getCheckNumCallerAppId.TOColumnMap={VAL=VAL}
getCheckNumCallerAppId.OutputType=java.util.ArrayList
getCheckNumCallerAppId.StmtType=Statement

getPrintType.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=877
getPrintType.TOColumnMap={VAL=VAL}
getPrintType.OutputType=java.util.ArrayList
getPrintType.StmtType=Statement

getPrintCreatePdf.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=878
getPrintCreatePdf.TOColumnMap={VAL=VAL}
getPrintCreatePdf.OutputType=java.util.ArrayList
getPrintCreatePdf.StmtType=Statement

getPrintEncrypt.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=879
getPrintEncrypt.TOColumnMap={VAL=VAL}
getPrintEncrypt.OutputType=java.util.ArrayList
getPrintEncrypt.StmtType=Statement

getLegalTxtLine1.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=880
getLegalTxtLine1.TOColumnMap={VAL=VAL}
getLegalTxtLine1.OutputType=java.util.ArrayList
getLegalTxtLine1.StmtType=Statement

getLegalTxtLine2.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=881
getLegalTxtLine2.TOColumnMap={VAL=VAL}
getLegalTxtLine2.OutputType=java.util.ArrayList
getLegalTxtLine2.StmtType=Statement

getInquiryNum.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=882
getInquiryNum.TOColumnMap={VAL=VAL}
getInquiryNum.OutputType=java.util.ArrayList
getInquiryNum.StmtType=Statement

getIRATransferType.Query=select ds.dmndomainvaldesc as retirement_types,rt.retirement_mnemonic from retirement_options rt left outer join ds_domains ds on ds.dmndomain='D_IRATxnTypes' and ds.dmndomainval= rt.retirement_mnemonic where from_plan_code=#from_plan_code:varchar# and to_plan_code=#to_plan_code:varchar# and txn_type=#txn_type:varchar# and (active_flag=#active_flag:varchar#) ORDER BY retirement_types ASC
getIRATransferType.TOColumnMap={retirement_types=retirement_types,retirement_mnemonic=retirement_mnemonic}
getIRATransferType.OutputType=java.util.ArrayList
getIRATransferType.StmtType=PreparedStatement

getIRATxnProperties.Query=select qualifier,reverse_qualifier,display_qualifier,ds.dmndomainvaldesc as retirement_mnemonic_desc from retirement_options ro left outer join ds_domains ds on ds.dmndomain='D_IRATxnTypes' and ds.dmndomainval=#retirement_mnemonic:varchar# where ro.from_plan_code=#from_plan_code:varchar# and ro.to_plan_code=#to_plan_code:varchar# and ro.txn_type=#txn_type:varchar# and ro.active_flag=#active_flag:varchar# and ro.retirement_mnemonic=#retirement_mnemonic:varchar#
getIRATxnProperties.TOColumnMap={qualifier=qualifier,reverse_qualifier=reverse_qualifier,retirement_mnemonic_desc=retirement_mnemonic_desc,display_qualifier=display_qualifier}
getIRATxnProperties.OutputType=com.tcs.ebw.payments.transferobject.IRATransferTypeTO
getIRATxnProperties.StmtType=PreparedStatement

getIRATxnViewProperties.Query=select ds.dmndomainvaldesc as retirement_mnemonic_desc from ds_pay_txns dpt left outer join ds_domains ds on ds.dmndomain='D_IRATxnTypes' and ds.dmndomainval=dpt.retirement_mnemonic where paypayref=#txnConfirmation_No:varchar#
getIRATxnViewProperties.TOColumnMap={retirement_mnemonic_desc=retirement_mnemonic_desc}
getIRATxnViewProperties.OutputType=com.tcs.ebw.payments.transferobject.IRATransferTypeTO
getIRATxnViewProperties.StmtType=PreparedStatement

getCancelDRPaymentDetails.Query=select paypayref,paybatchref from ds_pay_txns dpt where (keyaccountnumber_from= #keyaccountnumber_from:varchar# OR keyaccountnumber_to=#keyaccountnumber_from:varchar#) and paypayref not in (#paypayref:varchar#) and payccsstatuscode in ('2','6','46','80')
getCancelDRPaymentDetails.TOColumnMap={paypayref=paypayref,paybatchref=paybatchref}
getCancelDRPaymentDetails.OutputType=java.util.ArrayList
getCancelDRPaymentDetails.StmtType=PreparedStatement

getCancelCRPaymentDetails.Query=select paypayref,paybatchref from ds_pay_txns dpt where (keyaccountnumber_from= #keyaccountnumber_to:varchar# OR keyaccountnumber_to=#keyaccountnumber_to:varchar#) and paypayref not in (#paypayref:varchar#) and payccsstatuscode in ('2','6','46','80')
getCancelCRPaymentDetails.TOColumnMap={paypayref=paypayref,paybatchref=paybatchref}
getCancelCRPaymentDetails.OutputType=java.util.ArrayList
getCancelCRPaymentDetails.StmtType=PreparedStatement

getMS360ContactCenter.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=883
getMS360ContactCenter.TOColumnMap={VAL=VAL}
getMS360ContactCenter.OutputType=java.util.ArrayList
getMS360ContactCenter.StmtType=Statement

getPrintCertifiedAppName.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=884
getPrintCertifiedAppName.TOColumnMap={VAL=VAL}
getPrintCertifiedAppName.OutputType=java.util.ArrayList
getPrintCertifiedAppName.StmtType=Statement

getPrintNonCertifiedAppName.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=885
getPrintNonCertifiedAppName.TOColumnMap={VAL=VAL}
getPrintNonCertifiedAppName.OutputType=java.util.ArrayList
getPrintNonCertifiedAppName.StmtType=Statement

getInternalMinAmount.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=889
getInternalMinAmount.TOColumnMap={VAL=VAL}
getInternalMinAmount.OutputType=java.util.ArrayList
getInternalMinAmount.StmtType=Statement

getInternalMaxAmount.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=890
getInternalMaxAmount.TOColumnMap={VAL=VAL}
getInternalMaxAmount.OutputType=java.util.ArrayList
getInternalMaxAmount.StmtType=Statement

getExternalMinAmount.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=891
getExternalMinAmount.TOColumnMap={VAL=VAL}
getExternalMinAmount.OutputType=java.util.ArrayList
getExternalMinAmount.StmtType=Statement

getExternalMaxAmount.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=892
getExternalMaxAmount.TOColumnMap={VAL=VAL}
getExternalMaxAmount.OutputType=java.util.ArrayList
getExternalMaxAmount.StmtType=Statement

getCheckMinAmount.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=886
getCheckMinAmount.TOColumnMap={VAL=VAL}
getCheckMinAmount.OutputType=java.util.ArrayList
getCheckMinAmount.StmtType=Statement

getCheckMaxAmount.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=887
getCheckMaxAmount.TOColumnMap={VAL=VAL}
getCheckMaxAmount.OutputType=java.util.ArrayList
getCheckMaxAmount.StmtType=Statement

getMaxUntilDollarLimit.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=896
getMaxUntilDollarLimit.TOColumnMap={VAL=VAL}
getMaxUntilDollarLimit.OutputType=java.util.ArrayList
getMaxUntilDollarLimit.StmtType=Statement

getMaxFtrDts.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=898
getMaxFtrDts.TOColumnMap={VAL=VAL}
getMaxFtrDts.OutputType=java.util.ArrayList
getMaxFtrDts.StmtType=Statement

getMaxFtrDtsACH.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=899
getMaxFtrDtsACH.TOColumnMap={VAL=VAL}
getMaxFtrDtsACH.OutputType=java.util.ArrayList
getMaxFtrDtsACH.StmtType=Statement

getMaxFtrDtsChk.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=888
getMaxFtrDtsChk.TOColumnMap={VAL=VAL}
getMaxFtrDtsChk.OutputType=java.util.ArrayList
getMaxFtrDtsChk.StmtType=Statement

getMaxPastDtsVerbalAuth.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=904
getMaxPastDtsVerbalAuth.TOColumnMap={VAL=VAL}
getMaxPastDtsVerbalAuth.OutputType=java.util.ArrayList
getMaxPastDtsVerbalAuth.StmtType=Statement

verifyAccountLink.Query=select count(*) as count from ext_account_link where ext_reference_id=#ext_reference_id:varchar# and int_key_account_no=#int_key_account_no:varchar#
verifyAccountLink.TOColumnMap={count=count}
verifyAccountLink.OutputType=java.util.ArrayList
verifyAccountLink.StmtType=PreparedStatement

createAccountLink.Query=insert into ext_account_link (ext_reference_id,int_key_account_no,int_office,int_fa,int_account,approver_name,approver_id,confirmation_date) values(#ext_reference_id:varchar#,#int_key_account_no:varchar#,#int_office:varchar#,#int_fa:varchar#,#int_account:varchar#,#approver_name:varchar#,#approver_id:varchar#,#confirmation_date:timestamp#)
createAccountLink.StmtType=PreparedStatement

resetApprovalInfo.Query=update ds_pay_txns set versionnum=versionnum+1,paytxneprydate=#paytxneprydate:timestamp#,next_approver_role=#next_approver_role:varchar# where paypayref=#paypayref:varchar#
resetApprovalInfo.StmtType=PreparedStatement

updateRecParentTxnDate.Query=update txn_parent set txn_parent_ver=txn_parent_ver+1,par_txn_request_dt=#par_txn_request_dt:timestamp#,next_txn_dt=#next_txn_dt:timestamp#,prefered_previous_txn_dt=#prefered_previous_txn_dt:timestamp#,actual_previous_txn_dt=#actual_previous_txn_dt:timestamp# where par_txn_no=#par_txn_no:numeric#
updateRecParentTxnDate.StmtType=PreparedStatement

getApproverRoleDesc.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_GetApproversList'
getApproverRoleDesc.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getApproverRoleDesc.OutputType=java.util.ArrayList

fetchTransactionVersion.Query=select tp.txn_parent_ver as txnversionnum, db.batversionnum, dpt.versionnum, chktxnversionnum as chkversionnum from ds_pay_txns dpt left outer join ds_batch db on dpt.paybatchref=db.batbatchref left outer join txn_parent tp on dpt.par_txn_no=tp.par_txn_no left outer join check_txn_dtls ctd on dpt.paypayref=ctd.confirmation_no where dpt.paypayref=#txnReferenceId:varchar# with UR
fetchTransactionVersion.TOColumnMap={txnversionnum=txnversionnum,batversionnum=batversionnum,versionnum=versionnum,chkversionnum=chkversionnum}
fetchTransactionVersion.OutputType=com.tcs.ebw.payments.transferobject.VersionChkOutDtls
fetchTransactionVersion.StmtType=PreparedStatement

fetchAccountVersion.Query=select dr.versionnum from ds_pay_txns dp left outer join ds_payee_ref dr on dp.paypayeeaccnum=dr.cpypayeeid where dp.paypayref=#txnReferenceId:varchar# with UR
fetchAccountVersion.TOColumnMap={versionnum=versionnum}
fetchAccountVersion.OutputType=com.tcs.ebw.payments.transferobject.VersionChkOutDtls
fetchAccountVersion.StmtType=PreparedStatement

getSignedAuthDetails.Query=select verbal_auth_client_name as SPOKETO,auth_confirmed_by as COMFIRMEDBY,current_owner_id as AUTHUSERNAME from  ds_pay_txns where paypayref=#paypayref:varchar#
getSignedAuthDetails.TOColumnMap={SPOKETO=SPOKETO,COMFIRMEDBY=COMFIRMEDBY,AUTHUSERNAME=AUTHUSERNAME}
getSignedAuthDetails.OutputType=java.util.ArrayList
getSignedAuthDetails.StmtType=PreparedStatement

getLinkedRecTxnInstance.Query=select paypayref,paybatchref from ds_pay_txns dpt where dpt.par_txn_no=#par_txn_no:numeric# and dpt.payccsstatuscode in ('2','6','46','80') and dpt.paypayref not in (#paypayref:varchar#)
getLinkedRecTxnInstance.TOColumnMap={paypayref=paypayref,paybatchref=paybatchref}
getLinkedRecTxnInstance.OutputType=java.util.ArrayList
getLinkedRecTxnInstance.StmtType=PreparedStatement

############################## COE Screens Related Queries ############################


# Authorize Txns Starts




getAuthorizeTransactionsLIST_page.Query=select VERSIONNUM,createddate,REQUESTED_EXE_DT,FREQ_TYPE,CREATEDBY,TXN_TYPE,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYDEBITAMT,STATUS,PAYPAYREF,TXNTYPECODE,PAYBATCHREF,PAYCCSSTATUSCODE,ACTION,DURATION,PAYFREQENDDATE,PAYFREQLIMIT,PAYFREQPAYMENTCOUNT,PAYSTSALLIANCEFLAG,RETIREMENT_MNEMONIC,FREQ_TYPE_ORG,count(*) over() total_rows from (select DPT.VERSIONNUM,CAST(DPT.PAYPAYREF AS BIGINT) as PAYPAYREF,CASE WHEN CURRENT_OWNER_ROLE='Client' THEN 'Client' WHEN CURRENT_OWNER_ROLE='INITBRAN' THEN 'Branch' WHEN CURRENT_OWNER_ROLE='INITNBOP' THEN 'NBO' ELSE 'Client' END AS CREATEDBY, DD1.dmndomainvaldesc as TXN_TYPE,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN ' ' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD5.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE,date(DPT.createddate) as createddate,date(REQUESTED_EXE_DT) as REQUESTED_EXE_DT,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR1.CPYACCNUM,4), RIGHT(DR1.CPYACCNUM,3), RIGHT(DR1.CPYACCNUM,2))||' '||DR1.cpypayeename1) as PAYDEBITACCNUM,COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(TOBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR1.CPYACCNUM,4), RIGHT(DR1.CPYACCNUM,3), RIGHT(DR1.CPYACCNUM,2))||' '||DR1.cpypayeename1,CTD.PAYEE_NAME) as PAYPAYEEACCNUM,PAYDEBITAMT,DD2.dmndomainvaldesc  as STATUS,TXN_TYPE AS TXNTYPECODE,PAYBATCHREF,PAYCCSSTATUSCODE,'View' as ACTION,TP.DURATION AS DURATION,DATE(TP.UNTILDATE) as PAYFREQENDDATE,TP.THRSHOLD_AMT as PAYFREQLIMIT,TP.MAX_TXN_NO as PAYFREQPAYMENTCOUNT,case when dpt.TXN_TYPE='CHK-LOC' THEN '1' ELSE '2' END AS PAYSTSALLIANCEFLAG,RETIREMENT_MNEMONIC,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN 'OneTime' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD5.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE_ORG from DS_DOMAINS DD1,DS_DOMAINS DD2,DS_DOMAINS DD3,DS_PAY_TXNS DPT LEFT OUTER JOIN TXN_PARENT TP ON TP.PAR_TXN_NO=DPT.PAR_TXN_NO LEFT OUTER JOIN ds_payee_ref DR1 ON dr1.cpypayeeid=dpt.paypayeeaccnum  LEFT OUTER JOIN CHECK_TXN_DTLS CTD ON CTD.CONFIRMATION_NO=DPT.PAYPAYREF LEFT OUTER JOIN DS_DOMAINS DD5 ON DD5.dmndomain='D_Duration' and DD5.dmndomainval=TP.FREQUENCY where  DD1.dmndomain='D_TxnType_MS360' and DD1.dmndomainval=DPT.TXN_TYPE AND DD2.dmndomain='D_COEStatusCode' and DD2.dmndomainval=DPT.payccsstatuscode AND DD3.dmndomain='D_FrequencyValue' and DD3.dmndomainval=PAYRECURRING AND DPT.PAYCCSSTATUSCODE in ('2','80') AND DPT.NEXT_APPROVER_ROLE in (#approver:varchar#) AND DATE(DPT.CREATEDDATE) BETWEEN (#startDate:date#) AND (#endDate:date#) AND  ((0 IN ( SELECT BRANCH_ID+FA_ID FROM USR_DAP_ACCESS where RACFID=#racfid:varchar# ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND  FROMBRANCH_ID IN ( SELECT BRANCH_ID FROM USR_DAP_ACCESS WHERE RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND FROMBRANCH_id*10000+FROMFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID<>0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id IN ( SELECT BRANCH_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id*10000+ TOFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID =#racfid:varchar# AND FA_ID<>0 ) ) ) #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with ur
getAuthorizeTransactionsLIST_page.TOColumnMap={versionnum=versionnum,createddate=createddate,REQUESTED_EXE_DT=REQUESTED_EXE_DT,FREQ_TYPE=FREQ_TYPE,CREATEDBY=CREATEDBY,TXN_TYPE=TXN_TYPE,PAYDEBITACCNUM=PAYDEBITACCNUM,PAYPAYEEACCNUM=PAYPAYEEACCNUM,PAYDEBITAMT=PAYDEBITAMT,STATUS=STATUS,PAYPAYREF=PAYPAYREF,TXNTYPECODE=TXNTYPECODE,PAYBATCHREF=PAYBATCHREF,PAYCCSSTATUSCODE=PAYCCSSTATUSCODE,ACTION=ACTION,DURATION=DURATION,PAYFREQENDDATE=PAYFREQENDDATE,PAYFREQLIMIT=PAYFREQLIMIT,PAYFREQPAYMENTCOUNT=PAYFREQPAYMENTCOUNT,PAYSTSALLIANCEFLAG=PAYSTSALLIANCEFLAG,RETIREMENT_MNEMONIC=RETIREMENT_MNEMONIC,FREQ_TYPE_ORG=FREQ_TYPE_ORG,total_rows=total_rows}
getAuthorizeTransactionsLIST_page.OutputType=java.util.ArrayList
getAuthorizeTransactionsLIST.StmtType=PreparedStatement
getAuthorizeTransactionsLIST.PgnUniqueKeys=createddate:Date:ASC#PAYPAYREF:numeric:ASC
getAuthorizeTransactionsLIST.SortKeys=createddate:Date:ASC#PAYPAYREF:numeric:ASC




getAuthorizeTransactionsApproverLIST_page.Query=select VERSIONNUM,createddate,REQUESTED_EXE_DT,FREQ_TYPE,CREATEDBY,TXN_TYPE,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYDEBITAMT,STATUS,PAYPAYREF,TXNTYPECODE,PAYBATCHREF,PAYCCSSTATUSCODE,ACTION,DURATION,PAYFREQENDDATE,PAYFREQLIMIT,PAYFREQPAYMENTCOUNT,PAYSTSALLIANCEFLAG,RETIREMENT_MNEMONIC,FREQ_TYPE_ORG,count(*) over() total_rows from (select DPT.VERSIONNUM,CAST(DPT.PAYPAYREF AS BIGINT) as PAYPAYREF,CASE WHEN CURRENT_OWNER_ROLE='Client' THEN 'Client' WHEN CURRENT_OWNER_ROLE='INITBRAN' THEN 'Branch' WHEN CURRENT_OWNER_ROLE='INITNBOP' THEN 'NBO' ELSE 'Client' END AS CREATEDBY, (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_TxnType' and dmndomainval=TXN_TYPE) as TXN_TYPE,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN ' ' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS FREQ_TYPE,date(createddate) as createddate,date(REQUESTED_EXE_DT) as REQUESTED_EXE_DT,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6)  || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),PAYPAYEEID) as PAYDEBITACCNUM,COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6)  || '-' || SUBSTR(TOBR_ACCT_NO_FA,10,3),PAYPAYEEID,(select PAYEE_NAME from CHECK_TXN_DTLS CTD where CTD.CONFIRMATION_NO=DPT.PAYPAYREF)) as PAYPAYEEACCNUM,PAYDEBITAMT,(select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_COEStatusCode' and dmndomainval=payccsstatuscode) as STATUS,TXN_TYPE AS TXNTYPECODE,PAYBATCHREF,PAYCCSSTATUSCODE,'View' as ACTION,(SELECT DURATION FROM TXN_PARENT TP WHERE TP.PAR_TXN_NO=DPT.PAR_TXN_NO) AS DURATION,DATE(PAYFREQENDDATE) as PAYFREQENDDATE,PAYFREQLIMIT,PAYFREQPAYMENTCOUNT,case when dpt.TXN_TYPE='CHK-LOC' THEN '1' ELSE '2' END AS PAYSTSALLIANCEFLAG,RETIREMENT_MNEMONIC,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN 'OneTime' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD5.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE_ORG from DS_PAY_TXNS DPT  where  DPT.PAYCCSSTATUSCODE in ('2') AND 1=2 ) as x  fetch first 2 rows only with ur
getAuthorizeTransactionsApproverLIST_page.TOColumnMap={versionnum=versionnum,createddate=createddate,REQUESTED_EXE_DT=REQUESTED_EXE_DT,FREQ_TYPE=FREQ_TYPE,CREATEDBY=CREATEDBY,TXN_TYPE=TXN_TYPE,PAYDEBITACCNUM=PAYDEBITACCNUM,PAYPAYEEACCNUM=PAYPAYEEACCNUM,PAYDEBITAMT=PAYDEBITAMT,STATUS=STATUS,PAYPAYREF=PAYPAYREF,TXNTYPECODE=TXNTYPECODE,PAYBATCHREF=PAYBATCHREF,PAYCCSSTATUSCODE=PAYCCSSTATUSCODE,ACTION=ACTION,DURATION=DURATION,PAYFREQENDDATE=PAYFREQENDDATE,PAYFREQLIMIT=PAYFREQLIMIT,PAYFREQPAYMENTCOUNT=PAYFREQPAYMENTCOUNT,PAYSTSALLIANCEFLAG=PAYSTSALLIANCEFLAG,RETIREMENT_MNEMONIC=RETIREMENT_MNEMONIC,FREQ_TYPE_ORG=FREQ_TYPE_ORG,total_rows=total_rows}
getAuthorizeTransactionsApproverLIST_page.OutputType=java.util.ArrayList
getAuthorizeTransactionsApproverLIST.StmtType=PreparedStatement
getAuthorizeTransactionsApproverLIST.PgnUniqueKeys=createddate:Date:ASC#PAYPAYREF:numeric:ASC
getAuthorizeTransactionsApproverLIST.SortKeys=createddate:Date:ASC#PAYPAYREF:numeric:ASC


getFrequencyTypes.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_FreqDuration'
getFrequencyTypes.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getFrequencyTypes.OutputType=java.util.Vector

getFreqDuration.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_FreqDuration'
getFreqDuration.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getFreqDuration.OutputType=java.util.Vector

getTxnType.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_TxnType'
getTxnType.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getTxnType.OutputType=java.util.Vector

getAuthorizeListStatusValues.Query=select dmndomainval,dmndomainvaldesc from  ds_domains where dmndomain='D_COEStatusCode' and dmndomainval in ('2','80')
getAuthorizeListStatusValues.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getAuthorizeListStatusValues.OutputType=java.util.Vector


#Change for Defect Id:QA-48842 by Nikita
#getAuthorizeTransactionsSearchLIST_page.Query=select VERSIONNUM,createddate,REQUESTED_EXE_DT,FREQ_TYPE,CREATEDBY,TXN_TYPE,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYDEBITAMT,STATUS,PAYPAYREF,TXNTYPECODE,PAYBATCHREF,PAYCCSSTATUSCODE,ACTION,DURATION,PAYFREQENDDATE,PAYFREQLIMIT,PAYFREQPAYMENTCOUNT,PAYSTSALLIANCEFLAG,RETIREMENT_MNEMONIC,FREQ_TYPE_ORG,count(*) over() total_rows from (select DPT.VERSIONNUM,CAST(DPT.PAYPAYREF AS BIGINT) as PAYPAYREF,CASE WHEN CURRENT_OWNER_ROLE='Client' THEN 'Client' WHEN CURRENT_OWNER_ROLE='INITBRAN' THEN 'Branch' WHEN CURRENT_OWNER_ROLE='INITNBOP' THEN 'NBO' ELSE 'Client' END AS CREATEDBY, DD1.dmndomainvaldesc as TXN_TYPE,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN ' ' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD5.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE,date(DPT.createddate) as createddate,date(REQUESTED_EXE_DT) as REQUESTED_EXE_DT,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR1.CPYACCNUM,4), RIGHT(DR1.CPYACCNUM,3), RIGHT(DR1.CPYACCNUM,2))||' '||DR1.cpypayeename1) as PAYDEBITACCNUM,COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(TOBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR1.CPYACCNUM,4), RIGHT(DR1.CPYACCNUM,3), RIGHT(DR1.CPYACCNUM,2))||' '||DR1.cpypayeename1,CTD.PAYEE_NAME) as PAYPAYEEACCNUM,PAYDEBITAMT,DD2.dmndomainvaldesc  as STATUS,TXN_TYPE AS TXNTYPECODE,PAYBATCHREF,PAYCCSSTATUSCODE,'View' as ACTION,TP.DURATION AS DURATION,DATE(TP.UNTILDATE) as PAYFREQENDDATE,TP.THRSHOLD_AMT as PAYFREQLIMIT,TP.MAX_TXN_NO as PAYFREQPAYMENTCOUNT,case when dpt.TXN_TYPE='CHK-LOC' THEN '1' ELSE '2' END AS PAYSTSALLIANCEFLAG,RETIREMENT_MNEMONIC,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN 'OneTime' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD5.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE_ORG from DS_DOMAINS DD1,DS_DOMAINS DD2,DS_DOMAINS DD3,DS_PAY_TXNS DPT LEFT OUTER JOIN TXN_PARENT TP ON TP.PAR_TXN_NO=DPT.PAR_TXN_NO LEFT OUTER JOIN ds_payee_ref DR1 ON dr1.cpypayeeid=dpt.paypayeeaccnum  LEFT OUTER JOIN CHECK_TXN_DTLS CTD ON CTD.CONFIRMATION_NO=DPT.PAYPAYREF LEFT OUTER JOIN DS_DOMAINS DD5 ON DD5.dmndomain='D_Duration' and DD5.dmndomainval=TP.FREQUENCY where  DD1.dmndomain='D_TxnType_MS360' and DD1.dmndomainval=DPT.TXN_TYPE AND DD2.dmndomain='D_COEStatusCode' and DD2.dmndomainval=DPT.payccsstatuscode AND DD3.dmndomain='D_FrequencyValue' and DD3.dmndomainval=PAYRECURRING AND DPT.PAYCCSSTATUSCODE in ('2','80') AND DPT.NEXT_APPROVER_ROLE in (#approver:varchar#) AND DPT.PAYPAYEEID  like #extAccount:varchar# AND DATE(DPT.CREATEDDATE) BETWEEN (#entryStartDate:date#) AND (#entryEndDate:date#) AND DPT.payccsstatuscode like #status:varchar# AND DPT.PAYRECURRING like #frequencyType2:varchar# AND DPT.paydebitamt BETWEEN (#trxnMinAmount:BigDecimal#) AND (#trxnMaxAmount:BigDecimal#) AND (UPPER(DPT.CURRENT_OWNER_ROLE) like #initiatorName:varchar# OR UPPER(DPT.CURRENT_OWNER_ID) like #initiatorName:varchar#) AND DPT.TXN_TYPE in (#trxnType:varchar#) AND DATE(DPT.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND ((DPT.TXN_TYPE in ('ACH-IN','INT') AND TOBR_ACCT_NO_FA like #officeNo:varchar# ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG') AND FROMBR_ACCT_NO_FA like #officeNo:varchar# )) AND  ((0 IN ( SELECT BRANCH_ID+FA_ID FROM USR_DAP_ACCESS where RACFID=#racfid:varchar# ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND  FROMBRANCH_ID IN ( SELECT BRANCH_ID FROM USR_DAP_ACCESS WHERE RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND FROMBRANCH_id*10000+FROMFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID<>0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id IN ( SELECT BRANCH_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id*10000+ TOFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID =#racfid:varchar# AND FA_ID<>0 ) ) ) AND (RETIREMENT_MNEMONIC like #rttValue:varchar# or ('2'=#rttFlag:varchar# AND RETIREMENT_MNEMONIC IS  NULL)) #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with ur

#Change for Defect Id:QA-56376 by Shashi
getAuthorizeTransactionsSearchLIST_page.Query=select VERSIONNUM,createddate,REQUESTED_EXE_DT,FREQ_TYPE,CREATEDBY,TXN_TYPE,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYDEBITAMT,STATUS,PAYPAYREF,TXNTYPECODE,PAYBATCHREF,PAYCCSSTATUSCODE,ACTION,DURATION,PAYFREQENDDATE,PAYFREQLIMIT,PAYFREQPAYMENTCOUNT,PAYSTSALLIANCEFLAG,RETIREMENT_MNEMONIC,FREQ_TYPE_ORG,count(*) over() total_rows from (select DPT.VERSIONNUM,CAST(DPT.PAYPAYREF AS BIGINT) as PAYPAYREF,CASE WHEN CURRENT_OWNER_ROLE='Client' THEN 'Client' WHEN CURRENT_OWNER_ROLE='INITBRAN' THEN 'Branch' WHEN CURRENT_OWNER_ROLE='INITNBOP' THEN 'NBO' ELSE 'Client' END AS CREATEDBY, DD1.dmndomainvaldesc as TXN_TYPE,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN ' ' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD5.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE,date(DPT.createddate) as createddate,date(REQUESTED_EXE_DT) as REQUESTED_EXE_DT,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR1.CPYACCNUM,4), RIGHT(DR1.CPYACCNUM,3), RIGHT(DR1.CPYACCNUM,2))||' '||DR1.cpypayeename1) as PAYDEBITACCNUM,COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(TOBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR1.CPYACCNUM,4), RIGHT(DR1.CPYACCNUM,3), RIGHT(DR1.CPYACCNUM,2))||' '||DR1.cpypayeename1,CTD.PAYEE_NAME) as PAYPAYEEACCNUM,PAYDEBITAMT,DD2.dmndomainvaldesc  as STATUS,TXN_TYPE AS TXNTYPECODE,PAYBATCHREF,PAYCCSSTATUSCODE,'View' as ACTION,TP.DURATION AS DURATION,DATE(TP.UNTILDATE) as PAYFREQENDDATE,TP.THRSHOLD_AMT as PAYFREQLIMIT,TP.MAX_TXN_NO as PAYFREQPAYMENTCOUNT,case when dpt.TXN_TYPE='CHK-LOC' THEN '1' ELSE '2' END AS PAYSTSALLIANCEFLAG,RETIREMENT_MNEMONIC,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN 'OneTime' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD5.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE_ORG from DS_DOMAINS DD1,DS_DOMAINS DD2,DS_DOMAINS DD3,DS_PAY_TXNS DPT LEFT OUTER JOIN TXN_PARENT TP ON TP.PAR_TXN_NO=DPT.PAR_TXN_NO LEFT OUTER JOIN ds_payee_ref DR1 ON dr1.cpypayeeid=dpt.paypayeeaccnum  LEFT OUTER JOIN CHECK_TXN_DTLS CTD ON CTD.CONFIRMATION_NO=DPT.PAYPAYREF LEFT OUTER JOIN DS_DOMAINS DD5 ON DD5.dmndomain='D_Duration' and DD5.dmndomainval=TP.FREQUENCY where  DD1.dmndomain='D_TxnType_MS360' and DD1.dmndomainval=DPT.TXN_TYPE AND DD2.dmndomain='D_COEStatusCode' and DD2.dmndomainval=DPT.payccsstatuscode AND DD3.dmndomain='D_FrequencyValue' and DD3.dmndomainval=PAYRECURRING AND DPT.PAYCCSSTATUSCODE in ('2','80') AND DPT.NEXT_APPROVER_ROLE in (#approver:varchar#) AND DPT.PAYPAYEEID  like #extAccount:varchar# AND DATE(DPT.CREATEDDATE) BETWEEN (#entryStartDate:date#) AND (#entryEndDate:date#) AND DPT.payccsstatuscode like #status:varchar# AND DPT.PAYRECURRING like #frequencyType2:varchar# AND DPT.paydebitamt BETWEEN (#trxnMinAmount:BigDecimal#) AND (#trxnMaxAmount:BigDecimal#) AND (UPPER(DPT.CURRENT_OWNER_ROLE) like #initiatorName:varchar# OR UPPER(DPT.CURRENT_OWNER_ID) like #initiatorName:varchar#) AND DPT.TXN_TYPE in (#trxnType:varchar#) AND DATE(DPT.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND ((DPT.TXN_TYPE in ('ACH-IN','INT') AND TOBR_ACCT_NO_FA like #officeNo:varchar# ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG') AND FROMBR_ACCT_NO_FA like #officeNo:varchar# )) AND  ((0 IN ( SELECT BRANCH_ID+FA_ID FROM USR_DAP_ACCESS where RACFID=#racfid:varchar# ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND  FROMBRANCH_ID IN ( SELECT BRANCH_ID FROM USR_DAP_ACCESS WHERE RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND FROMBRANCH_id*10000+FROMFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID<>0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id IN ( SELECT BRANCH_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id*10000+ TOFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID =#racfid:varchar# AND FA_ID<>0 ) ) ) AND (RETIREMENT_MNEMONIC like #rttValue:varchar# or ('2'=#rttFlag:varchar# AND RETIREMENT_MNEMONIC IS  NULL)) #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with ur

getAuthorizeTransactionsSearchLIST_page.TOColumnMap={versionnum=versionnum,createddate=createddate,REQUESTED_EXE_DT=REQUESTED_EXE_DT,FREQ_TYPE=FREQ_TYPE,CREATEDBY=CREATEDBY,TXN_TYPE=TXN_TYPE,PAYDEBITACCNUM=PAYDEBITACCNUM,PAYPAYEEACCNUM=PAYPAYEEACCNUM,PAYDEBITAMT=PAYDEBITAMT,STATUS=STATUS,PAYPAYREF=PAYPAYREF,TXNTYPECODE=TXNTYPECODE,PAYBATCHREF=PAYBATCHREF,PAYCCSSTATUSCODE=PAYCCSSTATUSCODE,ACTION=ACTION,DURATION=DURATION,PAYFREQENDDATE=PAYFREQENDDATE,PAYFREQLIMIT=PAYFREQLIMIT,PAYFREQPAYMENTCOUNT=PAYFREQPAYMENTCOUNT,PAYSTSALLIANCEFLAG=PAYSTSALLIANCEFLAG,RETIREMENT_MNEMONIC=RETIREMENT_MNEMONIC,FREQ_TYPE_ORG=FREQ_TYPE_ORG,total_rows=total_rows}
getAuthorizeTransactionsSearchLIST_page.OutputType=java.util.ArrayList
getAuthorizeTransactionsSearchLIST.StmtType=PreparedStatement
getAuthorizeTransactionsSearchLIST.PgnUniqueKeys=createddate:Date:ASC#PAYPAYREF:numeric:ASC
getAuthorizeTransactionsSearchLIST.SortKeys=createddate:Date:ASC#PAYPAYREF:numeric:ASC



getAuthorizeTransactionsConfirmSearchLIST_page.Query=select VERSIONNUM,createddate,REQUESTED_EXE_DT,FREQ_TYPE,CREATEDBY,TXN_TYPE,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYDEBITAMT,STATUS,PAYPAYREF,TXNTYPECODE,PAYBATCHREF,PAYCCSSTATUSCODE,ACTION,DURATION,PAYFREQENDDATE,PAYFREQLIMIT,PAYFREQPAYMENTCOUNT,PAYSTSALLIANCEFLAG,RETIREMENT_MNEMONIC,FREQ_TYPE_ORG,count(*) over() total_rows from (select DPT.VERSIONNUM,CAST(DPT.PAYPAYREF AS BIGINT) as PAYPAYREF,CASE WHEN CURRENT_OWNER_ROLE='Client' THEN 'Client' WHEN CURRENT_OWNER_ROLE='INITBRAN' THEN 'Branch' WHEN CURRENT_OWNER_ROLE='INITNBOP' THEN 'NBO' ELSE 'Client' END AS CREATEDBY, DD1.dmndomainvaldesc as TXN_TYPE,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN ' ' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD5.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE,date(DPT.createddate) as createddate,date(REQUESTED_EXE_DT) as REQUESTED_EXE_DT,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR1.CPYACCNUM,4), RIGHT(DR1.CPYACCNUM,3), RIGHT(DR1.CPYACCNUM,2))||' '||DR1.cpypayeename1) as PAYDEBITACCNUM,COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(TOBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR1.CPYACCNUM,4), RIGHT(DR1.CPYACCNUM,3), RIGHT(DR1.CPYACCNUM,2))||' '||DR1.cpypayeename1,CTD.PAYEE_NAME) as PAYPAYEEACCNUM,PAYDEBITAMT,DD2.dmndomainvaldesc  as STATUS,TXN_TYPE AS TXNTYPECODE,PAYBATCHREF,PAYCCSSTATUSCODE,'View' as ACTION,TP.DURATION AS DURATION,DATE(TP.UNTILDATE) as PAYFREQENDDATE,TP.THRSHOLD_AMT as PAYFREQLIMIT,TP.MAX_TXN_NO as PAYFREQPAYMENTCOUNT,case when dpt.TXN_TYPE='CHK-LOC' THEN '1' ELSE '2' END AS PAYSTSALLIANCEFLAG,RETIREMENT_MNEMONIC,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN 'OneTime' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD5.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE_ORG from DS_DOMAINS DD1,DS_DOMAINS DD2,DS_DOMAINS DD3,DS_PAY_TXNS DPT LEFT OUTER JOIN TXN_PARENT TP ON TP.PAR_TXN_NO=DPT.PAR_TXN_NO LEFT OUTER JOIN ds_payee_ref DR1 ON dr1.cpypayeeid=dpt.paypayeeaccnum  LEFT OUTER JOIN CHECK_TXN_DTLS CTD ON CTD.CONFIRMATION_NO=DPT.PAYPAYREF LEFT OUTER JOIN DS_DOMAINS DD5 ON DD5.dmndomain='D_Duration' and DD5.dmndomainval=TP.FREQUENCY where  DD1.dmndomain='D_TxnType_MS360' and DD1.dmndomainval=DPT.TXN_TYPE AND DD2.dmndomain='D_COEStatusCode' and DD2.dmndomainval=DPT.payccsstatuscode AND DD3.dmndomain='D_FrequencyValue' and DD3.dmndomainval=PAYRECURRING AND DPT.PAYCCSSTATUSCODE in ('2','80') AND DPT.NEXT_APPROVER_ROLE in (#approver:varchar#) AND DPT.PAYPAYREF like #confirmationNo:varchar# AND  ((0 IN ( SELECT BRANCH_ID+FA_ID FROM USR_DAP_ACCESS where RACFID=#racfid:varchar# ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND  FROMBRANCH_ID IN ( SELECT BRANCH_ID FROM USR_DAP_ACCESS WHERE RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND FROMBRANCH_id*10000+FROMFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID<>0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id IN ( SELECT BRANCH_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id*10000+ TOFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID =#racfid:varchar# AND FA_ID<>0 ) ) ) #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with ur
getAuthorizeTransactionsConfirmSearchLIST_page.TOColumnMap={versionnum=versionnum,createddate=createddate,REQUESTED_EXE_DT=REQUESTED_EXE_DT,FREQ_TYPE=FREQ_TYPE,CREATEDBY=CREATEDBY,TXN_TYPE=TXN_TYPE,PAYDEBITACCNUM=PAYDEBITACCNUM,PAYPAYEEACCNUM=PAYPAYEEACCNUM,PAYDEBITAMT=PAYDEBITAMT,STATUS=STATUS,PAYPAYREF=PAYPAYREF,TXNTYPECODE=TXNTYPECODE,PAYBATCHREF=PAYBATCHREF,PAYCCSSTATUSCODE=PAYCCSSTATUSCODE,ACTION=ACTION,DURATION=DURATION,PAYFREQENDDATE=PAYFREQENDDATE,PAYFREQLIMIT=PAYFREQLIMIT,PAYFREQPAYMENTCOUNT=PAYFREQPAYMENTCOUNT,PAYSTSALLIANCEFLAG=PAYSTSALLIANCEFLAG,RETIREMENT_MNEMONIC=RETIREMENT_MNEMONIC,FREQ_TYPE_ORG=FREQ_TYPE_ORG,total_rows=total_rows}
getAuthorizeTransactionsConfirmSearchLIST_page.OutputType=java.util.ArrayList
getAuthorizeTransactionsConfirmSearchLIST.StmtType=PreparedStatement
getAuthorizeTransactionsConfirmSearchLIST.PgnUniqueKeys=createddate:Date:ASC#PAYPAYREF:numeric:ASC
getAuthorizeTransactionsConfirmSearchLIST.SortKeys=createddate:Date:ASC#PAYPAYREF:numeric:ASC




# Authorize Txns Ends


# TxnDetails Starts

#090410#getCTCInitiatorLst.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_CTCInitiatorLst'
getCTCInitiatorLst.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_CTCInitiatorLst' order by SORT_ORD asc
getCTCInitiatorLst.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getCTCInitiatorLst.OutputType=java.util.Vector

#090410#getCTCEntryDate.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_CTCEntryDate'
getCTCEntryDate.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_CTCEntryDate' order by SORT_ORD asc
getCTCEntryDate.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getCTCEntryDate.OutputType=java.util.Vector

#Change for Defect Id:36957 by 259245
#getApproversList.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_GetApproversList'
getApproversList.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_GetApproversList' order by dmndomainvaldesc
getApproversList.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getApproversList.OutputType=java.util.Vector



getPayTxnsDetails.Query=select PAYPAYREF as CONFIRMATIONNO,(SELECT dmndomainvaldesc FROM DS_DOMAINS where dmndomain='D_TxnType' and dmndomainval=TXN_TYPE) as TRXNTYPE ,PAYDEBITAMT as TRXNAMOUNT,CASE WHEN (SELECT dmndomainvaldesc FROM DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc FROM DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc FROM DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY),'') || ')' END AS FREQUENCYTYPE,PAYDEBITACCNUM as ACCNOFROMACC, PAYPAYEEACCNUM as ACCNOTOACC, FROMFA_ID as FAIDFROMACC,TOFA_ID as FAIDTOACC,KEYACCOUNTNUMBER_FROM as KEYACCNOFROMACC,KEYACCOUNTNUMBER_TO as KEYACCNOTOACC, COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6)  || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),PAYPAYEEID) as  OFFICEACCNOFROMACC, COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6)  || '-' || SUBSTR(TOBR_ACCT_NO_FA,10,3),PAYPAYEEID) as OFFICEACCNOTOACC, ACCT_FROM_TYPE as ACCTYPEFROMACC, ACCT_TO_TYPE as ACCTYPETOACC,FROMACCT_TIER as ACCTIERFROMACC,TOACCT_TIER as ACCTIERTOACC, (select CPYBONAME1 FROM ds_payee_ref where CPYPAYEEID = PAYPAYEEACCNUM ) as ACCHELDATFROMACC, (select CPYBANKCODE FROM ds_payee_ref where CPYPAYEEID = PAYPAYEEACCNUM ) as ROUTINGNOFROMACC,(select dmndomainvaldesc FROM  DS_DOMAINS where dmndomain='D_COEStatusCode' and dmndomainval=payccsstatuscode) as STATUS,FROMBRANCH_ID as BRANCHIDFROMACC,TOBRANCH_ID as BRANCHIDTOACC,PAYBATCHREF,PAYCCSSTATUSCODE as statusCode,DPT.VERSIONNUM,DBT.batversionnum as batversionnum,(SELECT txn_parent_ver FROM TXN_PARENT TP WHERE TP.PAR_TXN_NO=DPT.PAR_TXN_NO) AS partxnversionnum from  DS_PAY_TXNS DPT,DS_BATCH DBT where DPT.paypayref= #paypayref:varchar# and DBT.batbatchref=DPT.paybatchref
getPayTxnsDetails.TOColumnMap={confirmationNo=confirmationNo,trxnType=trxnType,trxnAmount=trxnAmount,frequencyType=frequencyType,accNoFromAcc=accNoFromAcc, accNoToAcc=accNoToAcc, faIdFromAcc=faIdFromAcc, faIdToAcc=faIdToAcc, keyAccNoFromAcc=keyAccNoFromAcc, keyAccNoToAcc=keyAccNoToAcc, officeAccNoFromAcc=officeAccNoFromAcc, officeAccNoToAcc=officeAccNoToAcc,accTypeFromAcc=accTypeFromAcc,accTypeToAcc=accTypeToAcc, accTierFromAcc=accTierFromAcc,accTierToAcc=accTierToAcc,accHeldAtFromAcc=accHeldAtFromAcc, routingNoFromAcc=routingNoFromAcc,status=status,branchIdFromAcc=branchIdFromAcc,branchIdToAcc=branchIdToAcc,paybatchref=paybatchref,statusCode=statusCode,versionnum=versionnum,batversionnum=batversionnum,partxnversionnum=partxnversionnum}
getPayTxnsDetails.StmtType=PreparedStatement
getPayTxnsDetails.OutputType=com.tcs.ebw.payments.transferobject.TrxnDetailsOutputTO



# TxnDetails Ends

# View All Transactions Starts 

getViewTrxnListStatusValues.Query=select dmndomainval,dmndomainvaldesc from  ds_domains where dmndomain='D_COEStatusCode' and dmndomainval in ('2','4','48','6','44','20','34','46','50','52','80','101','102','103','110') order by dmndomainvaldesc
getViewTrxnListStatusValues.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getViewTrxnListStatusValues.OutputType=java.util.Vector


getRTTValues.Query=select distinct RETIREMENT_MNEMONIC,RETIREMENT_MNEMONIC from RETIREMENT_OPTIONS order by RETIREMENT_MNEMONIC asc
getRTTValues.TOColumnMap={RETIREMENT_MNEMONIC=RETIREMENT_MNEMONIC}
getRTTValues.OutputType=java.util.Vector



##Mar09##getViewTransactionsOneLIST_page.Query=select VERSIONNUM,CREATEDDATE,PAYPAYREF,CREATEDBY,TXN_TYPE,FREQ_TYPE,REQUESTED_EXE_DT,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYDEBITAMT,STATUS,ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,BATVERSIONNUM,PARTXNVERSIONNUM,TXNTYPECODE,DURATION,PAYFREQENDDATE,PAYFREQLIMIT,PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,FREQ_TYPE_ORG,count(*) over() total_rows  from (select DPT.versionnum,date(DPT.CREATEDDATE) as CREATEDDATE,CAST(DPT.PAYPAYREF AS BIGINT) as PAYPAYREF,CASE WHEN CURRENT_OWNER_ROLE='Client' THEN 'Client' WHEN CURRENT_OWNER_ROLE='INITBRAN' THEN 'Branch' WHEN CURRENT_OWNER_ROLE='INITNBOP' THEN 'NBO' ELSE 'Client' END AS CREATEDBY,DD1.dmndomainvaldesc as TXN_TYPE,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN ' ' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE,date(REQUESTED_EXE_DT) as REQUESTED_EXE_DT,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1) as PAYDEBITACCNUM,COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6)  || '-'|| SUBSTR(TOBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1,CTD.PAYEE_NAME) as PAYPAYEEACCNUM,PAYDEBITAMT,DD2.dmndomainvaldesc As STATUS,'View' as ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,DBT.BATVERSIONNUM,TP.txn_parent_ver AS PARTXNVERSIONNUM,TXN_TYPE AS TXNTYPECODE, TP.DURATION AS DURATION,DATE(TP.UNTILDATE) as PAYFREQENDDATE,TP.THRSHOLD_AMT as PAYFREQLIMIT,TP.MAX_TXN_NO as PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN 'OneTime' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE_ORG from DS_BATCH DBT,DS_DOMAINS DD1,DS_DOMAINS DD2,DS_DOMAINS DD3,DS_PAY_TXNS DPT LEFT OUTER JOIN TXN_PARENT TP ON TP.PAR_TXN_NO=DPT.PAR_TXN_NO  LEFT OUTER JOIN DS_DOMAINS DD4 ON DD4.dmndomain='D_Duration' and DD4.dmndomainval=TP.FREQUENCY  LEFT OUTER JOIN ds_payee_ref DR ON dr.cpypayeeid=dpt.paypayeeaccnum LEFT OUTER JOIN CHECK_TXN_DTLS CTD ON CTD.CONFIRMATION_NO=DPT.PAYPAYREF where  DD1.dmndomain='D_TxnType_MS360' and DD1.dmndomainval=DPT.TXN_TYPE AND DD2.dmndomain='D_COEStatusCode' and DD2.dmndomainval=DPT.payccsstatuscode AND DD3.dmndomain='D_FrequencyValue' and DD3.dmndomainval=DPT.PAYRECURRING AND DPT.PAYBATCHREF=DBT.BATBATCHREF and TRIAL_DEPO='N'  AND DPT.PAYPAYREF like #confirmationNo:varchar# AND DPT.NEXT_APPROVER_ROLE like #approver:varchar# AND (DPT.INITIATOR_ID like #racfid:varchar# or DPT.CURRENT_OWNER_ID LIKE (#racfid:varchar#)) AND DATE(DPT.CREATEDDATE) BETWEEN (#startDate:date#) AND (#endDate:date#)  AND ((0 IN ( SELECT BRANCH_ID+FA_ID FROM USR_DAP_ACCESS where RACFID=#racfid:varchar# ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND  FROMBRANCH_ID IN ( SELECT BRANCH_ID FROM USR_DAP_ACCESS WHERE RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND FROMBRANCH_id*10000+FROMFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID<>0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN','INT')  AND   TOBRANCH_id IN ( SELECT BRANCH_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN','INT')  AND   TOBRANCH_id*10000+ TOFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID =#racfid:varchar# AND FA_ID<>0 ) ) ) #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with ur
getViewTransactionsOneLIST_page.Query=select VERSIONNUM,CREATEDDATE,PAYPAYREF,CREATEDBY,TXN_TYPE,FREQ_TYPE,REQUESTED_EXE_DT,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYDEBITAMT,STATUS,ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,BATVERSIONNUM,PARTXNVERSIONNUM,TXNTYPECODE,DURATION,PAYFREQENDDATE,PAYFREQLIMIT,PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,FREQ_TYPE_ORG,ACTUAL_EXE_DT,count(*) over() total_rows  from (select DPT.versionnum,date(DPT.CREATEDDATE) as CREATEDDATE,CAST(DPT.PAYPAYREF AS BIGINT) as PAYPAYREF,CASE WHEN CURRENT_OWNER_ROLE='Client' THEN 'Client' WHEN CURRENT_OWNER_ROLE='INITBRAN' THEN 'Branch' WHEN CURRENT_OWNER_ROLE='INITNBOP' THEN 'NBO' ELSE 'Client' END AS CREATEDBY,DD1.dmndomainvaldesc as TXN_TYPE,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN ' ' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE,date(REQUESTED_EXE_DT) as REQUESTED_EXE_DT,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1) as PAYDEBITACCNUM,COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6)  || '-'|| SUBSTR(TOBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1,CTD.PAYEE_NAME) as PAYPAYEEACCNUM,PAYDEBITAMT,DD2.dmndomainvaldesc As STATUS,'View' as ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,DBT.BATVERSIONNUM,TP.txn_parent_ver AS PARTXNVERSIONNUM,TXN_TYPE AS TXNTYPECODE, TP.DURATION AS DURATION,DATE(TP.UNTILDATE) as PAYFREQENDDATE,TP.THRSHOLD_AMT as PAYFREQLIMIT,TP.MAX_TXN_NO as PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN 'OneTime' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE_ORG,date(ACTUAL_EXE_DT) as ACTUAL_EXE_DT from DS_BATCH DBT,DS_DOMAINS DD1,DS_DOMAINS DD2,DS_DOMAINS DD3,DS_PAY_TXNS DPT LEFT OUTER JOIN TXN_PARENT TP ON TP.PAR_TXN_NO=DPT.PAR_TXN_NO  LEFT OUTER JOIN DS_DOMAINS DD4 ON DD4.dmndomain='D_Duration' and DD4.dmndomainval=TP.FREQUENCY  LEFT OUTER JOIN ds_payee_ref DR ON dr.cpypayeeid=dpt.paypayeeaccnum LEFT OUTER JOIN CHECK_TXN_DTLS CTD ON CTD.CONFIRMATION_NO=DPT.PAYPAYREF where  DD1.dmndomain='D_TxnType_MS360' and DD1.dmndomainval=DPT.TXN_TYPE AND DD2.dmndomain='D_COEStatusCode' and DD2.dmndomainval=DPT.payccsstatuscode AND DD3.dmndomain='D_FrequencyValue' and DD3.dmndomainval=DPT.PAYRECURRING AND DPT.PAYBATCHREF=DBT.BATBATCHREF and  (DPT.INITIATOR_ID like #racfid:varchar# or DPT.CURRENT_OWNER_ID LIKE (#racfid:varchar#)) AND  DATE(DPT.CREATEDDATE) BETWEEN (#startDate:date#) AND (#endDate:date#)  AND DPT.NEXT_APPROVER_ROLE like #approver:varchar# AND   TRIAL_DEPO='N'  AND ((0 IN ( SELECT BRANCH_ID+FA_ID FROM USR_DAP_ACCESS where RACFID=#racfid:varchar# ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND  FROMBRANCH_ID IN ( SELECT BRANCH_ID FROM USR_DAP_ACCESS WHERE RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND FROMBRANCH_id*10000+FROMFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID<>0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id IN ( SELECT BRANCH_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id*10000+ TOFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID =#racfid:varchar# AND FA_ID<>0 ) ) ) #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with ur

getViewTransactionsOneLIST_page.TOColumnMap={versionnum=versionnum,CREATEDDATE=CREATEDDATE,PAYPAYREF=PAYPAYREF,CREATEDBY=CREATEDBY,TXN_TYPE=TXN_TYPE,FREQ_TYPE=FREQ_TYPE,REQUESTED_EXE_DT=REQUESTED_EXE_DT,PAYDEBITACCNUM=PAYDEBITACCNUM,PAYPAYEEACCNUM=PAYPAYEEACCNUM,PAYDEBITAMT=PAYDEBITAMT,STATUS=STATUS,ACTION=ACTION,PAYBATCHREF=PAYBATCHREF,PAYCCSSTATUSCODE=PAYCCSSTATUSCODE,BATVERSIONNUM=BATVERSIONNUM,PARTXNVERSIONNUM=PARTXNVERSIONNUM,TXNTYPECODE=TXNTYPECODE,DURATION=DURATION,PAYFREQENDDATE=PAYFREQENDDATE,PAYFREQLIMIT=PAYFREQLIMIT,PAYFREQPAYMENTCOUNT=PAYFREQPAYMENTCOUNT,PAYRECURRING=PAYRECURRING,RETIREMENT_MNEMONIC=RETIREMENT_MNEMONIC,FREQ_TYPE_ORG=FREQ_TYPE_ORG,ACTUAL_EXE_DT=ACTUAL_EXE_DT,total_rows=total_rows}
getViewTransactionsOneLIST_page.OutputType=java.util.ArrayList
getViewTransactionsOneLIST.StmtType=PreparedStatement
getViewTransactionsOneLIST.PgnUniqueKeys=CREATEDDATE:Date:DESC#PAYPAYREF:numeric:DESC
getViewTransactionsOneLIST.SortKeys=CREATEDDATE:Date:DESC#PAYPAYREF:numeric:DESC


##Mar09##getViewTransactionsOneSearchLIST_page.Query=select VERSIONNUM,CREATEDDATE,PAYPAYREF,CREATEDBY,TXN_TYPE,FREQ_TYPE,REQUESTED_EXE_DT,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYDEBITAMT,STATUS,ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,BATVERSIONNUM,PARTXNVERSIONNUM,TXNTYPECODE,DURATION,PAYFREQENDDATE,PAYFREQLIMIT,PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,FREQ_TYPE_ORG,count(*) over() total_rows from (select DPT.versionnum,date(DPT.CREATEDDATE) as CREATEDDATE,CAST(DPT.PAYPAYREF AS BIGINT) as PAYPAYREF,CASE WHEN CURRENT_OWNER_ROLE='Client' THEN 'Client' WHEN CURRENT_OWNER_ROLE='INITBRAN' THEN 'Branch' WHEN CURRENT_OWNER_ROLE='INITNBOP' THEN 'NBO' ELSE 'Client' END AS CREATEDBY,DD1.dmndomainvaldesc as TXN_TYPE,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN ' ' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE,date(REQUESTED_EXE_DT) as REQUESTED_EXE_DT,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1) as PAYDEBITACCNUM,COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6)  || '-' || SUBSTR(TOBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1,CTD.PAYEE_NAME) as PAYPAYEEACCNUM,PAYDEBITAMT,DD2.dmndomainvaldesc As STATUS,'View' as ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,DBT.BATVERSIONNUM,TP.txn_parent_ver AS PARTXNVERSIONNUM,TXN_TYPE AS TXNTYPECODE, TP.DURATION AS DURATION,DATE(TP.UNTILDATE) as PAYFREQENDDATE,TP.THRSHOLD_AMT as PAYFREQLIMIT,TP.MAX_TXN_NO as PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN 'OneTime' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE_ORG from DS_BATCH DBT,DS_DOMAINS DD1,DS_DOMAINS DD2,DS_DOMAINS DD3,DS_PAY_TXNS DPT LEFT OUTER JOIN TXN_PARENT TP ON TP.PAR_TXN_NO=DPT.PAR_TXN_NO  LEFT OUTER JOIN DS_DOMAINS DD4 ON DD4.dmndomain='D_Duration' and DD4.dmndomainval=TP.FREQUENCY  LEFT OUTER JOIN ds_payee_ref DR ON dr.cpypayeeid=dpt.paypayeeaccnum LEFT OUTER JOIN CHECK_TXN_DTLS CTD ON CTD.CONFIRMATION_NO=DPT.PAYPAYREF where  DD1.dmndomain='D_TxnType_MS360' and DD1.dmndomainval=DPT.TXN_TYPE AND DD2.dmndomain='D_COEStatusCode' and DD2.dmndomainval=DPT.payccsstatuscode AND DD3.dmndomain='D_FrequencyValue' and DD3.dmndomainval=DPT.PAYRECURRING AND DPT.PAYBATCHREF=DBT.BATBATCHREF and TRIAL_DEPO='N' AND ( DPT.NEXT_APPROVER_ROLE like #approver:varchar# AND DPT.payccsstatuscode in (#approverStatus:varchar#)) AND (DPT.INITIATOR_ID like #racfid:varchar# or DPT.CURRENT_OWNER_ID LIKE (#racfid:varchar#)) AND DATE(DPT.CREATEDDATE) BETWEEN (#entryStartDate:date#) AND (#entryEndDate:date#) AND DATE(DPT.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND (UPPER(DPT.CURRENT_OWNER_ROLE) like #initiatorName:varchar# OR UPPER(DPT.CURRENT_OWNER_ID) like #initiatorName:varchar#) AND DPT.paydebitamt BETWEEN (#trxnMinAmount:BigDecimal#) AND (#trxnMaxAmount:BigDecimal#)  AND   DPT.PAYPAYREF like #confirmationNo:varchar# AND DPT.PAYPAYEEID like #extAccount:varchar#  AND DPT.payccsstatuscode like #status:varchar# AND DPT.PAYRECURRING like  #frequencyType2:varchar# AND ((DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG') AND FROMBR_ACCT_NO_FA like #officeNo:varchar# ) OR (DPT.TXN_TYPE in ('ACH-IN','INT') AND TOBR_ACCT_NO_FA like #officeNo:varchar# ))  AND DPT.TXN_TYPE in (#trxnType:varchar#) AND ((0 IN ( SELECT BRANCH_ID+FA_ID FROM USR_DAP_ACCESS where RACFID=#racfid:varchar# ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND  FROMBRANCH_ID IN ( SELECT BRANCH_ID FROM USR_DAP_ACCESS WHERE RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND FROMBRANCH_id*10000+FROMFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID<>0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN','INT')  AND   TOBRANCH_id IN ( SELECT BRANCH_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN','INT')  AND   TOBRANCH_id*10000+ TOFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID =#racfid:varchar# AND FA_ID<>0 ) ) ) AND (RETIREMENT_MNEMONIC like #rttValue:varchar# or ('2'=#rttFlag:varchar# AND RETIREMENT_MNEMONIC IS  NULL)) #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with ur

getViewTransactionsOneSearchLIST_page.Query=select VERSIONNUM,CREATEDDATE,PAYPAYREF,CREATEDBY,TXN_TYPE,FREQ_TYPE,REQUESTED_EXE_DT,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYDEBITAMT,STATUS,ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,BATVERSIONNUM,PARTXNVERSIONNUM,TXNTYPECODE,DURATION,PAYFREQENDDATE,PAYFREQLIMIT,PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,FREQ_TYPE_ORG,ACTUAL_EXE_DT,count(*) over() total_rows from (select DPT.versionnum,date(DPT.CREATEDDATE) as CREATEDDATE,CAST(DPT.PAYPAYREF AS BIGINT) as PAYPAYREF,CASE WHEN CURRENT_OWNER_ROLE='Client' THEN 'Client' WHEN CURRENT_OWNER_ROLE='INITBRAN' THEN 'Branch' WHEN CURRENT_OWNER_ROLE='INITNBOP' THEN 'NBO' ELSE 'Client' END AS CREATEDBY,DD1.dmndomainvaldesc as TXN_TYPE,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN ' ' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE,date(REQUESTED_EXE_DT) as REQUESTED_EXE_DT,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1) as PAYDEBITACCNUM,COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6)  || '-' || SUBSTR(TOBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1,CTD.PAYEE_NAME) as PAYPAYEEACCNUM,PAYDEBITAMT,DD2.dmndomainvaldesc As STATUS,'View' as ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,DBT.BATVERSIONNUM,TP.txn_parent_ver AS PARTXNVERSIONNUM,TXN_TYPE AS TXNTYPECODE, TP.DURATION AS DURATION,DATE(TP.UNTILDATE) as PAYFREQENDDATE,TP.THRSHOLD_AMT as PAYFREQLIMIT,TP.MAX_TXN_NO as PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN 'OneTime' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE_ORG,date(ACTUAL_EXE_DT) as ACTUAL_EXE_DT from DS_BATCH DBT,DS_DOMAINS DD1,DS_DOMAINS DD2,DS_DOMAINS DD3,DS_PAY_TXNS DPT LEFT OUTER JOIN TXN_PARENT TP ON TP.PAR_TXN_NO=DPT.PAR_TXN_NO  LEFT OUTER JOIN DS_DOMAINS DD4 ON DD4.dmndomain='D_Duration' and DD4.dmndomainval=TP.FREQUENCY  LEFT OUTER JOIN ds_payee_ref DR ON dr.cpypayeeid=dpt.paypayeeaccnum LEFT OUTER JOIN CHECK_TXN_DTLS CTD ON CTD.CONFIRMATION_NO=DPT.PAYPAYREF where  DD1.dmndomain='D_TxnType_MS360' and DD1.dmndomainval=DPT.TXN_TYPE AND DD2.dmndomain='D_COEStatusCode' and DD2.dmndomainval=DPT.payccsstatuscode AND DD3.dmndomain='D_FrequencyValue' and DD3.dmndomainval=DPT.PAYRECURRING AND DPT.PAYBATCHREF=DBT.BATBATCHREF and  (DPT.INITIATOR_ID like #racfid:varchar# or DPT.CURRENT_OWNER_ID LIKE (#racfid:varchar#)) AND  DATE(DPT.CREATEDDATE) BETWEEN (#entryStartDate:date#) AND (#entryEndDate:date#) AND    DPT.PAYPAYEEID like #extAccount:varchar#  AND ( DPT.NEXT_APPROVER_ROLE like #approver:varchar# AND DPT.payccsstatuscode in (#approverStatus:varchar#)) AND DATE(DPT.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND  TRIAL_DEPO='N'   AND UPPER(DPT.CURRENT_OWNER_ROLE) like #initiatorName:varchar#  AND DPT.paydebitamt BETWEEN (#trxnMinAmount:BigDecimal#) AND (#trxnMaxAmount:BigDecimal#)    AND DPT.payccsstatuscode like #status:varchar# AND DPT.PAYRECURRING like  #frequencyType2:varchar# AND ((DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG') AND FROMBR_ACCT_NO_FA like #officeNo:varchar# ) OR (DPT.TXN_TYPE in ('ACH-IN') AND TOBR_ACCT_NO_FA like #officeNo:varchar# ))  AND DPT.TXN_TYPE in (#trxnType:varchar#) AND ((0 IN ( SELECT BRANCH_ID+FA_ID FROM USR_DAP_ACCESS where RACFID=#racfid:varchar# ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND  FROMBRANCH_ID IN ( SELECT BRANCH_ID FROM USR_DAP_ACCESS WHERE RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND FROMBRANCH_id*10000+FROMFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID<>0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id IN ( SELECT BRANCH_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id*10000+ TOFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID =#racfid:varchar# AND FA_ID<>0 ) ) ) AND (RETIREMENT_MNEMONIC like #rttValue:varchar# or ('2'=#rttFlag:varchar# AND RETIREMENT_MNEMONIC IS  NULL)) #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with ur

getViewTransactionsOneSearchLIST_page.TOColumnMap={versionnum=versionnum,CREATEDDATE=CREATEDDATE,PAYPAYREF=PAYPAYREF,CREATEDBY=CREATEDBY,TXN_TYPE=TXN_TYPE,FREQ_TYPE=FREQ_TYPE,REQUESTED_EXE_DT=REQUESTED_EXE_DT,PAYDEBITACCNUM=PAYDEBITACCNUM,PAYPAYEEACCNUM=PAYPAYEEACCNUM,PAYDEBITAMT=PAYDEBITAMT,STATUS=STATUS,ACTION=ACTION,PAYBATCHREF=PAYBATCHREF,PAYCCSSTATUSCODE=PAYCCSSTATUSCODE,BATVERSIONNUM=BATVERSIONNUM,PARTXNVERSIONNUM=PARTXNVERSIONNUM,TXNTYPECODE=TXNTYPECODE,DURATION=DURATION,PAYFREQENDDATE=PAYFREQENDDATE,PAYFREQLIMIT=PAYFREQLIMIT,PAYFREQPAYMENTCOUNT=PAYFREQPAYMENTCOUNT,PAYRECURRING=PAYRECURRING,RETIREMENT_MNEMONIC=RETIREMENT_MNEMONIC,FREQ_TYPE_ORG=FREQ_TYPE_ORG,ACTUAL_EXE_DT=ACTUAL_EXE_DT,total_rows=total_rows}
getViewTransactionsOneSearchLIST_page.OutputType=java.util.ArrayList
getViewTransactionsOneSearchLIST.StmtType=PreparedStatement
getViewTransactionsOneSearchLIST.PgnUniqueKeys=CREATEDDATE:Date:DESC#PAYPAYREF:numeric:DESC
getViewTransactionsOneSearchLIST.SortKeys=CREATEDDATE:Date:DESC#PAYPAYREF:numeric:DESC


##Mar09##getViewTransactionsOneConfirmSearchLIST_page.Query=select VERSIONNUM,CREATEDDATE,PAYPAYREF,CREATEDBY,TXN_TYPE,FREQ_TYPE,REQUESTED_EXE_DT,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYDEBITAMT,STATUS,ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,BATVERSIONNUM,PARTXNVERSIONNUM,TXNTYPECODE,DURATION,PAYFREQENDDATE,PAYFREQLIMIT,PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,FREQ_TYPE_ORG,count(*) over() total_rows from (select DPT.versionnum,date(DPT.CREATEDDATE) as CREATEDDATE,CAST(DPT.PAYPAYREF AS BIGINT) as PAYPAYREF,CASE WHEN CURRENT_OWNER_ROLE='Client' THEN 'Client' WHEN CURRENT_OWNER_ROLE='INITBRAN' THEN 'Branch' WHEN CURRENT_OWNER_ROLE='INITNBOP' THEN 'NBO' ELSE 'Client' END AS CREATEDBY,DD1.dmndomainvaldesc as TXN_TYPE,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN ' ' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE,date(REQUESTED_EXE_DT) as REQUESTED_EXE_DT,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1) as PAYDEBITACCNUM,COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(TOBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1,CTD.PAYEE_NAME) as PAYPAYEEACCNUM,PAYDEBITAMT,DD2.dmndomainvaldesc As STATUS,'View' as ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,DBT.BATVERSIONNUM,TP.txn_parent_ver AS PARTXNVERSIONNUM,TXN_TYPE AS TXNTYPECODE, TP.DURATION AS DURATION,DATE(TP.UNTILDATE) as PAYFREQENDDATE,TP.THRSHOLD_AMT as PAYFREQLIMIT,TP.MAX_TXN_NO as PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN 'OneTime' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE_ORG from DS_BATCH DBT,DS_DOMAINS DD1,DS_DOMAINS DD2,DS_DOMAINS DD3,DS_PAY_TXNS DPT LEFT OUTER JOIN TXN_PARENT TP ON TP.PAR_TXN_NO=DPT.PAR_TXN_NO LEFT OUTER JOIN DS_DOMAINS DD4 ON DD4.dmndomain='D_Duration' and DD4.dmndomainval=TP.FREQUENCY LEFT OUTER JOIN ds_payee_ref DR ON dr.cpypayeeid=dpt.paypayeeaccnum LEFT OUTER JOIN CHECK_TXN_DTLS CTD ON CTD.CONFIRMATION_NO=DPT.PAYPAYREF where DD1.dmndomain='D_TxnType_MS360' and DD1.dmndomainval=DPT.TXN_TYPE AND DD2.dmndomain='D_COEStatusCode' and DD2.dmndomainval=DPT.payccsstatuscode AND DD3.dmndomain='D_FrequencyValue' and DD3.dmndomainval=DPT.PAYRECURRING AND DPT.PAYBATCHREF=DBT.BATBATCHREF and TRIAL_DEPO='N' AND DPT.PAYPAYREF like #confirmationNo:varchar#  AND  ((0 IN ( SELECT BRANCH_ID+FA_ID FROM USR_DAP_ACCESS where RACFID=#racfid:varchar# ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND  FROMBRANCH_ID IN ( SELECT BRANCH_ID FROM USR_DAP_ACCESS WHERE RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND FROMBRANCH_id*10000+FROMFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID<>0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN','INT')  AND   TOBRANCH_id IN ( SELECT BRANCH_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN','INT')  AND   TOBRANCH_id*10000+ TOFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID =#racfid:varchar# AND FA_ID<>0 ) ) ) #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with ur

getViewTransactionsOneConfirmSearchLIST_page.Query=select VERSIONNUM,CREATEDDATE,PAYPAYREF,CREATEDBY,TXN_TYPE,FREQ_TYPE,REQUESTED_EXE_DT,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYDEBITAMT,STATUS,ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,BATVERSIONNUM,PARTXNVERSIONNUM,TXNTYPECODE,DURATION,PAYFREQENDDATE,PAYFREQLIMIT,PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,FREQ_TYPE_ORG,ACTUAL_EXE_DT,count(*) over() total_rows from (select DPT.versionnum,date(DPT.CREATEDDATE) as CREATEDDATE,CAST(DPT.PAYPAYREF AS BIGINT) as PAYPAYREF,CASE WHEN CURRENT_OWNER_ROLE='Client' THEN 'Client' WHEN CURRENT_OWNER_ROLE='INITBRAN' THEN 'Branch' WHEN CURRENT_OWNER_ROLE='INITNBOP' THEN 'NBO' ELSE 'Client' END AS CREATEDBY,DD1.dmndomainvaldesc as TXN_TYPE,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN ' ' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE,date(REQUESTED_EXE_DT) as REQUESTED_EXE_DT,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1) as PAYDEBITACCNUM,COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(TOBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1,CTD.PAYEE_NAME) as PAYPAYEEACCNUM,PAYDEBITAMT,DD2.dmndomainvaldesc As STATUS,'View' as ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,DBT.BATVERSIONNUM,TP.txn_parent_ver AS PARTXNVERSIONNUM,TXN_TYPE AS TXNTYPECODE, TP.DURATION AS DURATION,DATE(TP.UNTILDATE) as PAYFREQENDDATE,TP.THRSHOLD_AMT as PAYFREQLIMIT,TP.MAX_TXN_NO as PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN 'OneTime' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE_ORG,date(ACTUAL_EXE_DT) as ACTUAL_EXE_DT from DS_BATCH DBT,DS_DOMAINS DD1,DS_DOMAINS DD2,DS_DOMAINS DD3,DS_PAY_TXNS DPT LEFT OUTER JOIN TXN_PARENT TP ON TP.PAR_TXN_NO=DPT.PAR_TXN_NO LEFT OUTER JOIN DS_DOMAINS DD4 ON DD4.dmndomain='D_Duration' and DD4.dmndomainval=TP.FREQUENCY LEFT OUTER JOIN ds_payee_ref DR ON dr.cpypayeeid=dpt.paypayeeaccnum LEFT OUTER JOIN CHECK_TXN_DTLS CTD ON CTD.CONFIRMATION_NO=DPT.PAYPAYREF where DD1.dmndomain='D_TxnType_MS360' and DD1.dmndomainval=DPT.TXN_TYPE AND DD2.dmndomain='D_COEStatusCode' and DD2.dmndomainval=DPT.payccsstatuscode AND DD3.dmndomain='D_FrequencyValue' and DD3.dmndomainval=DPT.PAYRECURRING AND DPT.PAYBATCHREF=DBT.BATBATCHREF  AND DPT.PAYPAYREF like #confirmationNo:varchar# and TRIAL_DEPO='N'  AND  ((0 IN ( SELECT BRANCH_ID+FA_ID FROM USR_DAP_ACCESS where RACFID=#racfid:varchar# ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND  FROMBRANCH_ID IN ( SELECT BRANCH_ID FROM USR_DAP_ACCESS WHERE RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND FROMBRANCH_id*10000+FROMFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID<>0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id IN ( SELECT BRANCH_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id*10000+ TOFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID =#racfid:varchar# AND FA_ID<>0 ) ) ) #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with ur

getViewTransactionsOneConfirmSearchLIST_page.TOColumnMap={versionnum=versionnum,CREATEDDATE=CREATEDDATE,PAYPAYREF=PAYPAYREF,CREATEDBY=CREATEDBY,TXN_TYPE=TXN_TYPE,FREQ_TYPE=FREQ_TYPE,REQUESTED_EXE_DT=REQUESTED_EXE_DT,PAYDEBITACCNUM=PAYDEBITACCNUM,PAYPAYEEACCNUM=PAYPAYEEACCNUM,PAYDEBITAMT=PAYDEBITAMT,STATUS=STATUS,ACTION=ACTION,PAYBATCHREF=PAYBATCHREF,PAYCCSSTATUSCODE=PAYCCSSTATUSCODE,BATVERSIONNUM=BATVERSIONNUM,PARTXNVERSIONNUM=PARTXNVERSIONNUM,TXNTYPECODE=TXNTYPECODE,DURATION=DURATION,PAYFREQENDDATE=PAYFREQENDDATE,PAYFREQLIMIT=PAYFREQLIMIT,PAYFREQPAYMENTCOUNT=PAYFREQPAYMENTCOUNT,PAYRECURRING=PAYRECURRING,RETIREMENT_MNEMONIC=RETIREMENT_MNEMONIC,FREQ_TYPE_ORG=FREQ_TYPE_ORG,ACTUAL_EXE_DT=ACTUAL_EXE_DT,total_rows=total_rows}
getViewTransactionsOneConfirmSearchLIST_page.OutputType=java.util.ArrayList
getViewTransactionsOneConfirmSearchLIST.StmtType=PreparedStatement
getViewTransactionsOneConfirmSearchLIST.PgnUniqueKeys=CREATEDDATE:Date:DESC#PAYPAYREF:numeric:DESC
getViewTransactionsOneConfirmSearchLIST.SortKeys=CREATEDDATE:Date:DESC#PAYPAYREF:numeric:DESC

getViewTransactionsTwoLIST_page.Query=select VERSIONNUM,CREATEDDATE,PAYPAYREF,CREATEDBY,TXN_TYPE,FREQ_TYPE,REQUESTED_EXE_DT,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYDEBITAMT,STATUS,ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,BATVERSIONNUM,PARTXNVERSIONNUM,TXNTYPECODE,DURATION,PAYFREQENDDATE,PAYFREQLIMIT,PAYFREQPAYMENTCOUNT,PAYRECURRING,FREQ_TYPE_ORG,ACTUAL_EXE_DT,count(*) over() total_rows from (select DPT.versionnum,date(DPT.CREATEDDATE) as CREATEDDATE,CAST(DPT.PAYPAYREF AS BIGINT) as PAYPAYREF,CASE WHEN CURRENT_OWNER_ROLE='Client' THEN 'Client' WHEN CURRENT_OWNER_ROLE='INITBRAN' THEN 'Branch' WHEN CURRENT_OWNER_ROLE='INITNBOP' THEN 'NBO' ELSE 'Client' END AS CREATEDBY,DD1.dmndomainvaldesc as TXN_TYPE,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN ' ' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE,date(REQUESTED_EXE_DT) as REQUESTED_EXE_DT,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1) as PAYDEBITACCNUM,COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6)  || '-'|| SUBSTR(TOBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1,CTD.PAYEE_NAME) as PAYPAYEEACCNUM,PAYDEBITAMT,DD2.dmndomainvaldesc As STATUS,'View' as ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,DBT.BATVERSIONNUM,TP.txn_parent_ver AS PARTXNVERSIONNUM,TXN_TYPE AS TXNTYPECODE, TP.DURATION AS DURATION,DATE(TP.UNTILDATE) as PAYFREQENDDATE,TP.THRSHOLD_AMT as PAYFREQLIMIT,TP.MAX_TXN_NO as PAYFREQPAYMENTCOUNT,PAYRECURRING,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN 'OneTime' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE_ORG,date(ACTUAL_EXE_DT) as ACTUAL_EXE_DT from DS_BATCH DBT,DS_DOMAINS DD1,DS_DOMAINS DD2,DS_DOMAINS DD3,DS_PAY_TXNS DPT LEFT OUTER JOIN TXN_PARENT TP ON TP.PAR_TXN_NO=DPT.PAR_TXN_NO  LEFT OUTER JOIN DS_DOMAINS DD4 ON DD4.dmndomain='D_Duration' and DD4.dmndomainval=TP.FREQUENCY  LEFT OUTER JOIN ds_payee_ref DR ON dr.cpypayeeid=dpt.paypayeeaccnum LEFT OUTER JOIN CHECK_TXN_DTLS CTD ON CTD.CONFIRMATION_NO=DPT.PAYPAYREF where  DD1.dmndomain='D_TxnType_MS360' and DD1.dmndomainval=DPT.TXN_TYPE AND DD2.dmndomain='D_COEStatusCode' and DD2.dmndomainval=DPT.payccsstatuscode AND DD3.dmndomain='D_FrequencyValue' and DD3.dmndomainval=DPT.PAYRECURRING AND DPT.PAYBATCHREF=DBT.BATBATCHREF and TRIAL_DEPO='N'  AND DPT.PAYPAYREF like #confirmationNo:varchar#  AND DPT.NEXT_APPROVER_ROLE like #approver:varchar#  AND DATE(DPT.CREATEDDATE) BETWEEN (#startDate:date#) AND (#endDate:date#)  AND ( (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND FROMBR_ACCT_NO_FA IN (#branchIdArr:varchar# )) OR (DPT.TXN_TYPE in ('ACH-IN')  AND TOBR_ACCT_NO_FA IN (#branchIdArr:varchar#) ))  AND ((0 IN ( SELECT BRANCH_ID+FA_ID FROM USR_DAP_ACCESS where RACFID=#racfid:varchar# ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND  FROMBRANCH_ID IN ( SELECT BRANCH_ID FROM USR_DAP_ACCESS WHERE RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND FROMBRANCH_id*10000+FROMFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID =#racfid:varchar# AND FA_ID<>0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id IN ( SELECT BRANCH_ID from USR_DAP_ACCESS where RACFID =#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id*10000+ TOFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID = #racfid:varchar# AND FA_ID<>0 ) ) ) #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with ur
getViewTransactionsTwoLIST_page.TOColumnMap={versionnum=versionnum,CREATEDDATE=CREATEDDATE,PAYPAYREF=PAYPAYREF,CREATEDBY=CREATEDBY,TXN_TYPE=TXN_TYPE,FREQ_TYPE=FREQ_TYPE,REQUESTED_EXE_DT=REQUESTED_EXE_DT,PAYDEBITACCNUM=PAYDEBITACCNUM,PAYPAYEEACCNUM=PAYPAYEEACCNUM,PAYDEBITAMT=PAYDEBITAMT,STATUS=STATUS,ACTION=ACTION,PAYBATCHREF=PAYBATCHREF,PAYCCSSTATUSCODE=PAYCCSSTATUSCODE,BATVERSIONNUM=BATVERSIONNUM,PARTXNVERSIONNUM=PARTXNVERSIONNUM,TXNTYPECODE=TXNTYPECODE,DURATION=DURATION,PAYFREQENDDATE=PAYFREQENDDATE,PAYFREQLIMIT=PAYFREQLIMIT,PAYFREQPAYMENTCOUNT=PAYFREQPAYMENTCOUNT,PAYRECURRING=PAYRECURRING,RETIREMENT_MNEMONIC=RETIREMENT_MNEMONIC,FREQ_TYPE_ORG=FREQ_TYPE_ORG,ACTUAL_EXE_DT=ACTUAL_EXE_DT,total_rows=total_rows}
getViewTransactionsTwoLIST_page.OutputType=java.util.ArrayList
getViewTransactionsTwoLIST.StmtType=PreparedStatement
getViewTransactionsTwoLIST.PgnUniqueKeys=CREATEDDATE:Date:DESC#PAYPAYREF:numeric:DESC
getViewTransactionsTwoLIST.SortKeys=CREATEDDATE:Date:DESC#PAYPAYREF:numeric:DESC


##Mar09##getViewTransactionsTwoSearchLIST_page.Query=select VERSIONNUM,CREATEDDATE,PAYPAYREF,CREATEDBY,TXN_TYPE,FREQ_TYPE,REQUESTED_EXE_DT,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYDEBITAMT,STATUS,ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,BATVERSIONNUM,PARTXNVERSIONNUM,TXNTYPECODE,DURATION,PAYFREQENDDATE,PAYFREQLIMIT,PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,FREQ_TYPE_ORG,count(*) over() total_rows from (select DPT.versionnum,date(DPT.CREATEDDATE) as CREATEDDATE,CAST(DPT.PAYPAYREF AS BIGINT) as PAYPAYREF,CASE WHEN CURRENT_OWNER_ROLE='Client' THEN 'Client' WHEN CURRENT_OWNER_ROLE='INITBRAN' THEN 'Branch' WHEN CURRENT_OWNER_ROLE='INITNBOP' THEN 'NBO' ELSE 'Client' END AS CREATEDBY,DD1.dmndomainvaldesc as TXN_TYPE,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN ' ' ELSE DD3.dmndomainvaldesc||' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE,date(REQUESTED_EXE_DT) as REQUESTED_EXE_DT,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1) as PAYDEBITACCNUM,COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6)  || '-'|| SUBSTR(TOBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1,CTD.PAYEE_NAME) as PAYPAYEEACCNUM,PAYDEBITAMT,DD2.dmndomainvaldesc As STATUS,'View' as ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,DBT.BATVERSIONNUM,TP.txn_parent_ver AS PARTXNVERSIONNUM,TXN_TYPE AS TXNTYPECODE, TP.DURATION AS DURATION,DATE(TP.UNTILDATE) as PAYFREQENDDATE,TP.THRSHOLD_AMT as PAYFREQLIMIT,TP.MAX_TXN_NO as PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN 'OneTime' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE_ORG from DS_BATCH DBT,DS_DOMAINS DD1,DS_DOMAINS DD2,DS_DOMAINS DD3,DS_PAY_TXNS DPT LEFT OUTER JOIN TXN_PARENT TP ON TP.PAR_TXN_NO=DPT.PAR_TXN_NO  LEFT OUTER JOIN DS_DOMAINS DD4 ON DD4.dmndomain='D_Duration' and DD4.dmndomainval=TP.FREQUENCY  LEFT OUTER JOIN ds_payee_ref DR ON dr.cpypayeeid=dpt.paypayeeaccnum LEFT OUTER JOIN CHECK_TXN_DTLS CTD ON CTD.CONFIRMATION_NO=DPT.PAYPAYREF where  DD1.dmndomain='D_TxnType_MS360' and DD1.dmndomainval=DPT.TXN_TYPE AND DD2.dmndomain='D_COEStatusCode' and DD2.dmndomainval=DPT.payccsstatuscode AND DD3.dmndomain='D_FrequencyValue' and DD3.dmndomainval=DPT.PAYRECURRING AND DPT.PAYBATCHREF=DBT.BATBATCHREF and TRIAL_DEPO='N' AND ( DPT.NEXT_APPROVER_ROLE like #approver:varchar# AND DPT.payccsstatuscode in (#approverStatus:varchar#)) AND DATE(DPT.CREATEDDATE) BETWEEN (#entryStartDate:date#) AND (#entryEndDate:date#) AND DATE(DPT.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND (UPPER(DPT.CURRENT_OWNER_ROLE) like #initiatorName:varchar# OR UPPER(DPT.CURRENT_OWNER_ID) like #initiatorName:varchar#) AND DPT.paydebitamt BETWEEN (#trxnMinAmount:BigDecimal#) AND (#trxnMaxAmount:BigDecimal#)  AND   DPT.PAYPAYREF like #confirmationNo:varchar# AND DPT.PAYPAYEEID like #extAccount:varchar#  AND DPT.payccsstatuscode like #status:varchar# AND DPT.PAYRECURRING like  #frequencyType2:varchar#  AND ((DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG') AND FROMBR_ACCT_NO_FA IN (#branchIdArr:varchar# )) OR (DPT.TXN_TYPE in ('ACH-IN','INT') AND TOBR_ACCT_NO_FA IN (#branchIdArr:varchar#) )) AND ((DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG') AND FROMBR_ACCT_NO_FA like #officeNo:varchar# ) OR (DPT.TXN_TYPE in ('ACH-IN') AND TOBR_ACCT_NO_FA like #officeNo:varchar# ))   AND DPT.TXN_TYPE in (#trxnType:varchar#) AND ((0 IN ( SELECT BRANCH_ID+FA_ID FROM USR_DAP_ACCESS where RACFID=#racfid:varchar# ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND  FROMBRANCH_ID IN ( SELECT BRANCH_ID FROM USR_DAP_ACCESS WHERE RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND FROMBRANCH_id*10000+FROMFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID<>0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN','INT')  AND   TOBRANCH_id IN ( SELECT BRANCH_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN','INT')  AND   TOBRANCH_id*10000+ TOFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID =#racfid:varchar# AND FA_ID<>0 ) ) ) AND (RETIREMENT_MNEMONIC like #rttValue:varchar# or ('2'=#rttFlag:varchar# AND RETIREMENT_MNEMONIC IS  NULL)) #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with ur

#Modified for Defect Id:52241 by 259245
getViewTransactionsTwoSearchLIST_page.Query=select VERSIONNUM,CREATEDDATE,PAYPAYREF,CREATEDBY,TXN_TYPE,FREQ_TYPE,REQUESTED_EXE_DT,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYDEBITAMT,STATUS,ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,BATVERSIONNUM,PARTXNVERSIONNUM,TXNTYPECODE,DURATION,PAYFREQENDDATE,PAYFREQLIMIT,PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,FREQ_TYPE_ORG,ACTUAL_EXE_DT,total_rows from (select VERSIONNUM,CREATEDDATE,PAYPAYREF,CREATEDBY,TXN_TYPE,FREQ_TYPE,REQUESTED_EXE_DT,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYDEBITAMT,STATUS,ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,BATVERSIONNUM,PARTXNVERSIONNUM,TXNTYPECODE,DURATION,PAYFREQENDDATE,PAYFREQLIMIT,PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,FREQ_TYPE_ORG,ACTUAL_EXE_DT,count(*) over() total_rows from (select DPT.versionnum,date(DPT.CREATEDDATE) as CREATEDDATE,CAST(DPT.PAYPAYREF AS BIGINT) as PAYPAYREF,CASE WHEN CURRENT_OWNER_ROLE='Client' THEN 'Client' WHEN CURRENT_OWNER_ROLE='INITBRAN' THEN 'Branch' WHEN CURRENT_OWNER_ROLE='INITNBOP' THEN 'NBO' ELSE 'Client' END AS CREATEDBY,DD1.dmndomainvaldesc as TXN_TYPE,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN ' ' ELSE DD3.dmndomainvaldesc||' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE,date(REQUESTED_EXE_DT) as REQUESTED_EXE_DT,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1) as PAYDEBITACCNUM,COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6)  || '-'|| SUBSTR(TOBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1,CTD.PAYEE_NAME) as PAYPAYEEACCNUM,PAYDEBITAMT,DD2.dmndomainvaldesc As STATUS,'View' as ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,DBT.BATVERSIONNUM,TP.txn_parent_ver AS PARTXNVERSIONNUM,TXN_TYPE AS TXNTYPECODE, TP.DURATION AS DURATION,DATE(TP.UNTILDATE) as PAYFREQENDDATE,TP.THRSHOLD_AMT as PAYFREQLIMIT,TP.MAX_TXN_NO as PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN 'OneTime' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE_ORG,date(ACTUAL_EXE_DT) as ACTUAL_EXE_DT from DS_BATCH DBT,DS_DOMAINS DD1,DS_DOMAINS DD2,DS_DOMAINS DD3,DS_PAY_TXNS DPT LEFT OUTER JOIN TXN_PARENT TP ON TP.PAR_TXN_NO=DPT.PAR_TXN_NO  LEFT OUTER JOIN DS_DOMAINS DD4 ON DD4.dmndomain='D_Duration' and DD4.dmndomainval=TP.FREQUENCY  LEFT OUTER JOIN ds_payee_ref DR ON dr.cpypayeeid=dpt.paypayeeaccnum LEFT OUTER JOIN CHECK_TXN_DTLS CTD ON CTD.CONFIRMATION_NO=DPT.PAYPAYREF where  DD1.dmndomain='D_TxnType_MS360' and DD1.dmndomainval=DPT.TXN_TYPE AND DD2.dmndomain='D_COEStatusCode' and DD2.dmndomainval=DPT.payccsstatuscode AND DD3.dmndomain='D_FrequencyValue' and DD3.dmndomainval=DPT.PAYRECURRING AND DPT.PAYBATCHREF=DBT.BATBATCHREF  AND FROMBR_ACCT_NO_FA IN (#branchIdArr:varchar# ) AND FROMBR_ACCT_NO_FA like #officeNo:varchar#   AND DATE(DPT.CREATEDDATE) BETWEEN (#entryStartDate:date#) AND (#entryEndDate:date#) AND  DPT.PAYPAYEEID like #extAccount:varchar#  AND  ( DPT.NEXT_APPROVER_ROLE like #approver:varchar# AND DPT.payccsstatuscode in (#approverStatus:varchar#))  AND DATE(DPT.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#)  AND (UPPER(DPT.CURRENT_OWNER_ROLE) like #initiatorName:varchar# OR UPPER(DPT.CURRENT_OWNER_ID) like #initiatorName:varchar#) AND DPT.paydebitamt BETWEEN (#trxnMinAmount:BigDecimal#) AND (#trxnMaxAmount:BigDecimal#)   AND DPT.payccsstatuscode like #status:varchar# and TRIAL_DEPO='N' AND DPT.PAYRECURRING like  #frequencyType2:varchar#  AND DPT.TXN_TYPE in (#trxnType:varchar#) AND ((0 IN ( SELECT BRANCH_ID+FA_ID FROM USR_DAP_ACCESS where RACFID=#racfid:varchar# ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND  FROMBRANCH_ID IN ( SELECT BRANCH_ID FROM USR_DAP_ACCESS WHERE RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND FROMBRANCH_id*10000+FROMFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID<>0 ) ) ) AND (RETIREMENT_MNEMONIC like #rttValue:varchar# or ('2'=#rttFlag:varchar# AND RETIREMENT_MNEMONIC IS  NULL))  union  select DPT.versionnum,date(DPT.CREATEDDATE) as CREATEDDATE,CAST(DPT.PAYPAYREF AS BIGINT) as PAYPAYREF,CASE WHEN CURRENT_OWNER_ROLE='Client' THEN 'Client' WHEN CURRENT_OWNER_ROLE='INITBRAN' THEN 'Branch' WHEN CURRENT_OWNER_ROLE='INITNBOP' THEN 'NBO' ELSE 'Client' END AS CREATEDBY,DD1.dmndomainvaldesc as TXN_TYPE,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN ' ' ELSE DD3.dmndomainvaldesc||' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE,date(REQUESTED_EXE_DT) as REQUESTED_EXE_DT,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1) as PAYDEBITACCNUM,COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6)  || '-'|| SUBSTR(TOBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1,CTD.PAYEE_NAME) as PAYPAYEEACCNUM,PAYDEBITAMT,DD2.dmndomainvaldesc As STATUS,'View' as ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,DBT.BATVERSIONNUM,TP.txn_parent_ver AS PARTXNVERSIONNUM,TXN_TYPE AS TXNTYPECODE, TP.DURATION AS DURATION,DATE(TP.UNTILDATE) as PAYFREQENDDATE,TP.THRSHOLD_AMT as PAYFREQLIMIT,TP.MAX_TXN_NO as PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN 'OneTime' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE_ORG,date(ACTUAL_EXE_DT) as ACTUAL_EXE_DT from DS_BATCH DBT,DS_DOMAINS DD1,DS_DOMAINS DD2,DS_DOMAINS DD3,DS_PAY_TXNS DPT LEFT OUTER JOIN TXN_PARENT TP ON TP.PAR_TXN_NO=DPT.PAR_TXN_NO  LEFT OUTER JOIN DS_DOMAINS DD4 ON DD4.dmndomain='D_Duration' and DD4.dmndomainval=TP.FREQUENCY  LEFT OUTER JOIN ds_payee_ref DR ON dr.cpypayeeid=dpt.paypayeeaccnum LEFT OUTER JOIN CHECK_TXN_DTLS CTD ON CTD.CONFIRMATION_NO=DPT.PAYPAYREF where  DD1.dmndomain='D_TxnType_MS360' and DD1.dmndomainval=DPT.TXN_TYPE AND DD2.dmndomain='D_COEStatusCode' and DD2.dmndomainval=DPT.payccsstatuscode AND DD3.dmndomain='D_FrequencyValue' and DD3.dmndomainval=DPT.PAYRECURRING AND DPT.PAYBATCHREF=DBT.BATBATCHREF  AND TOBR_ACCT_NO_FA IN (#branchIdArr:varchar#) AND TOBR_ACCT_NO_FA like #officeNo:varchar#  AND DATE(DPT.CREATEDDATE) BETWEEN (#entryStartDate:date#) AND (#entryEndDate:date#) AND DPT.PAYPAYEEID like #extAccount:varchar# AND ( DPT.NEXT_APPROVER_ROLE like #approver:varchar# AND DPT.payccsstatuscode in (#approverStatus:varchar#))  AND DATE(DPT.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#)  AND (UPPER(DPT.CURRENT_OWNER_ROLE) like #initiatorName:varchar# OR UPPER(DPT.CURRENT_OWNER_ID) like #initiatorName:varchar#) AND DPT.paydebitamt BETWEEN (#trxnMinAmount:BigDecimal#) AND (#trxnMaxAmount:BigDecimal#)    AND DPT.payccsstatuscode like #status:varchar# and TRIAL_DEPO='N' AND DPT.PAYRECURRING like  #frequencyType2:varchar#     AND DPT.TXN_TYPE in (#trxnType:varchar#) AND ((0 IN ( SELECT BRANCH_ID+FA_ID FROM USR_DAP_ACCESS where RACFID=#racfid:varchar# ) )  OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id IN ( SELECT BRANCH_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id*10000+ TOFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID =#racfid:varchar# AND FA_ID<>0 ) ) ) AND (RETIREMENT_MNEMONIC like #rttValue:varchar# or ('2'=#rttFlag:varchar# AND RETIREMENT_MNEMONIC IS  NULL))   ) #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with ur
##July13##getViewTransactionsTwoSearchLIST_page.Query=select VERSIONNUM,CREATEDDATE,PAYPAYREF,CREATEDBY,TXN_TYPE,FREQ_TYPE,REQUESTED_EXE_DT,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYDEBITAMT,STATUS,ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,BATVERSIONNUM,PARTXNVERSIONNUM,TXNTYPECODE,DURATION,PAYFREQENDDATE,PAYFREQLIMIT,PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,FREQ_TYPE_ORG,ACTUAL_EXE_DT,total_rows from (select VERSIONNUM,CREATEDDATE,PAYPAYREF,CREATEDBY,TXN_TYPE,FREQ_TYPE,REQUESTED_EXE_DT,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYDEBITAMT,STATUS,ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,BATVERSIONNUM,PARTXNVERSIONNUM,TXNTYPECODE,DURATION,PAYFREQENDDATE,PAYFREQLIMIT,PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,FREQ_TYPE_ORG,ACTUAL_EXE_DT,count(*) over() total_rows from (select DPT.versionnum,date(DPT.CREATEDDATE) as CREATEDDATE,CAST(DPT.PAYPAYREF AS BIGINT) as PAYPAYREF,CASE WHEN CURRENT_OWNER_ROLE='Client' THEN 'Client' WHEN CURRENT_OWNER_ROLE='INITBRAN' THEN 'Branch' WHEN CURRENT_OWNER_ROLE='INITNBOP' THEN 'NBO' ELSE 'Client' END AS CREATEDBY,DD1.dmndomainvaldesc as TXN_TYPE,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN ' ' ELSE DD3.dmndomainvaldesc||' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE,date(REQUESTED_EXE_DT) as REQUESTED_EXE_DT,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1) as PAYDEBITACCNUM,COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6)  || '-'|| SUBSTR(TOBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1,CTD.PAYEE_NAME) as PAYPAYEEACCNUM,PAYDEBITAMT,DD2.dmndomainvaldesc As STATUS,'View' as ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,DBT.BATVERSIONNUM,TP.txn_parent_ver AS PARTXNVERSIONNUM,TXN_TYPE AS TXNTYPECODE, TP.DURATION AS DURATION,DATE(TP.UNTILDATE) as PAYFREQENDDATE,TP.THRSHOLD_AMT as PAYFREQLIMIT,TP.MAX_TXN_NO as PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN 'OneTime' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE_ORG,date(ACTUAL_EXE_DT) as ACTUAL_EXE_DT from DS_BATCH DBT,DS_DOMAINS DD1,DS_DOMAINS DD2,DS_DOMAINS DD3,DS_PAY_TXNS DPT LEFT OUTER JOIN TXN_PARENT TP ON TP.PAR_TXN_NO=DPT.PAR_TXN_NO  LEFT OUTER JOIN DS_DOMAINS DD4 ON DD4.dmndomain='D_Duration' and DD4.dmndomainval=TP.FREQUENCY  LEFT OUTER JOIN ds_payee_ref DR ON dr.cpypayeeid=dpt.paypayeeaccnum LEFT OUTER JOIN CHECK_TXN_DTLS CTD ON CTD.CONFIRMATION_NO=DPT.PAYPAYREF where  DD1.dmndomain='D_TxnType_MS360' and DD1.dmndomainval=DPT.TXN_TYPE AND DD2.dmndomain='D_COEStatusCode' and DD2.dmndomainval=DPT.payccsstatuscode AND DD3.dmndomain='D_FrequencyValue' and DD3.dmndomainval=DPT.PAYRECURRING AND DPT.PAYBATCHREF=DBT.BATBATCHREF  AND SUBSTR(FROMBR_ACCT_NO_FA,1,9) IN (#branchIdArr:varchar# ) AND FROMBR_ACCT_NO_FA like #officeNo:varchar#   AND DATE(DPT.CREATEDDATE) BETWEEN (#entryStartDate:date#) AND (#entryEndDate:date#) AND  DPT.PAYPAYEEID like #extAccount:varchar#  AND  DPT.NEXT_APPROVER_ROLE like #approver:varchar#  AND DATE(DPT.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#)  AND (UPPER(DPT.CURRENT_OWNER_ROLE) like #initiatorName:varchar# OR UPPER(DPT.CURRENT_OWNER_ID) like #initiatorName:varchar#) AND DPT.paydebitamt BETWEEN (#trxnMinAmount:BigDecimal#) AND (#trxnMaxAmount:BigDecimal#)   AND DPT.payccsstatuscode like #status:varchar# and TRIAL_DEPO='N' AND DPT.PAYRECURRING like  #frequencyType2:varchar#  AND DPT.TXN_TYPE in (#trxnType:varchar#) AND ((0 IN ( SELECT BRANCH_ID+FA_ID FROM USR_DAP_ACCESS where RACFID=#racfid:varchar# ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND  FROMBRANCH_ID IN ( SELECT BRANCH_ID FROM USR_DAP_ACCESS WHERE RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND FROMBRANCH_id*10000+FROMFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID<>0 ) ) ) AND (RETIREMENT_MNEMONIC like #rttValue:varchar# or ('2'=#rttFlag:varchar# AND RETIREMENT_MNEMONIC IS  NULL))  union  select DPT.versionnum,date(DPT.CREATEDDATE) as CREATEDDATE,CAST(DPT.PAYPAYREF AS BIGINT) as PAYPAYREF,CASE WHEN CURRENT_OWNER_ROLE='Client' THEN 'Client' WHEN CURRENT_OWNER_ROLE='INITBRAN' THEN 'Branch' WHEN CURRENT_OWNER_ROLE='INITNBOP' THEN 'NBO' ELSE 'Client' END AS CREATEDBY,DD1.dmndomainvaldesc as TXN_TYPE,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN ' ' ELSE DD3.dmndomainvaldesc||' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE,date(REQUESTED_EXE_DT) as REQUESTED_EXE_DT,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1) as PAYDEBITACCNUM,COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6)  || '-'|| SUBSTR(TOBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1,CTD.PAYEE_NAME) as PAYPAYEEACCNUM,PAYDEBITAMT,DD2.dmndomainvaldesc As STATUS,'View' as ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,DBT.BATVERSIONNUM,TP.txn_parent_ver AS PARTXNVERSIONNUM,TXN_TYPE AS TXNTYPECODE, TP.DURATION AS DURATION,DATE(TP.UNTILDATE) as PAYFREQENDDATE,TP.THRSHOLD_AMT as PAYFREQLIMIT,TP.MAX_TXN_NO as PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN 'OneTime' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE_ORG,date(ACTUAL_EXE_DT) as ACTUAL_EXE_DT from DS_BATCH DBT,DS_DOMAINS DD1,DS_DOMAINS DD2,DS_DOMAINS DD3,DS_PAY_TXNS DPT LEFT OUTER JOIN TXN_PARENT TP ON TP.PAR_TXN_NO=DPT.PAR_TXN_NO  LEFT OUTER JOIN DS_DOMAINS DD4 ON DD4.dmndomain='D_Duration' and DD4.dmndomainval=TP.FREQUENCY  LEFT OUTER JOIN ds_payee_ref DR ON dr.cpypayeeid=dpt.paypayeeaccnum LEFT OUTER JOIN CHECK_TXN_DTLS CTD ON CTD.CONFIRMATION_NO=DPT.PAYPAYREF where  DD1.dmndomain='D_TxnType_MS360' and DD1.dmndomainval=DPT.TXN_TYPE AND DD2.dmndomain='D_COEStatusCode' and DD2.dmndomainval=DPT.payccsstatuscode AND DD3.dmndomain='D_FrequencyValue' and DD3.dmndomainval=DPT.PAYRECURRING AND DPT.PAYBATCHREF=DBT.BATBATCHREF  AND SUBSTR(TOBR_ACCT_NO_FA,1,9) IN (#branchIdArr:varchar#) AND TOBR_ACCT_NO_FA like #officeNo:varchar#  AND DATE(DPT.CREATEDDATE) BETWEEN (#entryStartDate:date#) AND (#entryEndDate:date#) AND DPT.PAYPAYEEID like #extAccount:varchar# AND DPT.NEXT_APPROVER_ROLE like #approver:varchar#  AND DATE(DPT.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#)  AND (UPPER(DPT.CURRENT_OWNER_ROLE) like #initiatorName:varchar# OR UPPER(DPT.CURRENT_OWNER_ID) like #initiatorName:varchar#) AND DPT.paydebitamt BETWEEN (#trxnMinAmount:BigDecimal#) AND (#trxnMaxAmount:BigDecimal#)    AND DPT.payccsstatuscode like #status:varchar# and TRIAL_DEPO='N' AND DPT.PAYRECURRING like  #frequencyType2:varchar#     AND DPT.TXN_TYPE in (#trxnType:varchar#) AND ((0 IN ( SELECT BRANCH_ID+FA_ID FROM USR_DAP_ACCESS where RACFID=#racfid:varchar# ) )  OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id IN ( SELECT BRANCH_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id*10000+ TOFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID =#racfid:varchar# AND FA_ID<>0 ) ) ) AND (RETIREMENT_MNEMONIC like #rttValue:varchar# or ('2'=#rttFlag:varchar# AND RETIREMENT_MNEMONIC IS  NULL))   ) #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with ur

getViewTransactionsTwoSearchLIST_page.TOColumnMap={versionnum=versionnum,CREATEDDATE=CREATEDDATE,PAYPAYREF=PAYPAYREF,CREATEDBY=CREATEDBY,TXN_TYPE=TXN_TYPE,FREQ_TYPE=FREQ_TYPE,REQUESTED_EXE_DT=REQUESTED_EXE_DT,PAYDEBITACCNUM=PAYDEBITACCNUM,PAYPAYEEACCNUM=PAYPAYEEACCNUM,PAYDEBITAMT=PAYDEBITAMT,STATUS=STATUS,ACTION=ACTION,PAYBATCHREF=PAYBATCHREF,PAYCCSSTATUSCODE=PAYCCSSTATUSCODE,BATVERSIONNUM=BATVERSIONNUM,PARTXNVERSIONNUM=PARTXNVERSIONNUM,TXNTYPECODE=TXNTYPECODE,DURATION=DURATION,PAYFREQENDDATE=PAYFREQENDDATE,PAYFREQLIMIT=PAYFREQLIMIT,PAYFREQPAYMENTCOUNT=PAYFREQPAYMENTCOUNT,PAYRECURRING=PAYRECURRING,RETIREMENT_MNEMONIC=RETIREMENT_MNEMONIC,FREQ_TYPE_ORG=FREQ_TYPE_ORG,ACTUAL_EXE_DT=ACTUAL_EXE_DT,total_rows=total_rows}
getViewTransactionsTwoSearchLIST_page.OutputType=java.util.ArrayList
getViewTransactionsTwoSearchLIST.StmtType=PreparedStatement
getViewTransactionsTwoSearchLIST.PgnUniqueKeys=CREATEDDATE:Date:DESC#PAYPAYREF:numeric:DESC
getViewTransactionsTwoSearchLIST.SortKeys=CREATEDDATE:Date:DESC#PAYPAYREF:numeric:DESC


##Mar09##getViewTransactionsTwoConfirmSearchLIST_page.Query=select VERSIONNUM,CREATEDDATE,PAYPAYREF,CREATEDBY,TXN_TYPE,FREQ_TYPE,REQUESTED_EXE_DT,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYDEBITAMT,STATUS,ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,BATVERSIONNUM,PARTXNVERSIONNUM,TXNTYPECODE,DURATION,PAYFREQENDDATE,PAYFREQLIMIT,PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,FREQ_TYPE_ORG,count(*) over() total_rows from (select DPT.versionnum,date(DPT.CREATEDDATE) as CREATEDDATE,CAST(DPT.PAYPAYREF AS BIGINT) as PAYPAYREF,CASE WHEN CURRENT_OWNER_ROLE='Client' THEN 'Client' WHEN CURRENT_OWNER_ROLE='INITBRAN' THEN 'Branch' WHEN CURRENT_OWNER_ROLE='INITNBOP' THEN 'NBO' ELSE 'Client' END AS CREATEDBY,DD1.dmndomainvaldesc as TXN_TYPE,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN ' ' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE,date(REQUESTED_EXE_DT) as REQUESTED_EXE_DT,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1) as PAYDEBITACCNUM,COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(TOBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1,CTD.PAYEE_NAME) as PAYPAYEEACCNUM,PAYDEBITAMT,DD2.dmndomainvaldesc As STATUS,'View' as ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,DBT.BATVERSIONNUM,TP.txn_parent_ver AS PARTXNVERSIONNUM,TXN_TYPE AS TXNTYPECODE, TP.DURATION AS DURATION,DATE(TP.UNTILDATE) as PAYFREQENDDATE,TP.THRSHOLD_AMT as PAYFREQLIMIT,TP.MAX_TXN_NO as PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN 'OneTime' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE_ORG from DS_BATCH DBT,DS_DOMAINS DD1,DS_DOMAINS DD2,DS_DOMAINS DD3,DS_PAY_TXNS DPT LEFT OUTER JOIN TXN_PARENT TP ON TP.PAR_TXN_NO=DPT.PAR_TXN_NO LEFT OUTER JOIN DS_DOMAINS DD4 ON DD4.dmndomain='D_Duration' and DD4.dmndomainval=TP.FREQUENCY LEFT OUTER JOIN ds_payee_ref DR ON dr.cpypayeeid=dpt.paypayeeaccnum LEFT OUTER JOIN CHECK_TXN_DTLS CTD ON CTD.CONFIRMATION_NO=DPT.PAYPAYREF where DD1.dmndomain='D_TxnType_MS360' and DD1.dmndomainval=DPT.TXN_TYPE AND DD2.dmndomain='D_COEStatusCode' and DD2.dmndomainval=DPT.payccsstatuscode AND DD3.dmndomain='D_FrequencyValue' and DD3.dmndomainval=DPT.PAYRECURRING AND DPT.PAYBATCHREF=DBT.BATBATCHREF and TRIAL_DEPO='N' AND DPT.PAYPAYREF like #confirmationNo:varchar#  AND  ((0 IN ( SELECT BRANCH_ID+FA_ID FROM USR_DAP_ACCESS where RACFID=#racfid:varchar# ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND  FROMBRANCH_ID IN ( SELECT BRANCH_ID FROM USR_DAP_ACCESS WHERE RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND FROMBRANCH_id*10000+FROMFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID<>0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN','INT')  AND   TOBRANCH_id IN ( SELECT BRANCH_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN','INT')  AND   TOBRANCH_id*10000+ TOFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID =#racfid:varchar# AND FA_ID<>0 ) ) ) #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with ur

getViewTransactionsTwoConfirmSearchLIST_page.Query=select VERSIONNUM,CREATEDDATE,PAYPAYREF,CREATEDBY,TXN_TYPE,FREQ_TYPE,REQUESTED_EXE_DT,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYDEBITAMT,STATUS,ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,BATVERSIONNUM,PARTXNVERSIONNUM,TXNTYPECODE,DURATION,PAYFREQENDDATE,PAYFREQLIMIT,PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,FREQ_TYPE_ORG,ACTUAL_EXE_DT,count(*) over() total_rows from (select DPT.versionnum,date(DPT.CREATEDDATE) as CREATEDDATE,CAST(DPT.PAYPAYREF AS BIGINT) as PAYPAYREF,CASE WHEN CURRENT_OWNER_ROLE='Client' THEN 'Client' WHEN CURRENT_OWNER_ROLE='INITBRAN' THEN 'Branch' WHEN CURRENT_OWNER_ROLE='INITNBOP' THEN 'NBO' ELSE 'Client' END AS CREATEDBY,DD1.dmndomainvaldesc as TXN_TYPE,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN ' ' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE,date(REQUESTED_EXE_DT) as REQUESTED_EXE_DT,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1) as PAYDEBITACCNUM,COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(TOBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1,CTD.PAYEE_NAME) as PAYPAYEEACCNUM,PAYDEBITAMT,DD2.dmndomainvaldesc As STATUS,'View' as ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,DBT.BATVERSIONNUM,TP.txn_parent_ver AS PARTXNVERSIONNUM,TXN_TYPE AS TXNTYPECODE, TP.DURATION AS DURATION,DATE(TP.UNTILDATE) as PAYFREQENDDATE,TP.THRSHOLD_AMT as PAYFREQLIMIT,TP.MAX_TXN_NO as PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN 'OneTime' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE_ORG,date(ACTUAL_EXE_DT) as ACTUAL_EXE_DT from DS_BATCH DBT,DS_DOMAINS DD1,DS_DOMAINS DD2,DS_DOMAINS DD3,DS_PAY_TXNS DPT LEFT OUTER JOIN TXN_PARENT TP ON TP.PAR_TXN_NO=DPT.PAR_TXN_NO LEFT OUTER JOIN DS_DOMAINS DD4 ON DD4.dmndomain='D_Duration' and DD4.dmndomainval=TP.FREQUENCY LEFT OUTER JOIN ds_payee_ref DR ON dr.cpypayeeid=dpt.paypayeeaccnum LEFT OUTER JOIN CHECK_TXN_DTLS CTD ON CTD.CONFIRMATION_NO=DPT.PAYPAYREF where DD1.dmndomain='D_TxnType_MS360' and DD1.dmndomainval=DPT.TXN_TYPE AND DD2.dmndomain='D_COEStatusCode' and DD2.dmndomainval=DPT.payccsstatuscode AND DD3.dmndomain='D_FrequencyValue' and DD3.dmndomainval=DPT.PAYRECURRING AND DPT.PAYBATCHREF=DBT.BATBATCHREF  AND DPT.PAYPAYREF = #confirmationNo:varchar# and TRIAL_DEPO='N'  AND  ((0 IN ( SELECT BRANCH_ID+FA_ID FROM USR_DAP_ACCESS where RACFID=#racfid:varchar# ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND  FROMBRANCH_ID IN ( SELECT BRANCH_ID FROM USR_DAP_ACCESS WHERE RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND FROMBRANCH_id*10000+FROMFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID<>0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id IN ( SELECT BRANCH_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id*10000+ TOFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID =#racfid:varchar# AND FA_ID<>0 ) ) ) #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with ur

getViewTransactionsTwoConfirmSearchLIST_page.TOColumnMap={versionnum=versionnum,CREATEDDATE=CREATEDDATE,PAYPAYREF=PAYPAYREF,CREATEDBY=CREATEDBY,TXN_TYPE=TXN_TYPE,FREQ_TYPE=FREQ_TYPE,REQUESTED_EXE_DT=REQUESTED_EXE_DT,PAYDEBITACCNUM=PAYDEBITACCNUM,PAYPAYEEACCNUM=PAYPAYEEACCNUM,PAYDEBITAMT=PAYDEBITAMT,STATUS=STATUS,ACTION=ACTION,PAYBATCHREF=PAYBATCHREF,PAYCCSSTATUSCODE=PAYCCSSTATUSCODE,BATVERSIONNUM=BATVERSIONNUM,PARTXNVERSIONNUM=PARTXNVERSIONNUM,TXNTYPECODE=TXNTYPECODE,DURATION=DURATION,PAYFREQENDDATE=PAYFREQENDDATE,PAYFREQLIMIT=PAYFREQLIMIT,PAYFREQPAYMENTCOUNT=PAYFREQPAYMENTCOUNT,PAYRECURRING=PAYRECURRING,RETIREMENT_MNEMONIC=RETIREMENT_MNEMONIC,FREQ_TYPE_ORG=FREQ_TYPE_ORG,ACTUAL_EXE_DT=ACTUAL_EXE_DT,total_rows=total_rows}
getViewTransactionsTwoConfirmSearchLIST_page.OutputType=java.util.ArrayList
getViewTransactionsTwoConfirmSearchLIST.StmtType=PreparedStatement
getViewTransactionsTwoConfirmSearchLIST.PgnUniqueKeys=CREATEDDATE:Date:DESC#PAYPAYREF:numeric:DESC
getViewTransactionsTwoConfirmSearchLIST.SortKeys=CREATEDDATE:Date:DESC#PAYPAYREF:numeric:DESC


getViewTransactionsThreeLIST_page.Query=select VERSIONNUM,CREATEDDATE,PAYPAYREF,CREATEDBY,TXN_TYPE,FREQ_TYPE,REQUESTED_EXE_DT,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYDEBITAMT,STATUS,ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,BATVERSIONNUM,PARTXNVERSIONNUM,TXNTYPECODE,DURATION,PAYFREQENDDATE,PAYFREQLIMIT,PAYFREQPAYMENTCOUNT,PAYRECURRING,FREQ_TYPE_ORG,ACTUAL_EXE_DT,count(*) over() total_rows from (select DPT.versionnum,date(DPT.CREATEDDATE) as CREATEDDATE,CAST(DPT.PAYPAYREF AS BIGINT) as PAYPAYREF,CASE WHEN CURRENT_OWNER_ROLE='Client' THEN 'Client' WHEN CURRENT_OWNER_ROLE='INITBRAN' THEN 'Branch' WHEN CURRENT_OWNER_ROLE='INITNBOP' THEN 'NBO' ELSE 'Client' END AS CREATEDBY,DD1.dmndomainvaldesc as TXN_TYPE,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN ' ' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE,date(REQUESTED_EXE_DT) as REQUESTED_EXE_DT,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1) as PAYDEBITACCNUM,COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6)  || '-'|| SUBSTR(TOBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1,CTD.PAYEE_NAME) as PAYPAYEEACCNUM,PAYDEBITAMT,DD2.dmndomainvaldesc As STATUS,'View' as ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,DBT.BATVERSIONNUM,TP.txn_parent_ver AS PARTXNVERSIONNUM,TXN_TYPE AS TXNTYPECODE, TP.DURATION AS DURATION,DATE(TP.UNTILDATE) as PAYFREQENDDATE,TP.THRSHOLD_AMT as PAYFREQLIMIT,TP.MAX_TXN_NO as PAYFREQPAYMENTCOUNT,PAYRECURRING,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN 'OneTime' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE_ORG,date(ACTUAL_EXE_DT) as ACTUAL_EXE_DT from DS_BATCH DBT,DS_DOMAINS DD1,DS_DOMAINS DD2,DS_DOMAINS DD3,DS_PAY_TXNS DPT LEFT OUTER JOIN TXN_PARENT TP ON TP.PAR_TXN_NO=DPT.PAR_TXN_NO  LEFT OUTER JOIN DS_DOMAINS DD4 ON DD4.dmndomain='D_Duration' and DD4.dmndomainval=TP.FREQUENCY  LEFT OUTER JOIN ds_payee_ref DR ON dr.cpypayeeid=dpt.paypayeeaccnum LEFT OUTER JOIN CHECK_TXN_DTLS CTD ON CTD.CONFIRMATION_NO=DPT.PAYPAYREF where  DD1.dmndomain='D_TxnType_MS360' and DD1.dmndomainval=DPT.TXN_TYPE AND DD2.dmndomain='D_COEStatusCode' and DD2.dmndomainval=DPT.payccsstatuscode AND DD3.dmndomain='D_FrequencyValue' and DD3.dmndomainval=DPT.PAYRECURRING AND DPT.PAYBATCHREF=DBT.BATBATCHREF and TRIAL_DEPO='N'  AND DPT.PAYPAYREF like #confirmationNo:varchar#  AND DPT.NEXT_APPROVER_ROLE like #approver:varchar#  AND DATE(DPT.CREATEDDATE) BETWEEN (#startDate:date#) AND (#endDate:date#) AND ((0 IN ( SELECT BRANCH_ID+FA_ID FROM USR_DAP_ACCESS where RACFID=#racfid:varchar# ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND  FROMBRANCH_ID IN ( SELECT BRANCH_ID FROM USR_DAP_ACCESS WHERE RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND FROMBRANCH_id*10000+FROMFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID =#racfid:varchar# AND FA_ID<>0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id IN ( SELECT BRANCH_ID from USR_DAP_ACCESS where RACFID =#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id*10000+ TOFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID<>0 ) ) ) #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with ur
getViewTransactionsThreeLIST_page.TOColumnMap={versionnum=versionnum,CREATEDDATE=CREATEDDATE,PAYPAYREF=PAYPAYREF,CREATEDBY=CREATEDBY,TXN_TYPE=TXN_TYPE,FREQ_TYPE=FREQ_TYPE,REQUESTED_EXE_DT=REQUESTED_EXE_DT,PAYDEBITACCNUM=PAYDEBITACCNUM,PAYPAYEEACCNUM=PAYPAYEEACCNUM,PAYDEBITAMT=PAYDEBITAMT,STATUS=STATUS,ACTION=ACTION,PAYBATCHREF=PAYBATCHREF,PAYCCSSTATUSCODE=PAYCCSSTATUSCODE,BATVERSIONNUM=BATVERSIONNUM,PARTXNVERSIONNUM=PARTXNVERSIONNUM,TXNTYPECODE=TXNTYPECODE,DURATION=DURATION,PAYFREQENDDATE=PAYFREQENDDATE,PAYFREQLIMIT=PAYFREQLIMIT,PAYFREQPAYMENTCOUNT=PAYFREQPAYMENTCOUNT,PAYRECURRING=PAYRECURRING,FREQ_TYPE_ORG=FREQ_TYPE_ORG,ACTUAL_EXE_DT=ACTUAL_EXE_DT,total_rows=total_rows}
getViewTransactionsThreeLIST_page.OutputType=java.util.ArrayList
getViewTransactionsThreeLIST.StmtType=PreparedStatement
getViewTransactionsThreeLIST.PgnUniqueKeys=CREATEDDATE:Date:DESC#PAYPAYREF:numeric:DESC
getViewTransactionsThreeLIST.SortKeys=CREATEDDATE:Date:DESC#PAYPAYREF:numeric:DESC

##All Accounts Query was changed as part of performance improvement by Krishna
##June7##getViewTransactionsThreeDefaultLIST_page.Query=select VERSIONNUM,CREATEDDATE,PAYPAYREF,CREATEDBY,TXN_TYPE,FREQ_TYPE,REQUESTED_EXE_DT,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYDEBITAMT,STATUS,ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,BATVERSIONNUM,PARTXNVERSIONNUM,TXNTYPECODE,DURATION,PAYFREQENDDATE,PAYFREQLIMIT,PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,FREQ_TYPE_ORG,ACTUAL_EXE_DT,total_rows from (select VERSIONNUM,CREATEDDATE,PAYPAYREF,CREATEDBY,TXN_TYPE,FREQ_TYPE,REQUESTED_EXE_DT,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYDEBITAMT,STATUS,ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,BATVERSIONNUM,PARTXNVERSIONNUM,TXNTYPECODE,DURATION,PAYFREQENDDATE,PAYFREQLIMIT,PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,FREQ_TYPE_ORG,ACTUAL_EXE_DT,count(*) over() total_rows from (select DPT.versionnum,date(DPT.CREATEDDATE) as CREATEDDATE,CAST(DPT.PAYPAYREF AS BIGINT) as PAYPAYREF,CASE WHEN CURRENT_OWNER_ROLE='Client' THEN 'Client' WHEN CURRENT_OWNER_ROLE='INITBRAN' THEN 'Branch' WHEN CURRENT_OWNER_ROLE='INITNBOP' THEN 'NBO' ELSE 'Client' END AS CREATEDBY,DD1.dmndomainvaldesc as TXN_TYPE,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN ' ' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE,date(REQUESTED_EXE_DT) as REQUESTED_EXE_DT,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1) as PAYDEBITACCNUM,COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6)  || '-'|| SUBSTR(TOBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1,CTD.PAYEE_NAME) as PAYPAYEEACCNUM,PAYDEBITAMT,DD2.dmndomainvaldesc As STATUS,'View' as ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,DBT.BATVERSIONNUM,TP.txn_parent_ver AS PARTXNVERSIONNUM,TXN_TYPE AS TXNTYPECODE, TP.DURATION AS DURATION,DATE(TP.UNTILDATE) as PAYFREQENDDATE,TP.THRSHOLD_AMT as PAYFREQLIMIT,TP.MAX_TXN_NO as PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN 'OneTime' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE_ORG,date(ACTUAL_EXE_DT) as ACTUAL_EXE_DT from DS_BATCH DBT,DS_DOMAINS DD1,DS_DOMAINS DD2,DS_DOMAINS DD3,DS_PAY_TXNS DPT LEFT OUTER JOIN TXN_PARENT TP ON TP.PAR_TXN_NO=DPT.PAR_TXN_NO  LEFT OUTER JOIN DS_DOMAINS DD4 ON DD4.dmndomain='D_Duration' and DD4.dmndomainval=TP.FREQUENCY  LEFT OUTER JOIN ds_payee_ref DR ON dr.cpypayeeid=dpt.paypayeeaccnum LEFT OUTER JOIN CHECK_TXN_DTLS CTD ON CTD.CONFIRMATION_NO=DPT.PAYPAYREF where  DD1.dmndomain='D_TxnType_MS360' and DD1.dmndomainval=DPT.TXN_TYPE AND DD2.dmndomain='D_COEStatusCode' and DD2.dmndomainval=DPT.payccsstatuscode AND DD3.dmndomain='D_FrequencyValue' and DD3.dmndomainval=DPT.PAYRECURRING AND DPT.PAYBATCHREF=DBT.BATBATCHREF  AND TRIAL_DEPO='N' AND  DPT.NEXT_APPROVER_ROLE like #approver:varchar#  AND DATE(DPT.CREATEDDATE) BETWEEN (#entryStartDate:date#) AND (#entryEndDate:date#) AND  DATE(DPT.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#)  AND (UPPER(DPT.CURRENT_OWNER_ROLE) like #initiatorName:varchar# OR UPPER(DPT.CURRENT_OWNER_ID) like #initiatorName:varchar#) AND DPT.paydebitamt BETWEEN (#trxnMinAmount:BigDecimal#) AND (#trxnMaxAmount:BigDecimal#)  AND DPT.PAYPAYEEID like #extAccount:varchar#  AND DPT.payccsstatuscode like #status:varchar# AND DPT.PAYRECURRING like  #frequencyType2:varchar#  AND DPT.TXN_TYPE in (#trxnType:varchar#) AND ((0 IN ( SELECT BRANCH_ID+FA_ID FROM USR_DAP_ACCESS where RACFID=#racfid:varchar# ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND  FROMBRANCH_ID IN ( SELECT BRANCH_ID FROM USR_DAP_ACCESS WHERE RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND FROMBRANCH_id*10000+FROMFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID<>0 ) )  ) AND (RETIREMENT_MNEMONIC like #rttValue:varchar# or ('2'=#rttFlag:varchar# AND RETIREMENT_MNEMONIC IS  NULL))  union  select DPT.versionnum,date(DPT.CREATEDDATE) as CREATEDDATE,CAST(DPT.PAYPAYREF AS BIGINT) as PAYPAYREF,CASE WHEN CURRENT_OWNER_ROLE='Client' THEN 'Client' WHEN CURRENT_OWNER_ROLE='INITBRAN' THEN 'Branch' WHEN CURRENT_OWNER_ROLE='INITNBOP' THEN 'NBO' ELSE 'Client' END AS CREATEDBY,DD1.dmndomainvaldesc as TXN_TYPE,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN ' ' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE,date(REQUESTED_EXE_DT) as REQUESTED_EXE_DT,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1) as PAYDEBITACCNUM,COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6)  || '-'|| SUBSTR(TOBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1,CTD.PAYEE_NAME) as PAYPAYEEACCNUM,PAYDEBITAMT,DD2.dmndomainvaldesc As STATUS,'View' as ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,DBT.BATVERSIONNUM,TP.txn_parent_ver AS PARTXNVERSIONNUM,TXN_TYPE AS TXNTYPECODE, TP.DURATION AS DURATION,DATE(TP.UNTILDATE) as PAYFREQENDDATE,TP.THRSHOLD_AMT as PAYFREQLIMIT,TP.MAX_TXN_NO as PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN 'OneTime' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE_ORG,date(ACTUAL_EXE_DT) as ACTUAL_EXE_DT from DS_BATCH DBT,DS_DOMAINS DD1,DS_DOMAINS DD2,DS_DOMAINS DD3,DS_PAY_TXNS DPT LEFT OUTER JOIN TXN_PARENT TP ON TP.PAR_TXN_NO=DPT.PAR_TXN_NO  LEFT OUTER JOIN DS_DOMAINS DD4 ON DD4.dmndomain='D_Duration' and DD4.dmndomainval=TP.FREQUENCY  LEFT OUTER JOIN ds_payee_ref DR ON dr.cpypayeeid=dpt.paypayeeaccnum LEFT OUTER JOIN CHECK_TXN_DTLS CTD ON CTD.CONFIRMATION_NO=DPT.PAYPAYREF where  DD1.dmndomain='D_TxnType_MS360' and DD1.dmndomainval=DPT.TXN_TYPE AND DD2.dmndomain='D_COEStatusCode' and DD2.dmndomainval=DPT.payccsstatuscode AND DD3.dmndomain='D_FrequencyValue' and DD3.dmndomainval=DPT.PAYRECURRING AND DPT.PAYBATCHREF=DBT.BATBATCHREF AND  TRIAL_DEPO='N' AND  DPT.NEXT_APPROVER_ROLE like #approver:varchar#  AND DATE(DPT.CREATEDDATE) BETWEEN (#entryStartDate:date#) AND (#entryEndDate:date#) AND  DATE(DPT.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#)  AND (UPPER(DPT.CURRENT_OWNER_ROLE) like #initiatorName:varchar# OR UPPER(DPT.CURRENT_OWNER_ID) like #initiatorName:varchar#) AND DPT.paydebitamt BETWEEN (#trxnMinAmount:BigDecimal#) AND (#trxnMaxAmount:BigDecimal#)  AND DPT.PAYPAYEEID like #extAccount:varchar#  AND DPT.payccsstatuscode like #status:varchar# AND DPT.PAYRECURRING like  #frequencyType2:varchar# AND  DPT.TXN_TYPE in (#trxnType:varchar#) AND ((0 IN ( SELECT BRANCH_ID+FA_ID FROM USR_DAP_ACCESS where RACFID=#racfid:varchar# ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id IN ( SELECT BRANCH_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id*10000+ TOFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID =#racfid:varchar# AND FA_ID<>0 ) ) ) AND (RETIREMENT_MNEMONIC like #rttValue:varchar# or ('2'=#rttFlag:varchar# AND RETIREMENT_MNEMONIC IS  NULL)) ) #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with ur


##July13##getViewTransactionsThreeDefaultLIST_page.Query=select VERSIONNUM,CREATEDDATE,PAYPAYREF,CREATEDBY,TXN_TYPE,FREQ_TYPE,REQUESTED_EXE_DT,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYDEBITAMT,STATUS,ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,BATVERSIONNUM,PARTXNVERSIONNUM,TXNTYPECODE,DURATION,PAYFREQENDDATE,PAYFREQLIMIT,PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,FREQ_TYPE_ORG,ACTUAL_EXE_DT,count(*) over() total_rows from (select DPT.versionnum,date(DPT.CREATEDDATE) as CREATEDDATE,CAST(DPT.PAYPAYREF AS BIGINT) as PAYPAYREF,CASE WHEN CURRENT_OWNER_ROLE='Client' THEN 'Client' WHEN CURRENT_OWNER_ROLE='INITBRAN' THEN 'Branch' WHEN CURRENT_OWNER_ROLE='INITNBOP' THEN 'NBO' ELSE 'Client' END AS CREATEDBY,DD1.dmndomainvaldesc as TXN_TYPE,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN ' ' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE,date(REQUESTED_EXE_DT) as REQUESTED_EXE_DT,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1) as PAYDEBITACCNUM,COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6)  || '-'|| SUBSTR(TOBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1,CTD.PAYEE_NAME) as PAYPAYEEACCNUM,PAYDEBITAMT,DD2.dmndomainvaldesc As STATUS,'View' as ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,DBT.BATVERSIONNUM,TP.txn_parent_ver AS PARTXNVERSIONNUM,TXN_TYPE AS TXNTYPECODE, TP.DURATION AS DURATION,DATE(TP.UNTILDATE) as PAYFREQENDDATE,TP.THRSHOLD_AMT as PAYFREQLIMIT,TP.MAX_TXN_NO as PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN 'OneTime' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE_ORG,date(ACTUAL_EXE_DT) as ACTUAL_EXE_DT from DS_BATCH DBT,DS_DOMAINS DD1,DS_DOMAINS DD2,DS_DOMAINS DD3,DS_PAY_TXNS DPT LEFT OUTER JOIN TXN_PARENT TP ON TP.PAR_TXN_NO=DPT.PAR_TXN_NO  LEFT OUTER JOIN DS_DOMAINS DD4 ON DD4.dmndomain='D_Duration' and DD4.dmndomainval=TP.FREQUENCY  LEFT OUTER JOIN ds_payee_ref DR ON dr.cpypayeeid=dpt.paypayeeaccnum LEFT OUTER JOIN CHECK_TXN_DTLS CTD ON CTD.CONFIRMATION_NO=DPT.PAYPAYREF where  DD1.dmndomain='D_TxnType_MS360' and DD1.dmndomainval=DPT.TXN_TYPE AND DD2.dmndomain='D_COEStatusCode' and DD2.dmndomainval=DPT.payccsstatuscode AND DD3.dmndomain='D_FrequencyValue' and DD3.dmndomainval=DPT.PAYRECURRING AND DPT.PAYBATCHREF=DBT.BATBATCHREF AND DATE(DPT.CREATEDDATE) BETWEEN (#entryStartDate:date#) AND (#entryEndDate:date#) AND  DATE(DPT.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#)  AND DPT.payccsstatuscode like #status:varchar# AND (UPPER(DPT.CURRENT_OWNER_ID) like #initiatorName:varchar# OR UPPER(DPT.CURRENT_OWNER_ROLE) like #initiatorName:varchar#) AND DPT.NEXT_APPROVER_ROLE like #approver:varchar# AND DPT.TXN_TYPE in (#trxnType:varchar#) AND DPT.paydebitamt BETWEEN (#trxnMinAmount:BigDecimal#) AND (#trxnMaxAmount:BigDecimal#)  AND DPT.PAYPAYEEID like #extAccount:varchar#  AND DPT.PAYRECURRING like  #frequencyType2:varchar#  AND TRIAL_DEPO='N' AND ((0 IN ( SELECT BRANCH_ID+FA_ID FROM USR_DAP_ACCESS where RACFID=#racfid:varchar# ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND  FROMBRANCH_ID IN ( SELECT BRANCH_ID FROM USR_DAP_ACCESS WHERE RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND FROMBRANCH_id*10000+FROMFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID<>0 ) )  OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id IN ( SELECT BRANCH_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id*10000+ TOFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID =#racfid:varchar# AND FA_ID<>0 ) ) ) AND (RETIREMENT_MNEMONIC like #rttValue:varchar# or ('2'=#rttFlag:varchar# AND RETIREMENT_MNEMONIC IS  NULL)) #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with ur
#Modified for Defect Id:52241 by 259245
getViewTransactionsThreeDefaultLIST_page.Query=select VERSIONNUM,CREATEDDATE,PAYPAYREF,CREATEDBY,TXN_TYPE,FREQ_TYPE,REQUESTED_EXE_DT,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYDEBITAMT,STATUS,ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,BATVERSIONNUM,PARTXNVERSIONNUM,TXNTYPECODE,DURATION,PAYFREQENDDATE,PAYFREQLIMIT,PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,FREQ_TYPE_ORG,ACTUAL_EXE_DT,count(*) over() total_rows from (select DPT.versionnum,date(DPT.CREATEDDATE) as CREATEDDATE,CAST(DPT.PAYPAYREF AS BIGINT) as PAYPAYREF,CASE WHEN CURRENT_OWNER_ROLE='Client' THEN 'Client' WHEN CURRENT_OWNER_ROLE='INITBRAN' THEN 'Branch' WHEN CURRENT_OWNER_ROLE='INITNBOP' THEN 'NBO' ELSE 'Client' END AS CREATEDBY,DD1.dmndomainvaldesc as TXN_TYPE,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN ' ' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE,date(REQUESTED_EXE_DT) as REQUESTED_EXE_DT,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1) as PAYDEBITACCNUM,COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6)  || '-'|| SUBSTR(TOBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1,CTD.PAYEE_NAME) as PAYPAYEEACCNUM,PAYDEBITAMT,DD2.dmndomainvaldesc As STATUS,'View' as ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,DBT.BATVERSIONNUM,TP.txn_parent_ver AS PARTXNVERSIONNUM,TXN_TYPE AS TXNTYPECODE, TP.DURATION AS DURATION,DATE(TP.UNTILDATE) as PAYFREQENDDATE,TP.THRSHOLD_AMT as PAYFREQLIMIT,TP.MAX_TXN_NO as PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN 'OneTime' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE_ORG,date(ACTUAL_EXE_DT) as ACTUAL_EXE_DT from DS_BATCH DBT,DS_DOMAINS DD1,DS_DOMAINS DD2,DS_DOMAINS DD3,DS_PAY_TXNS DPT LEFT OUTER JOIN TXN_PARENT TP ON TP.PAR_TXN_NO=DPT.PAR_TXN_NO  LEFT OUTER JOIN DS_DOMAINS DD4 ON DD4.dmndomain='D_Duration' and DD4.dmndomainval=TP.FREQUENCY  LEFT OUTER JOIN ds_payee_ref DR ON dr.cpypayeeid=dpt.paypayeeaccnum LEFT OUTER JOIN CHECK_TXN_DTLS CTD ON CTD.CONFIRMATION_NO=DPT.PAYPAYREF where  DD1.dmndomain='D_TxnType_MS360' and DD1.dmndomainval=DPT.TXN_TYPE AND DD2.dmndomain='D_COEStatusCode' and DD2.dmndomainval=DPT.payccsstatuscode AND DD3.dmndomain='D_FrequencyValue' and DD3.dmndomainval=DPT.PAYRECURRING AND DPT.PAYBATCHREF=DBT.BATBATCHREF AND DATE(DPT.CREATEDDATE) BETWEEN (#entryStartDate:date#) AND (#entryEndDate:date#) AND DPT.payccsstatuscode like #status:varchar# AND (UPPER(DPT.CURRENT_OWNER_ID) like #initiatorName:varchar# OR UPPER(DPT.CURRENT_OWNER_ROLE) like #initiatorName:varchar#) AND ( DPT.NEXT_APPROVER_ROLE like #approver:varchar# AND DPT.payccsstatuscode in (#approverStatus:varchar#)) AND DPT.TXN_TYPE in (#trxnType:varchar#) AND DPT.paydebitamt BETWEEN (#trxnMinAmount:BigDecimal#) AND (#trxnMaxAmount:BigDecimal#)  AND DPT.PAYPAYEEID like #extAccount:varchar#  AND DPT.PAYRECURRING like  #frequencyType2:varchar#  AND TRIAL_DEPO='N' AND ((0 IN ( SELECT BRANCH_ID+FA_ID FROM USR_DAP_ACCESS where RACFID=#racfid:varchar# ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND  FROMBRANCH_ID IN ( SELECT BRANCH_ID FROM USR_DAP_ACCESS WHERE RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND FROMBRANCH_id*10000+FROMFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID<>0 ) )  OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id IN ( SELECT BRANCH_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id*10000+ TOFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID =#racfid:varchar# AND FA_ID<>0 ) ) ) AND (RETIREMENT_MNEMONIC like #rttValue:varchar# or ('2'=#rttFlag:varchar# AND RETIREMENT_MNEMONIC IS  NULL)) #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with ur
getViewTransactionsThreeDefaultLIST_page.TOColumnMap={versionnum=versionnum,CREATEDDATE=CREATEDDATE,PAYPAYREF=PAYPAYREF,CREATEDBY=CREATEDBY,TXN_TYPE=TXN_TYPE,FREQ_TYPE=FREQ_TYPE,REQUESTED_EXE_DT=REQUESTED_EXE_DT,PAYDEBITACCNUM=PAYDEBITACCNUM,PAYPAYEEACCNUM=PAYPAYEEACCNUM,PAYDEBITAMT=PAYDEBITAMT,STATUS=STATUS,ACTION=ACTION,PAYBATCHREF=PAYBATCHREF,PAYCCSSTATUSCODE=PAYCCSSTATUSCODE,BATVERSIONNUM=BATVERSIONNUM,PARTXNVERSIONNUM=PARTXNVERSIONNUM,TXNTYPECODE=TXNTYPECODE,DURATION=DURATION,PAYFREQENDDATE=PAYFREQENDDATE,PAYFREQLIMIT=PAYFREQLIMIT,PAYFREQPAYMENTCOUNT=PAYFREQPAYMENTCOUNT,PAYRECURRING=PAYRECURRING,RETIREMENT_MNEMONIC=RETIREMENT_MNEMONIC,FREQ_TYPE_ORG=FREQ_TYPE_ORG,ACTUAL_EXE_DT=ACTUAL_EXE_DT,total_rows=total_rows}
getViewTransactionsThreeDefaultLIST_page.OutputType=java.util.ArrayList
getViewTransactionsThreeDefaultLIST.StmtType=PreparedStatement
getViewTransactionsThreeDefaultLIST.PgnUniqueKeys=CREATEDDATE:Date:DESC#PAYPAYREF:numeric:DESC
getViewTransactionsThreeDefaultLIST.SortKeys=CREATEDDATE:Date:DESC#PAYPAYREF:numeric:DESC



##All Accounts Query was changed as part of performance improvement by Krishna
##June7##getViewTransactionsThreeSearchLIST_page.Query=select VERSIONNUM,CREATEDDATE,PAYPAYREF,CREATEDBY,TXN_TYPE,FREQ_TYPE,REQUESTED_EXE_DT,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYDEBITAMT,STATUS,ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,BATVERSIONNUM,PARTXNVERSIONNUM,TXNTYPECODE,DURATION,PAYFREQENDDATE,PAYFREQLIMIT,PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,FREQ_TYPE_ORG,ACTUAL_EXE_DT,total_rows from (select VERSIONNUM,CREATEDDATE,PAYPAYREF,CREATEDBY,TXN_TYPE,FREQ_TYPE,REQUESTED_EXE_DT,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYDEBITAMT,STATUS,ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,BATVERSIONNUM,PARTXNVERSIONNUM,TXNTYPECODE,DURATION,PAYFREQENDDATE,PAYFREQLIMIT,PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,FREQ_TYPE_ORG,ACTUAL_EXE_DT,count(*) over() total_rows from (select DPT.versionnum,date(DPT.CREATEDDATE) as CREATEDDATE,CAST(DPT.PAYPAYREF AS BIGINT) as PAYPAYREF,CASE WHEN CURRENT_OWNER_ROLE='Client' THEN 'Client' WHEN CURRENT_OWNER_ROLE='INITBRAN' THEN 'Branch' WHEN CURRENT_OWNER_ROLE='INITNBOP' THEN 'NBO' ELSE 'Client' END AS CREATEDBY,DD1.dmndomainvaldesc as TXN_TYPE,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN ' ' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE,date(REQUESTED_EXE_DT) as REQUESTED_EXE_DT,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1) as PAYDEBITACCNUM,COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6)  || '-'|| SUBSTR(TOBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1,CTD.PAYEE_NAME) as PAYPAYEEACCNUM,PAYDEBITAMT,DD2.dmndomainvaldesc As STATUS,'View' as ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,DBT.BATVERSIONNUM,TP.txn_parent_ver AS PARTXNVERSIONNUM,TXN_TYPE AS TXNTYPECODE, TP.DURATION AS DURATION,DATE(TP.UNTILDATE) as PAYFREQENDDATE,TP.THRSHOLD_AMT as PAYFREQLIMIT,TP.MAX_TXN_NO as PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN 'OneTime' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE_ORG,date(ACTUAL_EXE_DT) as ACTUAL_EXE_DT from DS_BATCH DBT,DS_DOMAINS DD1,DS_DOMAINS DD2,DS_DOMAINS DD3,DS_PAY_TXNS DPT LEFT OUTER JOIN TXN_PARENT TP ON TP.PAR_TXN_NO=DPT.PAR_TXN_NO  LEFT OUTER JOIN DS_DOMAINS DD4 ON DD4.dmndomain='D_Duration' and DD4.dmndomainval=TP.FREQUENCY  LEFT OUTER JOIN ds_payee_ref DR ON dr.cpypayeeid=dpt.paypayeeaccnum LEFT OUTER JOIN CHECK_TXN_DTLS CTD ON CTD.CONFIRMATION_NO=DPT.PAYPAYREF where  DD1.dmndomain='D_TxnType_MS360' and DD1.dmndomainval=DPT.TXN_TYPE AND DD2.dmndomain='D_COEStatusCode' and DD2.dmndomainval=DPT.payccsstatuscode AND DD3.dmndomain='D_FrequencyValue' and DD3.dmndomainval=DPT.PAYRECURRING AND DPT.PAYBATCHREF=DBT.BATBATCHREF AND ( FROMBR_ACCT_NO_FA like #officeNo:varchar# AND DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG') ) AND TRIAL_DEPO='N' AND  DPT.NEXT_APPROVER_ROLE like #approver:varchar#  AND DATE(DPT.CREATEDDATE) BETWEEN (#entryStartDate:date#) AND (#entryEndDate:date#) AND  DATE(DPT.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#)  AND (UPPER(DPT.CURRENT_OWNER_ROLE) like #initiatorName:varchar# OR UPPER(DPT.CURRENT_OWNER_ID) like #initiatorName:varchar#) AND DPT.paydebitamt BETWEEN (#trxnMinAmount:BigDecimal#) AND (#trxnMaxAmount:BigDecimal#)  AND DPT.PAYPAYEEID like #extAccount:varchar#  AND DPT.payccsstatuscode like #status:varchar# AND DPT.PAYRECURRING like  #frequencyType2:varchar#  AND DPT.TXN_TYPE in (#trxnType:varchar#) AND ((0 IN ( SELECT BRANCH_ID+FA_ID FROM USR_DAP_ACCESS where RACFID=#racfid:varchar# ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND  FROMBRANCH_ID IN ( SELECT BRANCH_ID FROM USR_DAP_ACCESS WHERE RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND FROMBRANCH_id*10000+FROMFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID<>0 ) )  ) AND (RETIREMENT_MNEMONIC like #rttValue:varchar# or ('2'=#rttFlag:varchar# AND RETIREMENT_MNEMONIC IS  NULL))  union  select DPT.versionnum,date(DPT.CREATEDDATE) as CREATEDDATE,CAST(DPT.PAYPAYREF AS BIGINT) as PAYPAYREF,CASE WHEN CURRENT_OWNER_ROLE='Client' THEN 'Client' WHEN CURRENT_OWNER_ROLE='INITBRAN' THEN 'Branch' WHEN CURRENT_OWNER_ROLE='INITNBOP' THEN 'NBO' ELSE 'Client' END AS CREATEDBY,DD1.dmndomainvaldesc as TXN_TYPE,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN ' ' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE,date(REQUESTED_EXE_DT) as REQUESTED_EXE_DT,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1) as PAYDEBITACCNUM,COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6)  || '-'|| SUBSTR(TOBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1,CTD.PAYEE_NAME) as PAYPAYEEACCNUM,PAYDEBITAMT,DD2.dmndomainvaldesc As STATUS,'View' as ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,DBT.BATVERSIONNUM,TP.txn_parent_ver AS PARTXNVERSIONNUM,TXN_TYPE AS TXNTYPECODE, TP.DURATION AS DURATION,DATE(TP.UNTILDATE) as PAYFREQENDDATE,TP.THRSHOLD_AMT as PAYFREQLIMIT,TP.MAX_TXN_NO as PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN 'OneTime' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE_ORG,date(ACTUAL_EXE_DT) as ACTUAL_EXE_DT from DS_BATCH DBT,DS_DOMAINS DD1,DS_DOMAINS DD2,DS_DOMAINS DD3,DS_PAY_TXNS DPT LEFT OUTER JOIN TXN_PARENT TP ON TP.PAR_TXN_NO=DPT.PAR_TXN_NO  LEFT OUTER JOIN DS_DOMAINS DD4 ON DD4.dmndomain='D_Duration' and DD4.dmndomainval=TP.FREQUENCY  LEFT OUTER JOIN ds_payee_ref DR ON dr.cpypayeeid=dpt.paypayeeaccnum LEFT OUTER JOIN CHECK_TXN_DTLS CTD ON CTD.CONFIRMATION_NO=DPT.PAYPAYREF where  DD1.dmndomain='D_TxnType_MS360' and DD1.dmndomainval=DPT.TXN_TYPE AND DD2.dmndomain='D_COEStatusCode' and DD2.dmndomainval=DPT.payccsstatuscode AND DD3.dmndomain='D_FrequencyValue' and DD3.dmndomainval=DPT.PAYRECURRING AND DPT.PAYBATCHREF=DBT.BATBATCHREF AND ( TOBR_ACCT_NO_FA like #officeNo:varchar# AND DPT.TXN_TYPE in ('ACH-IN')) AND TRIAL_DEPO='N' AND  DPT.NEXT_APPROVER_ROLE like #approver:varchar#  AND DATE(DPT.CREATEDDATE) BETWEEN (#entryStartDate:date#) AND (#entryEndDate:date#) AND  DATE(DPT.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#)  AND (UPPER(DPT.CURRENT_OWNER_ROLE) like #initiatorName:varchar# OR UPPER(DPT.CURRENT_OWNER_ID) like #initiatorName:varchar#) AND DPT.paydebitamt BETWEEN (#trxnMinAmount:BigDecimal#) AND (#trxnMaxAmount:BigDecimal#)  AND DPT.PAYPAYEEID like #extAccount:varchar#  AND DPT.payccsstatuscode like #status:varchar# AND DPT.PAYRECURRING like  #frequencyType2:varchar# AND  DPT.TXN_TYPE in (#trxnType:varchar#) AND ((0 IN ( SELECT BRANCH_ID+FA_ID FROM USR_DAP_ACCESS where RACFID=#racfid:varchar# ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id IN ( SELECT BRANCH_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id*10000+ TOFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID =#racfid:varchar# AND FA_ID<>0 ) ) ) AND (RETIREMENT_MNEMONIC like #rttValue:varchar# or ('2'=#rttFlag:varchar# AND RETIREMENT_MNEMONIC IS  NULL)) ) #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with ur
##July13##getViewTransactionsThreeSearchLIST_page.Query=select VERSIONNUM,CREATEDDATE,PAYPAYREF,CREATEDBY,TXN_TYPE,FREQ_TYPE,REQUESTED_EXE_DT,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYDEBITAMT,STATUS,ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,BATVERSIONNUM,PARTXNVERSIONNUM,TXNTYPECODE,DURATION,PAYFREQENDDATE,PAYFREQLIMIT,PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,FREQ_TYPE_ORG,ACTUAL_EXE_DT,count(*) over() total_rows from (select DPT.versionnum,date(DPT.CREATEDDATE) as CREATEDDATE,CAST(DPT.PAYPAYREF AS BIGINT) as PAYPAYREF,CASE WHEN CURRENT_OWNER_ROLE='Client' THEN 'Client' WHEN CURRENT_OWNER_ROLE='INITBRAN' THEN 'Branch' WHEN CURRENT_OWNER_ROLE='INITNBOP' THEN 'NBO' ELSE 'Client' END AS CREATEDBY,DD1.dmndomainvaldesc as TXN_TYPE,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN ' ' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE,date(REQUESTED_EXE_DT) as REQUESTED_EXE_DT,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1) as PAYDEBITACCNUM,COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6)  || '-'|| SUBSTR(TOBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1,CTD.PAYEE_NAME) as PAYPAYEEACCNUM,PAYDEBITAMT,DD2.dmndomainvaldesc As STATUS,'View' as ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,DBT.BATVERSIONNUM,TP.txn_parent_ver AS PARTXNVERSIONNUM,TXN_TYPE AS TXNTYPECODE, TP.DURATION AS DURATION,DATE(TP.UNTILDATE) as PAYFREQENDDATE,TP.THRSHOLD_AMT as PAYFREQLIMIT,TP.MAX_TXN_NO as PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN 'OneTime' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE_ORG,date(ACTUAL_EXE_DT) as ACTUAL_EXE_DT from DS_BATCH DBT,DS_DOMAINS DD1,DS_DOMAINS DD2,DS_DOMAINS DD3,DS_PAY_TXNS DPT LEFT OUTER JOIN TXN_PARENT TP ON TP.PAR_TXN_NO=DPT.PAR_TXN_NO  LEFT OUTER JOIN DS_DOMAINS DD4 ON DD4.dmndomain='D_Duration' and DD4.dmndomainval=TP.FREQUENCY  LEFT OUTER JOIN ds_payee_ref DR ON dr.cpypayeeid=dpt.paypayeeaccnum LEFT OUTER JOIN CHECK_TXN_DTLS CTD ON CTD.CONFIRMATION_NO=DPT.PAYPAYREF where  DD1.dmndomain='D_TxnType_MS360' and DD1.dmndomainval=DPT.TXN_TYPE AND DD2.dmndomain='D_COEStatusCode' and DD2.dmndomainval=DPT.payccsstatuscode AND DD3.dmndomain='D_FrequencyValue' and DD3.dmndomainval=DPT.PAYRECURRING AND DPT.PAYBATCHREF=DBT.BATBATCHREF AND (( FROMBR_ACCT_NO_FA like #officeNo:varchar# AND DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG') ) or ( TOBR_ACCT_NO_FA like #officeNo:varchar# AND DPT.TXN_TYPE in ('ACH-IN'))) AND DATE(DPT.CREATEDDATE) BETWEEN (#entryStartDate:date#) AND (#entryEndDate:date#) AND  DATE(DPT.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND DPT.NEXT_APPROVER_ROLE like #approver:varchar# AND (UPPER(DPT.CURRENT_OWNER_ROLE) like #initiatorName:varchar# OR UPPER(DPT.CURRENT_OWNER_ID) like #initiatorName:varchar#)  AND DPT.paydebitamt BETWEEN (#trxnMinAmount:BigDecimal#) AND (#trxnMaxAmount:BigDecimal#)  AND DPT.payccsstatuscode like #status:varchar# AND TRIAL_DEPO='N' AND DPT.PAYPAYEEID like #extAccount:varchar#  AND DPT.PAYRECURRING like  #frequencyType2:varchar#  AND DPT.TXN_TYPE in (#trxnType:varchar#) AND ((0 IN ( SELECT BRANCH_ID+FA_ID FROM USR_DAP_ACCESS where RACFID=#racfid:varchar# ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND  FROMBRANCH_ID IN ( SELECT BRANCH_ID FROM USR_DAP_ACCESS WHERE RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND FROMBRANCH_id*10000+FROMFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID<>0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id IN ( SELECT BRANCH_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id*10000+ TOFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID =#racfid:varchar# AND FA_ID<>0 ) )  ) AND (RETIREMENT_MNEMONIC like #rttValue:varchar# or ('2'=#rttFlag:varchar# AND RETIREMENT_MNEMONIC IS  NULL))  #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with ur

getViewTransactionsThreeSearchLIST_page.Query=select VERSIONNUM,CREATEDDATE,PAYPAYREF,CREATEDBY,TXN_TYPE,FREQ_TYPE,REQUESTED_EXE_DT,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYDEBITAMT,STATUS,ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,BATVERSIONNUM,PARTXNVERSIONNUM,TXNTYPECODE,DURATION,PAYFREQENDDATE,PAYFREQLIMIT,PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,FREQ_TYPE_ORG,ACTUAL_EXE_DT,count(*) over() total_rows from (select DPT.versionnum,date(DPT.CREATEDDATE) as CREATEDDATE,CAST(DPT.PAYPAYREF AS BIGINT) as PAYPAYREF,CASE WHEN CURRENT_OWNER_ROLE='Client' THEN 'Client' WHEN CURRENT_OWNER_ROLE='INITBRAN' THEN 'Branch' WHEN CURRENT_OWNER_ROLE='INITNBOP' THEN 'NBO' ELSE 'Client' END AS CREATEDBY,DD1.dmndomainvaldesc as TXN_TYPE,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN ' ' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE,date(REQUESTED_EXE_DT) as REQUESTED_EXE_DT,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1) as PAYDEBITACCNUM,COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6)  || '-'|| SUBSTR(TOBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1,CTD.PAYEE_NAME) as PAYPAYEEACCNUM,PAYDEBITAMT,DD2.dmndomainvaldesc As STATUS,'View' as ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,DBT.BATVERSIONNUM,TP.txn_parent_ver AS PARTXNVERSIONNUM,TXN_TYPE AS TXNTYPECODE, TP.DURATION AS DURATION,DATE(TP.UNTILDATE) as PAYFREQENDDATE,TP.THRSHOLD_AMT as PAYFREQLIMIT,TP.MAX_TXN_NO as PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN 'OneTime' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE_ORG,date(ACTUAL_EXE_DT) as ACTUAL_EXE_DT from DS_BATCH DBT,DS_DOMAINS DD1,DS_DOMAINS DD2,DS_DOMAINS DD3,DS_PAY_TXNS DPT LEFT OUTER JOIN TXN_PARENT TP ON TP.PAR_TXN_NO=DPT.PAR_TXN_NO  LEFT OUTER JOIN DS_DOMAINS DD4 ON DD4.dmndomain='D_Duration' and DD4.dmndomainval=TP.FREQUENCY  LEFT OUTER JOIN ds_payee_ref DR ON dr.cpypayeeid=dpt.paypayeeaccnum LEFT OUTER JOIN CHECK_TXN_DTLS CTD ON CTD.CONFIRMATION_NO=DPT.PAYPAYREF where  DD1.dmndomain='D_TxnType_MS360' and DD1.dmndomainval=DPT.TXN_TYPE AND DD2.dmndomain='D_COEStatusCode' and DD2.dmndomainval=DPT.payccsstatuscode AND DD3.dmndomain='D_FrequencyValue' and DD3.dmndomainval=DPT.PAYRECURRING AND DPT.PAYBATCHREF=DBT.BATBATCHREF AND (( FROMBR_ACCT_NO_FA like #officeNo:varchar# AND DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG') ) or ( TOBR_ACCT_NO_FA like #officeNo:varchar# AND DPT.TXN_TYPE in ('ACH-IN'))) AND DATE(DPT.CREATEDDATE) BETWEEN (#entryStartDate:date#) AND (#entryEndDate:date#) AND  DATE(DPT.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#) AND DPT.NEXT_APPROVER_ROLE like #approver:varchar# AND (UPPER(DPT.CURRENT_OWNER_ROLE) like #initiatorName:varchar# OR UPPER(DPT.CURRENT_OWNER_ID) like #initiatorName:varchar#)  AND DPT.paydebitamt BETWEEN (#trxnMinAmount:BigDecimal#) AND (#trxnMaxAmount:BigDecimal#)  AND DPT.payccsstatuscode like #status:varchar# AND TRIAL_DEPO='N' AND DPT.PAYPAYEEID like #extAccount:varchar#  AND DPT.PAYRECURRING like  #frequencyType2:varchar#  AND DPT.TXN_TYPE in (#trxnType:varchar#) AND ((0 IN ( SELECT BRANCH_ID+FA_ID FROM USR_DAP_ACCESS where RACFID=#racfid:varchar# ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND  FROMBRANCH_ID IN ( SELECT BRANCH_ID FROM USR_DAP_ACCESS WHERE RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND FROMBRANCH_id*10000+FROMFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID<>0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id IN ( SELECT BRANCH_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id*10000+ TOFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID =#racfid:varchar# AND FA_ID<>0 ) )  ) AND (RETIREMENT_MNEMONIC like #rttValue:varchar# or ('2'=#rttFlag:varchar# AND RETIREMENT_MNEMONIC IS  NULL))  #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with ur

getViewTransactionsThreeSearchLIST_page.TOColumnMap={versionnum=versionnum,CREATEDDATE=CREATEDDATE,PAYPAYREF=PAYPAYREF,CREATEDBY=CREATEDBY,TXN_TYPE=TXN_TYPE,FREQ_TYPE=FREQ_TYPE,REQUESTED_EXE_DT=REQUESTED_EXE_DT,PAYDEBITACCNUM=PAYDEBITACCNUM,PAYPAYEEACCNUM=PAYPAYEEACCNUM,PAYDEBITAMT=PAYDEBITAMT,STATUS=STATUS,ACTION=ACTION,PAYBATCHREF=PAYBATCHREF,PAYCCSSTATUSCODE=PAYCCSSTATUSCODE,BATVERSIONNUM=BATVERSIONNUM,PARTXNVERSIONNUM=PARTXNVERSIONNUM,TXNTYPECODE=TXNTYPECODE,DURATION=DURATION,PAYFREQENDDATE=PAYFREQENDDATE,PAYFREQLIMIT=PAYFREQLIMIT,PAYFREQPAYMENTCOUNT=PAYFREQPAYMENTCOUNT,PAYRECURRING=PAYRECURRING,RETIREMENT_MNEMONIC=RETIREMENT_MNEMONIC,FREQ_TYPE_ORG=FREQ_TYPE_ORG,ACTUAL_EXE_DT=ACTUAL_EXE_DT,total_rows=total_rows}
getViewTransactionsThreeSearchLIST_page.OutputType=java.util.ArrayList
getViewTransactionsThreeSearchLIST.StmtType=PreparedStatement
getViewTransactionsThreeSearchLIST.PgnUniqueKeys=CREATEDDATE:Date:DESC#PAYPAYREF:numeric:DESC
getViewTransactionsThreeSearchLIST.SortKeys=CREATEDDATE:Date:DESC#PAYPAYREF:numeric:DESC


#getViewTransactionsThreeDateLIST_page.Query=select VERSIONNUM,CREATEDDATE,PAYPAYREF,CREATEDBY,TXN_TYPE,FREQ_TYPE,REQUESTED_EXE_DT,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYDEBITAMT,STATUS,ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,BATVERSIONNUM,PARTXNVERSIONNUM,TXNTYPECODE,DURATION,PAYFREQENDDATE,PAYFREQLIMIT,PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,FREQ_TYPE_ORG,ACTUAL_EXE_DT,count(*) over() total_rows from (select DPT.versionnum,date(DPT.CREATEDDATE) as CREATEDDATE,CAST(DPT.PAYPAYREF AS BIGINT) as PAYPAYREF,CASE WHEN CURRENT_OWNER_ROLE='Client' THEN 'Client' WHEN CURRENT_OWNER_ROLE='INITBRAN' THEN 'Branch' WHEN CURRENT_OWNER_ROLE='INITNBOP' THEN 'NBO' ELSE 'Client' END AS CREATEDBY,DD1.dmndomainvaldesc as TXN_TYPE,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN ' ' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE,date(REQUESTED_EXE_DT) as REQUESTED_EXE_DT,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1) as PAYDEBITACCNUM,COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6)  || '-'|| SUBSTR(TOBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1,CTD.PAYEE_NAME) as PAYPAYEEACCNUM,PAYDEBITAMT,DD2.dmndomainvaldesc As STATUS,'View' as ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,DBT.BATVERSIONNUM,TP.txn_parent_ver AS PARTXNVERSIONNUM,TXN_TYPE AS TXNTYPECODE, TP.DURATION AS DURATION,DATE(TP.UNTILDATE) as PAYFREQENDDATE,TP.THRSHOLD_AMT as PAYFREQLIMIT,TP.MAX_TXN_NO as PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN 'OneTime' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE_ORG,date(ACTUAL_EXE_DT) as ACTUAL_EXE_DT from DS_BATCH DBT,DS_DOMAINS DD1,DS_DOMAINS DD2,DS_DOMAINS DD3,DS_PAY_TXNS DPT LEFT OUTER JOIN TXN_PARENT TP ON TP.PAR_TXN_NO=DPT.PAR_TXN_NO  LEFT OUTER JOIN DS_DOMAINS DD4 ON DD4.dmndomain='D_Duration' and DD4.dmndomainval=TP.FREQUENCY  LEFT OUTER JOIN ds_payee_ref DR ON dr.cpypayeeid=dpt.paypayeeaccnum LEFT OUTER JOIN CHECK_TXN_DTLS CTD ON CTD.CONFIRMATION_NO=DPT.PAYPAYREF where  DD1.dmndomain='D_TxnType_MS360' and DD1.dmndomainval=DPT.TXN_TYPE AND DD2.dmndomain='D_COEStatusCode' and DD2.dmndomainval=DPT.payccsstatuscode AND DD3.dmndomain='D_FrequencyValue' and DD3.dmndomainval=DPT.PAYRECURRING AND DPT.PAYBATCHREF=DBT.BATBATCHREF AND DATE(DPT.CREATEDDATE) BETWEEN (#entryStartDate:date#) AND (#entryEndDate:date#) AND  DATE(DPT.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#)  AND DPT.payccsstatuscode like #status:varchar# AND (UPPER(DPT.CURRENT_OWNER_ID) like #initiatorName:varchar# OR UPPER(DPT.CURRENT_OWNER_ROLE) like #initiatorName:varchar#) AND DPT.NEXT_APPROVER_ROLE like #approver:varchar# AND DPT.TXN_TYPE in (#trxnType:varchar#) AND DPT.paydebitamt BETWEEN (#trxnMinAmount:BigDecimal#) AND (#trxnMaxAmount:BigDecimal#)  AND DPT.PAYRECURRING like  #frequencyType2:varchar#  AND TRIAL_DEPO='N' AND ((0 IN ( SELECT BRANCH_ID+FA_ID FROM USR_DAP_ACCESS where RACFID=#racfid:varchar# ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND  FROMBRANCH_ID IN ( SELECT BRANCH_ID FROM USR_DAP_ACCESS WHERE RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND FROMBRANCH_id*10000+FROMFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID<>0 ) )  OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id IN ( SELECT BRANCH_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id*10000+ TOFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID =#racfid:varchar# AND FA_ID<>0 ) ) ) AND (RETIREMENT_MNEMONIC like #rttValue:varchar# or ('2'=#rttFlag:varchar# AND RETIREMENT_MNEMONIC IS  NULL)) #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with ur

#Modified for Defect Id:52241 by 259245

getViewTransactionsThreeDateLIST_page.Query=select VERSIONNUM,CREATEDDATE,PAYPAYREF,CREATEDBY,TXN_TYPE,FREQ_TYPE,REQUESTED_EXE_DT,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYDEBITAMT,STATUS,ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,BATVERSIONNUM,PARTXNVERSIONNUM,TXNTYPECODE,DURATION,PAYFREQENDDATE,PAYFREQLIMIT,PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,FREQ_TYPE_ORG,ACTUAL_EXE_DT,count(*) over() total_rows from (select DPT.versionnum,date(DPT.CREATEDDATE) as CREATEDDATE,CAST(DPT.PAYPAYREF AS BIGINT) as PAYPAYREF,CASE WHEN CURRENT_OWNER_ROLE='Client' THEN 'Client' WHEN CURRENT_OWNER_ROLE='INITBRAN' THEN 'Branch' WHEN CURRENT_OWNER_ROLE='INITNBOP' THEN 'NBO' ELSE 'Client' END AS CREATEDBY,DD1.dmndomainvaldesc as TXN_TYPE,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN ' ' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE,date(REQUESTED_EXE_DT) as REQUESTED_EXE_DT,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1) as PAYDEBITACCNUM,COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6)  || '-'|| SUBSTR(TOBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1,CTD.PAYEE_NAME) as PAYPAYEEACCNUM,PAYDEBITAMT,DD2.dmndomainvaldesc As STATUS,'View' as ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,DBT.BATVERSIONNUM,TP.txn_parent_ver AS PARTXNVERSIONNUM,TXN_TYPE AS TXNTYPECODE, TP.DURATION AS DURATION,DATE(TP.UNTILDATE) as PAYFREQENDDATE,TP.THRSHOLD_AMT as PAYFREQLIMIT,TP.MAX_TXN_NO as PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN 'OneTime' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE_ORG,date(ACTUAL_EXE_DT) as ACTUAL_EXE_DT from DS_BATCH DBT,DS_DOMAINS DD1,DS_DOMAINS DD2,DS_DOMAINS DD3,DS_PAY_TXNS DPT LEFT OUTER JOIN TXN_PARENT TP ON TP.PAR_TXN_NO=DPT.PAR_TXN_NO  LEFT OUTER JOIN DS_DOMAINS DD4 ON DD4.dmndomain='D_Duration' and DD4.dmndomainval=TP.FREQUENCY  LEFT OUTER JOIN ds_payee_ref DR ON dr.cpypayeeid=dpt.paypayeeaccnum LEFT OUTER JOIN CHECK_TXN_DTLS CTD ON CTD.CONFIRMATION_NO=DPT.PAYPAYREF where  DD1.dmndomain='D_TxnType_MS360' and DD1.dmndomainval=DPT.TXN_TYPE AND DD2.dmndomain='D_COEStatusCode' and DD2.dmndomainval=DPT.payccsstatuscode AND DD3.dmndomain='D_FrequencyValue' and DD3.dmndomainval=DPT.PAYRECURRING AND DPT.PAYBATCHREF=DBT.BATBATCHREF AND DATE(DPT.CREATEDDATE) BETWEEN (#entryStartDate:date#) AND (#entryEndDate:date#) AND  DATE(DPT.REQUESTED_EXE_DT) BETWEEN (#startDate:date#) AND (#endDate:date#)  AND DPT.payccsstatuscode like #status:varchar# AND (UPPER(DPT.CURRENT_OWNER_ID) like #initiatorName:varchar# OR UPPER(DPT.CURRENT_OWNER_ROLE) like #initiatorName:varchar#) AND ( DPT.NEXT_APPROVER_ROLE like #approver:varchar# AND DPT.payccsstatuscode in (#approverStatus:varchar#))  AND DPT.TXN_TYPE in (#trxnType:varchar#) AND DPT.paydebitamt BETWEEN (#trxnMinAmount:BigDecimal#) AND (#trxnMaxAmount:BigDecimal#)  AND DPT.PAYRECURRING like  #frequencyType2:varchar#  AND TRIAL_DEPO='N' AND ((0 IN ( SELECT BRANCH_ID+FA_ID FROM USR_DAP_ACCESS where RACFID=#racfid:varchar# ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND  FROMBRANCH_ID IN ( SELECT BRANCH_ID FROM USR_DAP_ACCESS WHERE RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND FROMBRANCH_id*10000+FROMFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID<>0 ) )  OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id IN ( SELECT BRANCH_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id*10000+ TOFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID =#racfid:varchar# AND FA_ID<>0 ) ) ) AND (RETIREMENT_MNEMONIC like #rttValue:varchar# or ('2'=#rttFlag:varchar# AND RETIREMENT_MNEMONIC IS  NULL)) #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with ur
getViewTransactionsThreeDateLIST_page.TOColumnMap={versionnum=versionnum,CREATEDDATE=CREATEDDATE,PAYPAYREF=PAYPAYREF,CREATEDBY=CREATEDBY,TXN_TYPE=TXN_TYPE,FREQ_TYPE=FREQ_TYPE,REQUESTED_EXE_DT=REQUESTED_EXE_DT,PAYDEBITACCNUM=PAYDEBITACCNUM,PAYPAYEEACCNUM=PAYPAYEEACCNUM,PAYDEBITAMT=PAYDEBITAMT,STATUS=STATUS,ACTION=ACTION,PAYBATCHREF=PAYBATCHREF,PAYCCSSTATUSCODE=PAYCCSSTATUSCODE,BATVERSIONNUM=BATVERSIONNUM,PARTXNVERSIONNUM=PARTXNVERSIONNUM,TXNTYPECODE=TXNTYPECODE,DURATION=DURATION,PAYFREQENDDATE=PAYFREQENDDATE,PAYFREQLIMIT=PAYFREQLIMIT,PAYFREQPAYMENTCOUNT=PAYFREQPAYMENTCOUNT,PAYRECURRING=PAYRECURRING,RETIREMENT_MNEMONIC=RETIREMENT_MNEMONIC,FREQ_TYPE_ORG=FREQ_TYPE_ORG,ACTUAL_EXE_DT=ACTUAL_EXE_DT,total_rows=total_rows}
getViewTransactionsThreeDateLIST_page.OutputType=java.util.ArrayList
getViewTransactionsThreeDateLIST.StmtType=PreparedStatement
getViewTransactionsThreeDateLIST.PgnUniqueKeys=CREATEDDATE:Date:DESC#PAYPAYREF:numeric:DESC
getViewTransactionsThreeDateLIST.SortKeys=CREATEDDATE:Date:DESC#PAYPAYREF:numeric:DESC



getViewTransactionsThreeConfirmSearchLIST_page.Query=select VERSIONNUM,CREATEDDATE,PAYPAYREF,CREATEDBY,TXN_TYPE,FREQ_TYPE,REQUESTED_EXE_DT,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYDEBITAMT,STATUS,ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,BATVERSIONNUM,PARTXNVERSIONNUM,TXNTYPECODE,DURATION,PAYFREQENDDATE,PAYFREQLIMIT,PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,FREQ_TYPE_ORG,ACTUAL_EXE_DT,count(*) over() total_rows from (select DPT.versionnum,date(DPT.CREATEDDATE) as CREATEDDATE,CAST(DPT.PAYPAYREF AS BIGINT) as PAYPAYREF,CASE WHEN CURRENT_OWNER_ROLE='Client' THEN 'Client' WHEN CURRENT_OWNER_ROLE='INITBRAN' THEN 'Branch' WHEN CURRENT_OWNER_ROLE='INITNBOP' THEN 'NBO' ELSE 'Client' END AS CREATEDBY,DD1.dmndomainvaldesc as TXN_TYPE,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN ' ' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE,date(REQUESTED_EXE_DT) as REQUESTED_EXE_DT,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1) as PAYDEBITACCNUM,COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6) || '-' || SUBSTR(TOBR_ACCT_NO_FA,10,3),'XX-'||COALESCE(RIGHT(DR.CPYACCNUM,4), RIGHT(DR.CPYACCNUM,3), RIGHT(DR.CPYACCNUM,2))||' '||DR.cpypayeename1,CTD.PAYEE_NAME) as PAYPAYEEACCNUM,PAYDEBITAMT,DD2.dmndomainvaldesc As STATUS,'View' as ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,DBT.BATVERSIONNUM,TP.txn_parent_ver AS PARTXNVERSIONNUM,TXN_TYPE AS TXNTYPECODE, TP.DURATION AS DURATION,DATE(TP.UNTILDATE) as PAYFREQENDDATE,TP.THRSHOLD_AMT as PAYFREQLIMIT,TP.MAX_TXN_NO as PAYFREQPAYMENTCOUNT,PAYRECURRING,RETIREMENT_MNEMONIC,CASE WHEN DD3.dmndomainvaldesc='OneTime' THEN 'OneTime' ELSE DD3.dmndomainvaldesc|| ' (' || COALESCE(DD4.dmndomainvaldesc,'') || ')' END AS FREQ_TYPE_ORG,date(ACTUAL_EXE_DT) as ACTUAL_EXE_DT from DS_BATCH DBT,DS_DOMAINS DD1,DS_DOMAINS DD2,DS_DOMAINS DD3,DS_PAY_TXNS DPT LEFT OUTER JOIN TXN_PARENT TP ON TP.PAR_TXN_NO=DPT.PAR_TXN_NO LEFT OUTER JOIN DS_DOMAINS DD4 ON DD4.dmndomain='D_Duration' and DD4.dmndomainval=TP.FREQUENCY LEFT OUTER JOIN ds_payee_ref DR ON dr.cpypayeeid=dpt.paypayeeaccnum LEFT OUTER JOIN CHECK_TXN_DTLS CTD ON CTD.CONFIRMATION_NO=DPT.PAYPAYREF where DD1.dmndomain='D_TxnType_MS360' and DD1.dmndomainval=DPT.TXN_TYPE AND DD2.dmndomain='D_COEStatusCode' and DD2.dmndomainval=DPT.payccsstatuscode AND DD3.dmndomain='D_FrequencyValue' and DD3.dmndomainval=DPT.PAYRECURRING AND DPT.PAYBATCHREF=DBT.BATBATCHREF  AND DPT.PAYPAYREF like #confirmationNo:varchar#  AND  TRIAL_DEPO='N' AND  ((0 IN ( SELECT BRANCH_ID+FA_ID FROM USR_DAP_ACCESS where RACFID=#racfid:varchar# ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND  FROMBRANCH_ID IN ( SELECT BRANCH_ID FROM USR_DAP_ACCESS WHERE RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('INT','ACH-OUT','CHK-LOC','CHK-REG')  AND FROMBRANCH_id*10000+FROMFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID<>0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id IN ( SELECT BRANCH_ID from USR_DAP_ACCESS where RACFID=#racfid:varchar# AND FA_ID=0 ) ) OR (DPT.TXN_TYPE in ('ACH-IN')  AND   TOBRANCH_id*10000+ TOFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID =#racfid:varchar# AND FA_ID<>0 ) ) ) #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with ur
getViewTransactionsThreeConfirmSearchLIST_page.TOColumnMap={versionnum=versionnum,CREATEDDATE=CREATEDDATE,PAYPAYREF=PAYPAYREF,CREATEDBY=CREATEDBY,TXN_TYPE=TXN_TYPE,FREQ_TYPE=FREQ_TYPE,REQUESTED_EXE_DT=REQUESTED_EXE_DT,PAYDEBITACCNUM=PAYDEBITACCNUM,PAYPAYEEACCNUM=PAYPAYEEACCNUM,PAYDEBITAMT=PAYDEBITAMT,STATUS=STATUS,ACTION=ACTION,PAYBATCHREF=PAYBATCHREF,PAYCCSSTATUSCODE=PAYCCSSTATUSCODE,BATVERSIONNUM=BATVERSIONNUM,PARTXNVERSIONNUM=PARTXNVERSIONNUM,TXNTYPECODE=TXNTYPECODE,DURATION=DURATION,PAYFREQENDDATE=PAYFREQENDDATE,PAYFREQLIMIT=PAYFREQLIMIT,PAYFREQPAYMENTCOUNT=PAYFREQPAYMENTCOUNT,PAYRECURRING=PAYRECURRING,RETIREMENT_MNEMONIC=RETIREMENT_MNEMONIC,FREQ_TYPE_ORG=FREQ_TYPE_ORG,ACTUAL_EXE_DT=ACTUAL_EXE_DT,total_rows=total_rows}
getViewTransactionsThreeConfirmSearchLIST_page.OutputType=java.util.ArrayList
getViewTransactionsThreeConfirmSearchLIST.StmtType=PreparedStatement
getViewTransactionsThreeConfirmSearchLIST.PgnUniqueKeys=CREATEDDATE:Date:DESC#PAYPAYREF:numeric:DESC
getViewTransactionsThreeConfirmSearchLIST.SortKeys=CREATEDDATE:Date:DESC#PAYPAYREF:numeric:DESC

getAccessDetails.Query=SELECT FA_ID,BRANCH_ID FROM USR_DAP_ACCESS WHERE RACFID=#racfId:varchar#
getAccessDetails.TOColumnMap={fa_id=fa_id,branch_id=branch_id}
getAccessDetails.OutputType=com.tcs.ebw.payments.transferobject.DsConfigDetailsOut
getAccessDetails.StmtType=PreparedStatement


getConfCancelListDetails.Query=select PAYPAYREF,CREATEDBY,TXN_TYPE,FREQ_TYPE,DURATION,REQUESTED_EXE_DT,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYDEBITAMT,STATUS,count(*) over() total_rows from (select DPT.versionnum,CAST(DPT.PAYPAYREF AS BIGINT) as PAYPAYREF,CREATEDBY_NAME as CREATEDBY,(SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_TxnType' and dmndomainval=TXN_TYPE) as TXN_TYPE,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING) END AS FREQ_TYPE,COALESCE((select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FreqDuration' and dmndomainval=PAYFREQUENCY),'') as DURATION,date(REQUESTED_EXE_DT) as REQUESTED_EXE_DT,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6)  || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),PAYPAYEEID) as PAYDEBITACCNUM,COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6)  || '-' || SUBSTR(TOBR_ACCT_NO_FA,10,3),PAYPAYEEID) as PAYPAYEEACCNUM,PAYDEBITAMT,(select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_COEStatusCode' and dmndomainval=payccsstatuscode) as STATUS,'View' as ACTION,PAYBATCHREF,PAYCCSSTATUSCODE,DBT.BATVERSIONNUM,(SELECT txn_parent_ver FROM TXN_PARENT TP WHERE TP.PAR_TXN_NO=DPT.PAR_TXN_NO) AS PARTXNVERSIONNUM from  DS_PAY_TXNS DPT,DS_BATCH DBT where  TRIAL_DEPO='N' AND DPT.PAYPAYREF like #confrmnNo:varchar# AND DPT.PAYBATCHREF=DBT.BATBATCHREF )
getConfCancelListDetails.TOColumnMap={PAYPAYREF=PAYPAYREF,CREATEDBY=CREATEDBY,TXN_TYPE=TXN_TYPE,FREQ_TYPE=FREQ_TYPE,DURATION=DURATION,REQUESTED_EXE_DT=REQUESTED_EXE_DT,PAYDEBITACCNUM=PAYDEBITACCNUM,PAYPAYEEACCNUM=PAYPAYEEACCNUM,PAYDEBITAMT=PAYDEBITAMT,STATUS=STATUS}
getConfCancelListDetails.OutputType=java.util.ArrayList

getConfSkipListDetails.Query=select TXN_TYPE,REQUESTED_EXE_DT,PAYDEBITACCNUM,PAYPAYEEACCNUM,PAYDEBITAMT,count(*) over() total_rows from (select (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_TxnType' and dmndomainval=TXN_TYPE) as TXN_TYPE,date(REQUESTED_EXE_DT) as REQUESTED_EXE_DT,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6)  || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),PAYPAYEEID) as PAYDEBITACCNUM,COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6)  || '-' ||SUBSTR(TOBR_ACCT_NO_FA,10,3),PAYPAYEEID) as PAYPAYEEACCNUM,PAYDEBITAMT from DS_PAY_TXNS DPT,DS_BATCH DBT where  TRIAL_DEPO='N' AND DPT.PAYPAYREF like #confrmnNo:varchar# AND DPT.PAYBATCHREF=DBT.BATBATCHREF )
getConfSkipListDetails.TOColumnMap={TXN_TYPE=TXN_TYPE,REQUESTED_EXE_DT=REQUESTED_EXE_DT,PAYDEBITACCNUM=PAYDEBITACCNUM,PAYPAYEEACCNUM=PAYPAYEEACCNUM,PAYDEBITAMT=PAYDEBITAMT}
getConfSkipListDetails.OutputType=com.tcs.ebw.payments.transferobject.DsConfigDetailsSkipResultTO[]


# View All Transactions Ends

## External Acct Maintenance Starts
##<Phase3> <Modified for Phase 3 by Shashi on Date (19/Apr/2011)>
getExtAcctMainStatusValues.Query=select dmndomainval,dmndomainvaldesc from  ds_domains where dmndomain='D_StatusCode' and dmndomainval in ('31','32','33','34','35','36','37','38','40')
getExtAcctMainStatusValues.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getExtAcctMainStatusValues.OutputType=java.util.Vector

#getExtAcctMainTypeValues.Query=select dmndomainvaldesc,dmndomainvaldesc from ds_domains where dmndomain='D_NewExtAcctType'
#getExtAcctMainTypeValues.TOColumnMap={dmndomainvaldesc=dmndomainvaldesc,dmndomainvaldesc=dmndomainvaldesc}
#getExtAcctMainTypeValues.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_NewExtAcctType'

getExtAcctMainTypeValues.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_NewExtAcctType' order by sort_ord
getExtAcctMainTypeValues.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getExtAcctMainTypeValues.OutputType=java.util.Vector
getExtAcctMainTypeValues.StmtType=PreparedStatement

#getExtAcctMaintenanceLIST_page.Query=select versionnum,CREATEDBY,CPYPAYEEREFNO,CPYACCNUM,CPYACCTYPE,CPYBANKCODE,BNKDES,CPYPAYEENAME1,STATUS,CPYCLRCODETT,CPYPAYEEID,life_user_id,count(*) over() total_rows from (select distinct DPT.versionnum,DPT.CREATEDBY,DPT.CPYPAYEEREFNO,DPT.CPYACCNUM,DPT.CPYACCTYPE,DPT.CPYBANKCODE,(select distinct bnkref.BNKDES from DS_BANK_REF bnkref where bnkref.BNKCODE=DPT.CPYBANKCODE and DPT.deleteflag='N') as BNKDES,CPYPAYEENAME1,(select dsdom.dmndomainvaldesc from DS_DOMAINS dsdom where dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS) as STATUS,CPYCLRCODETT,DPT.CPYPAYEEID,DPT.life_user_id from  DS_PAYEE_REF DPT where DPT.CPYSTATUS in ('31','32','33','34','35','36','37','38') #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
#Working 15June2010 Before Adding Outer join.
#getExtAcctMaintenanceLIST_page.Query=select versionnum,CREATEDBY,CPYPAYEEREFNO,CPYACCNUM,CPYACCTYPE,CPYBANKCODE,BNKDES,CPYPAYEENAME1,STATUS,CPYCLRCODETT,CPYPAYEEID,life_user_id,count(*) over() total_rows from (select distinct DPT.versionnum,DPT.CREATEDBY,DPT.CPYPAYEEREFNO,DPT.CPYACCNUM,DPT.CPYACCTYPE,DPT.CPYBANKCODE,(select distinct bnkref.BNKDES from DS_BANK_REF bnkref where bnkref.BNKCODE=DPT.CPYBANKCODE and DPT.deleteflag='N') as BNKDES,CPYPAYEENAME1,(select dsdom.dmndomainvaldesc from DS_DOMAINS dsdom where dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS) as STATUS,CPYCLRCODETT,DPT.CPYPAYEEID,DPT.life_user_id from  DS_PAYEE_REF DPT where DPT.CPYSTATUS in ('31','32','33','34','35','36','37','38') #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
#getExtAcctMaintenanceLIST_page.Query=select versionnum,CREATEDBY,CPYPAYEEREFNO,CPYACCNUM,CPYACCTYPE,CPYBANKCODE,BNKDES,CPYPAYEENAME1,STATUS,CPYCLRCODETT,CPYPAYEEID,life_user_id,count(*) over() total_rows from (select distinct DPT.versionnum,DPT.CREATEDBY,DPT.CPYPAYEEREFNO,DPT.CPYACCNUM,DPT.CPYACCTYPE,DPT.CPYBANKCODE,bnkref.BNKDES,DPT.CPYPAYEENAME1,dsdom.dmndomainvaldesc as STATUS,DPT.CPYCLRCODETT,DPT.CPYPAYEEID,DPT.life_user_id from DS_PAYEE_REF DPT left outer join DS_BANK_REF bnkref on bnkref.BNKCODE=DPT.CPYBANKCODE left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS where DPT.CPYSTATUS in ('31','32','33','34','35','36','37','38') #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only with UR
#getExtAcctMaintenanceLIST_page.TOColumnMap={versionnum=versionnum,CREATEDBY=CREATEDBY,CPYPAYEEREFNO=CPYPAYEEREFNO,CPYACCNUM=CPYACCNUM,CPYACCTYPE=CPYACCTYPE,CPYBANKCODE=CPYBANKCODE,BNKDES=BNKDES,CPYPAYEENAME1=CPYPAYEENAME1,STATUS=STATUS,CPYCLRCODETT=CPYCLRCODETT,CPYPAYEEID=CPYPAYEEID,life_user_id=life_user_id,total_rows=total_rows}

##<Phase3> <Modified for Phase 3 by Shashi on Date (19/Apr/2011)>
##<Modified for defect id :33752 by Shashi on Date (02/May/2011)>
getExtAcctMaintenanceLIST_page.Query=select versionnum,CREATEDBY,CPYPAYEEREFNO,CPYACCNUM,CPYACCTYPE,CPYBANKCODE,BNKDES,CPYPAYEENAME1,STATUS,CPYCLRCODETT,CPYPAYEEID,life_user_id,count(*) over() total_rows from (select distinct DPT.versionnum,DPT.CREATEDBY,DPT.CPYPAYEEREFNO,DPT.CPYACCNUM,dsdom1.dmndomainvaldesc as CPYACCTYPE,DPT.CPYBANKCODE,bnkref.BNKDES,DPT.CPYPAYEENAME1,case when THIRD_PARTY_IND='Yes' and dsdom.dmndomainvaldesc='Active' then dsdom.dmndomainvaldesc||' (Outbound Only)' else dsdom.dmndomainvaldesc end as STATUS,DPT.CPYCLRCODETT,DPT.CPYPAYEEID,DPT.life_user_id from DS_PAYEE_REF DPT left outer join DS_BANK_REF bnkref on bnkref.BNKCODE=DPT.CPYBANKCODE left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS left outer join DS_DOMAINS dsdom1 on dsdom1.dmndomain='D_NewExtAcctType' and dsdom1.dmndomainval=DPT.cpyacctype where DPT.CPYSTATUS in ('31','32','33','34','35','36','37','38','40') #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only with UR
getExtAcctMaintenanceLIST_page.TOColumnMap={versionnum=versionnum,CREATEDBY=CREATEDBY,CPYPAYEEREFNO=CPYPAYEEREFNO,CPYACCNUM=CPYACCNUM,CPYACCTYPE=CPYACCTYPE,CPYBANKCODE=CPYBANKCODE,BNKDES=BNKDES,CPYPAYEENAME1=CPYPAYEENAME1,STATUS=STATUS,CPYCLRCODETT=CPYCLRCODETT,CPYPAYEEID=CPYPAYEEID,life_user_id=life_user_id,total_rows=total_rows}
getExtAcctMaintenanceLIST_page.OutputType=java.util.ArrayList
getExtAcctMaintenanceLIST.StmtType=PreparedStatement
getExtAcctMaintenanceLIST.PgnUniqueKeys=CPYPAYEEID:varchar:ASC
getExtAcctMaintenanceLIST.SortKeys=CPYPAYEEID:varchar:ASC
#getExtAcctMaintenanceLIST.PgnUniqueKeys=LIFE_USER_ID:varchar:ASC#CPYACCNUM:varchar:ASC#CPYBANKCODE:varchar:ASC#CPYPAYEEID:varchar:ASC
#getExtAcctMaintenanceLIST.SortKeys=LIFE_USER_ID:varchar:ASC#CPYACCNUM:varchar:ASC#CPYBANKCODE:varchar:ASC#CPYPAYEEID:varchar:ASC

#getSearchExtAcctMaintenanceLIST_page.Query=select versionnum,CREATEDBY,CPYPAYEEREFNO,CPYACCNUM,CPYACCTYPE,CPYBANKCODE,BNKDES,CPYPAYEENAME1,STATUS,CPYCLRCODETT,CPYPAYEEID,life_user_id,count(*) over() total_rows from (select distinct DPT.versionnum,DPT.CREATEDBY,DPT.CPYPAYEEREFNO,DPT.CPYACCNUM,DPT.CPYACCTYPE,DPT.CPYBANKCODE, bnkref.BNKDES as BNKDES,CPYPAYEENAME1,(select dsdom.dmndomainvaldesc from DS_DOMAINS dsdom where dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS) as STATUS,CPYCLRCODETT,DPT.CPYPAYEEID,DPT.life_user_id from  DS_PAYEE_REF DPT, DS_BANK_REF bnkref where DPT.CPYSTATUS in ('31','32','33','38','34','35','36','37') and bnkref.BNKCODE=DPT.CPYBANKCODE and DPT.deleteflag='N' and UPPER(DPT.CREATEDBY) like #extAccMainUserName:varchar# and UPPER(DPT.CPYPAYEEREFNO) like #extAccMainUserId:varchar# and UPPER(DPT.CPYACCNUM) like #extAccMainAccNum:varchar# and DPT.CPYACCTYPE like #extAccMainAcctType:varchar# and UPPER(DPT.CPYBANKCODE) like #extAccMainRoutingNum:varchar# and UPPER(bnkref.BNKDES) like #extAccMainAccHeldAt:varchar#  and DPT.CPYSTATUS like #extAccMainAcctStatus:varchar# #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
#getSearchExtAcctMaintenanceLIST_page.Query=select versionnum,CREATEDBY,CPYPAYEEREFNO,CPYACCNUM,CPYACCTYPE,CPYBANKCODE,BNKDES,CPYPAYEENAME1,STATUS,CPYCLRCODETT,CPYPAYEEID,life_user_id,count(*) over() total_rows from (select distinct DPT.versionnum,DPT.CREATEDBY,DPT.CPYPAYEEREFNO,DPT.CPYACCNUM,DPT.CPYACCTYPE,DPT.CPYBANKCODE,(select distinct bnkref.BNKDES from DS_BANK_REF bnkref where bnkref.BNKCODE=DPT.CPYBANKCODE and DPT.deleteflag='N') as BNKDES,CPYPAYEENAME1,(select dsdom.dmndomainvaldesc from DS_DOMAINS dsdom where dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS) as STATUS,CPYCLRCODETT,DPT.CPYPAYEEID,DPT.life_user_id from  DS_PAYEE_REF DPT, DS_BANK_REF bnkref where DPT.CPYSTATUS in ('31','32','33','38','34','35','36','37') and bnkref.BNKCODE=DPT.CPYBANKCODE and DPT.deleteflag='N' and UPPER(DPT.CREATEDBY) like #extAccMainUserName:varchar# and UPPER(DPT.CPYPAYEEREFNO) like #extAccMainUserId:varchar# and UPPER(DPT.CPYACCNUM) like #extAccMainAccNum:varchar# and DPT.CPYACCTYPE like #extAccMainAcctType:varchar# and UPPER(DPT.CPYBANKCODE) like #extAccMainRoutingNum:varchar# and UPPER(bnkref.BNKDES) like #extAccMainAccHeldAt:varchar#  and DPT.CPYSTATUS like #extAccMainAcctStatus:varchar# #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
#Working 15June2010 Before Adding Outer join.
#getSearchExtAcctMaintenanceLIST_page.Query=select versionnum,CREATEDBY,CPYPAYEEREFNO,CPYACCNUM,CPYACCTYPE,CPYBANKCODE,BNKDES,CPYPAYEENAME1,STATUS,CPYCLRCODETT,CPYPAYEEID,life_user_id,count(*) over() total_rows from (select distinct DPT.versionnum,DPT.CREATEDBY,DPT.CPYPAYEEREFNO,DPT.CPYACCNUM,DPT.CPYACCTYPE,DPT.CPYBANKCODE,(select distinct bnkref.BNKDES from DS_BANK_REF bnkref where bnkref.BNKCODE=DPT.CPYBANKCODE and DPT.deleteflag='N') as BNKDES,CPYPAYEENAME1,(select dsdom.dmndomainvaldesc from DS_DOMAINS dsdom where dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS) as STATUS,CPYCLRCODETT,DPT.CPYPAYEEID,DPT.life_user_id from  DS_PAYEE_REF DPT, DS_BANK_REF bnkref where DPT.CPYSTATUS in ('31','32','33','38','34','35','36','37') and DPT.deleteflag='N' and UPPER(DPT.CREATEDBY) like #extAccMainUserName:varchar# and UPPER(DPT.CPYPAYEEREFNO) like #extAccMainUserId:varchar# and UPPER(DPT.CPYACCNUM) like #extAccMainAccNum:varchar# and DPT.CPYACCTYPE like #extAccMainAcctType:varchar# and UPPER(DPT.CPYBANKCODE) like #extAccMainRoutingNum:varchar# and UPPER(bnkref.BNKDES) like #extAccMainAccHeldAt:varchar#  and DPT.CPYSTATUS like #extAccMainAcctStatus:varchar# #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
#getSearchExtAcctMaintenanceLIST_page.Query=select versionnum,CREATEDBY,CPYPAYEEREFNO,CPYACCNUM,CPYACCTYPE,CPYBANKCODE,BNKDES,CPYPAYEENAME1,STATUS,CPYCLRCODETT,CPYPAYEEID,life_user_id,count(*) over() total_rows from (select distinct DPT.versionnum,DPT.CREATEDBY,DPT.CPYPAYEEREFNO,DPT.CPYACCNUM,DPT.CPYACCTYPE,DPT.CPYBANKCODE,bnkref.BNKDES,DPT.CPYPAYEENAME1,dsdom.dmndomainvaldesc as STATUS,DPT.CPYCLRCODETT,DPT.CPYPAYEEID,DPT.life_user_id from DS_PAYEE_REF DPT left outer join DS_BANK_REF bnkref on bnkref.BNKCODE=DPT.CPYBANKCODE left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS where DPT.CPYSTATUS in ('31','32','33','38','34','35','36','37') and DPT.deleteflag='N' and UPPER(DPT.CREATEDBY) like #extAccMainUserName:varchar# and UPPER(DPT.CPYPAYEEREFNO) like #extAccMainUserId:varchar# and UPPER(DPT.CPYACCNUM) like #extAccMainAccNum:varchar# and DPT.CPYACCTYPE like #extAccMainAcctType:varchar# and UPPER(DPT.CPYBANKCODE) like #extAccMainRoutingNum:varchar# and UPPER(bnkref.BNKDES) like #extAccMainAccHeldAt:varchar#  and DPT.CPYSTATUS like #extAccMainAcctStatus:varchar# #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only with UR
#getSearchExtAcctMaintenanceLIST_page.TOColumnMap={versionnum=versionnum,CREATEDBY=CREATEDBY,CPYPAYEEREFNO=CPYPAYEEREFNO,CPYACCNUM=CPYACCNUM,CPYACCTYPE=CPYACCTYPE,CPYBANKCODE=CPYBANKCODE,BNKDES=BNKDES,CPYPAYEENAME1=CPYPAYEENAME1,STATUS=STATUS,CPYCLRCODETT=CPYCLRCODETT,CPYPAYEEID=CPYPAYEEID,life_user_id=life_user_id,total_rows=total_rows}

##<Modified for defect id :33752 by Shashi on Date (02/May/2011)>
getSearchExtAcctMaintenanceLIST_page.Query=select versionnum,CREATEDBY,CPYPAYEEREFNO,CPYACCNUM,CPYACCTYPE,CPYBANKCODE,BNKDES,CPYPAYEENAME1,STATUS,CPYCLRCODETT,CPYPAYEEID,life_user_id,count(*) over() total_rows from (select distinct DPT.versionnum,DPT.CREATEDBY,DPT.CPYPAYEEREFNO,DPT.CPYACCNUM,dsdom1.dmndomainvaldesc as CPYACCTYPE,DPT.CPYBANKCODE,bnkref.BNKDES,DPT.CPYPAYEENAME1,case when THIRD_PARTY_IND='Yes' and dsdom.dmndomainvaldesc='Active' then dsdom.dmndomainvaldesc||' (Outbound Only)' else dsdom.dmndomainvaldesc end  as STATUS,DPT.CPYCLRCODETT,DPT.CPYPAYEEID,DPT.life_user_id from DS_PAYEE_REF DPT left outer join DS_BANK_REF bnkref on bnkref.BNKCODE=DPT.CPYBANKCODE left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS left outer join DS_DOMAINS dsdom1 on dsdom1.dmndomain='D_NewExtAcctType' and dsdom1.dmndomainval=DPT.cpyacctype where DPT.CPYSTATUS in ('31','32','33','38','34','35','36','37','40') and DPT.deleteflag='N' and UPPER(DPT.CREATEDBY) like #extAccMainUserName:varchar# and UPPER(DPT.CPYPAYEEREFNO) like #extAccMainUserId:varchar# and UPPER(DPT.CPYACCNUM) like #extAccMainAccNum:varchar# and DPT.CPYACCTYPE like #extAccMainAcctType:varchar# and UPPER(DPT.CPYBANKCODE) like #extAccMainRoutingNum:varchar# and UPPER(bnkref.BNKDES) like #extAccMainAccHeldAt:varchar#  and DPT.CPYSTATUS like #extAccMainAcctStatus:varchar# #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only with UR
getSearchExtAcctMaintenanceLIST_page.TOColumnMap={versionnum=versionnum,CREATEDBY=CREATEDBY,CPYPAYEEREFNO=CPYPAYEEREFNO,CPYACCNUM=CPYACCNUM,CPYACCTYPE=CPYACCTYPE,CPYBANKCODE=CPYBANKCODE,BNKDES=BNKDES,CPYPAYEENAME1=CPYPAYEENAME1,STATUS=STATUS,CPYCLRCODETT=CPYCLRCODETT,CPYPAYEEID=CPYPAYEEID,life_user_id=life_user_id,total_rows=total_rows}
getSearchExtAcctMaintenanceLIST_page.OutputType=java.util.ArrayList
getSearchExtAcctMaintenanceLIST.StmtType=PreparedStatement
getSearchExtAcctMaintenanceLIST.PgnUniqueKeys=CPYPAYEEID:varchar:ASC
getSearchExtAcctMaintenanceLIST.SortKeys=CPYPAYEEID:varchar:ASC
#getSearchExtAcctMaintenanceLIST.PgnUniqueKeys=LIFE_USER_ID:varchar:ASC#CPYACCNUM:varchar:ASC#CPYBANKCODE:varchar:ASC#CPYPAYEEID:varchar:ASC
#getSearchExtAcctMaintenanceLIST.SortKeys=LIFE_USER_ID:varchar:ASC#CPYACCNUM:varchar:ASC#CPYBANKCODE:varchar:ASC#CPYPAYEEID:varchar:ASC

#getExtAcctMaintenanceViewDetailsLIST_page.Query=select CREATEDBY,LAST_ACTION,CPYACCNUM,CPYACCNUM1,CPYACCTYPE,CPYBANKCODE,CPYBONAME1,CPYPAYEENAME1,CPYSTATUS,COMMENTS,ACTIONDATE,life_user_id,count(*) over() total_rows from (select CREATED_MODIFIED_BY_ID as CREATEDBY,DPT.LAST_ACTION,CAST(DPT.CPYACCNUM AS BIGINT) as CPYACCNUM,DPT.CPYACCNUM as CPYACCNUM1,DPT.CPYACCTYPE,DPT.CPYBANKCODE,DPT.CPYBONAME1,DPT.CPYPAYEENAME1,(select dsdom.dmndomainvaldesc from DS_DOMAINS dsdom where dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS) as CPYSTATUS,DPT.USERCOMMENTS as COMMENTS,TIMESTAMP(CREATED_MODIFIED_DATE) as ACTIONDATE, DPT.life_user_id from  DS_PAYEE_REF_LOG DPT where DPT.CPYPAYEEID=#cpypayeeid:varchar#  #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
#getExtAcctMaintenanceViewDetailsLIST_page.Query=select CREATEDBY,LAST_ACTION,CPYACCNUM,CPYACCNUM1,CPYACCTYPE,CPYBANKCODE,CPYBONAME1,CPYPAYEENAME1,CPYSTATUS,COMMENTS,ACTIONDATE,life_user_id,key_client,key_link,count(*) over() total_rows from (select CREATED_MODIFIED_BY_ID as CREATEDBY,DPT.LAST_ACTION,DPT.CPYACCNUM,DPT.CPYACCNUM as CPYACCNUM1,DPT.CPYACCTYPE,DPT.CPYBANKCODE,DPT.CPYBONAME1,DPT.CPYPAYEENAME1,(select dsdom.dmndomainvaldesc from DS_DOMAINS dsdom where dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS) as CPYSTATUS,DPT.USERCOMMENTS as COMMENTS,TIMESTAMP(CREATED_MODIFIED_DATE) as ACTIONDATE, DPT.life_user_id, DPT.key_client,DPT.key_link from  DS_PAYEE_REF_LOG DPT where DPT.CPYPAYEEID=#cpypayeeid:varchar#  #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
#Working 15June2010 Before Adding Outer join.
#getExtAcctMaintenanceViewDetailsLIST_page.Query=select CREATEDBY,LAST_ACTION,CPYACCNUM,CPYACCNUM1,CPYACCTYPE,CPYBANKCODE,CPYBONAME1,CPYPAYEENAME1,CPYSTATUS,COMMENTS,ACTIONDATE,life_user_id,key_client,key_link,count(*) over() total_rows from (select CREATED_MODIFIED_BY_ID as CREATEDBY,DPT.LAST_ACTION,DPT.CPYACCNUM,DPT.CPYACCNUM as CPYACCNUM1,DPT.CPYACCTYPE,DPT.CPYBANKCODE,(select distinct bnkref.BNKDES from DS_BANK_REF bnkref where bnkref.BNKCODE=DPT.CPYBANKCODE and DPT.deleteflag='N') as CPYBONAME1,DPT.CPYPAYEENAME1,(select dsdom.dmndomainvaldesc from DS_DOMAINS dsdom where dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS) as CPYSTATUS,DPT.USERCOMMENTS as COMMENTS,TIMESTAMP(CREATED_MODIFIED_DATE) as ACTIONDATE, DPT.life_user_id, DPT.key_client,DPT.key_link from  DS_PAYEE_REF_LOG DPT where DPT.CPYPAYEEID=#cpypayeeid:varchar#  #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only

# for Printer Friendly
#Modified for Defect Id:34673 by Nikita
#getExtAcctMaintenanceViewPrntDtlsLIST.Query=select CREATED_MODIFIED_BY_ID as CREATEDBY,DPT.LAST_ACTION,DPT.CPYACCNUM,DPT.CPYACCNUM as CPYACCNUM1,dsdom1.dmndomainvaldesc as CPYACCTYPE,DPT.CPYBANKCODE,bnkref.BNKDES as CPYBONAME1,DPT.CPYPAYEENAME1,dsdom.dmndomainvaldesc as CPYSTATUS,DPT.USERCOMMENTS as COMMENTS,TIMESTAMP(DPT.CREATED_MODIFIED_DATE) as ACTIONDATE, DPT.life_user_id, DPT.key_client,DPT.key_link from  DS_PAYEE_REF_LOG DPT left outer join DS_BANK_REF bnkref on bnkref.BNKCODE=DPT.CPYBANKCODE left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS left outer join DS_DOMAINS dsdom1 on dsdom1.dmndomain='D_NewExtAcctType' and dsdom1.dmndomainval=DPT.cpyacctype where DPT.CPYPAYEEID=#cpypayeeid:varchar# and 1=1 with UR

getExtAcctMaintenanceViewPrntDtlsLIST.Query=select CREATED_MODIFIED_BY_ID as CREATEDBY,DPT.LAST_ACTION,DPT.CPYACCNUM,DPT.CPYACCNUM as CPYACCNUM1,dsdom1.dmndomainvaldesc as CPYACCTYPE,DPT.CPYBANKCODE,bnkref.BNKDES as CPYBONAME1,DPT.CPYPAYEENAME1,case when dpr.THIRD_PARTY_IND='Yes' and dsdom.dmndomainvaldesc='Active' then dsdom.dmndomainvaldesc||' (Outbound Only)' else dsdom.dmndomainvaldesc end as CPYSTATUS,DPT.USERCOMMENTS as COMMENTS,TIMESTAMP(DPT.CREATED_MODIFIED_DATE) as ACTIONDATE, DPT.life_user_id, DPT.key_client,DPT.key_link from  DS_PAYEE_REF_LOG DPT left outer join DS_BANK_REF bnkref on bnkref.BNKCODE=DPT.CPYBANKCODE left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS left outer join DS_DOMAINS dsdom1 on dsdom1.dmndomain='D_NewExtAcctType' and dsdom1.dmndomainval=DPT.cpyacctype left outer join DS_PAYEE_REF dpr on dpr.CPYPAYEEID=DPT.CPYPAYEEID where DPT.CPYPAYEEID=#cpypayeeid:varchar# and 1=1 with UR
getExtAcctMaintenanceViewPrntDtlsLIST.TOColumnMap={CREATEDBY=CREATEDBY,LAST_ACTION=LAST_ACTION,CPYACCNUM=CPYACCNUM,CPYACCNUM1=CPYACCNUM1,CPYACCTYPE=CPYACCTYPE,CPYBANKCODE=CPYBANKCODE,CPYBONAME1=CPYBONAME1,CPYPAYEENAME1=CPYPAYEENAME1,CPYSTATUS=CPYSTATUS,COMMENTS=COMMENTS,ACTIONDATE=ACTIONDATE,life_user_id=life_user_id,key_client=key_client,key_link=key_link}
getExtAcctMaintenanceViewPrntDtlsLIST.OutputType=java.util.ArrayList
getExtAcctMaintenanceViewPrntDtlsLIST.StmtType=PreparedStatement
getExtAcctMaintenanceViewPrntDtlsLIST.NullValCol=COMMENTS

#Modified for the defect id:34366 by Shashi

#getExtAcctMaintenanceViewDetailsLIST_page.Query=select CREATEDBY,LAST_ACTION,CPYACCNUM,CPYACCNUM1,CPYACCTYPE,CPYBANKCODE,CPYBONAME1,CPYPAYEENAME1,CPYSTATUS,COMMENTS,ACTIONDATE,life_user_id,key_client,key_link,count(*) over() total_rows from (select CREATED_MODIFIED_BY_ID as CREATEDBY,DPT.LAST_ACTION,DPT.CPYACCNUM,DPT.CPYACCNUM as CPYACCNUM1,dsdom1.dmndomainvaldesc as CPYACCTYPE,DPT.CPYBANKCODE,bnkref.BNKDES as CPYBONAME1,DPT.CPYPAYEENAME1,case when THIRD_PARTY_IND='Yes' and dsdom.dmndomainvaldesc='Active' then dsdom.dmndomainvaldesc||' (Outbound Only)' else dsdom.dmndomainvaldesc end as CPYSTATUS,DPT.USERCOMMENTS as COMMENTS,TIMESTAMP(DPT.CREATED_MODIFIED_DATE) as ACTIONDATE, DPT.life_user_id, DPT.key_client,DPT.key_link from  DS_PAYEE_REF_LOG DPT left outer join DS_BANK_REF bnkref on bnkref.BNKCODE=DPT.CPYBANKCODE left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS left outer join DS_DOMAINS dsdom1 on dsdom1.dmndomain='D_NewExtAcctType' and dsdom1.dmndomainval=DPT.cpyacctype where DPT.CPYPAYEEID=#cpypayeeid:varchar#  #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only with UR

getExtAcctMaintenanceViewDetailsLIST_page.Query=select CREATEDBY,LAST_ACTION,CPYACCNUM,CPYACCNUM1,CPYACCTYPE,CPYBANKCODE,CPYBONAME1,CPYPAYEENAME1,CPYSTATUS,COMMENTS,ACTIONDATE,life_user_id,key_client,key_link,count(*) over() total_rows from (select  CREATED_MODIFIED_BY_ID as CREATEDBY,DPT.LAST_ACTION,DPT.CPYACCNUM,DPT.CPYACCNUM as CPYACCNUM1,dsdom1.dmndomainvaldesc as CPYACCTYPE,DPT.CPYBANKCODE,bnkref.BNKDES as CPYBONAME1,DPT.CPYPAYEENAME1,case when dpr.THIRD_PARTY_IND='Yes' and dsdom.dmndomainvaldesc='Active' then dsdom.dmndomainvaldesc||' (Outbound Only)' else dsdom.dmndomainvaldesc end as CPYSTATUS,DPT.USERCOMMENTS as COMMENTS,TIMESTAMP(DPT.CREATED_MODIFIED_DATE) as ACTIONDATE, DPT.life_user_id, DPT.key_client,DPT.key_link from  DS_PAYEE_REF_LOG DPT left outer join DS_BANK_REF bnkref on bnkref.BNKCODE=DPT.CPYBANKCODE left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS left outer join DS_DOMAINS dsdom1 on dsdom1.dmndomain='D_NewExtAcctType' and dsdom1.dmndomainval=DPT.cpyacctype left outer join DS_PAYEE_REF dpr on dpr.CPYPAYEEID=DPT.CPYPAYEEID where DPT.CPYPAYEEID=#cpypayeeid:varchar#  #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only with UR
getExtAcctMaintenanceViewDetailsLIST_page.TOColumnMap={CREATEDBY=CREATEDBY,LAST_ACTION=LAST_ACTION,CPYACCNUM=CPYACCNUM,CPYACCNUM1=CPYACCNUM1,CPYACCTYPE=CPYACCTYPE,CPYBANKCODE=CPYBANKCODE,CPYBONAME1=CPYBONAME1,CPYPAYEENAME1=CPYPAYEENAME1,CPYSTATUS=CPYSTATUS,COMMENTS=COMMENTS,ACTIONDATE=ACTIONDATE,life_user_id=life_user_id,key_client=key_client,key_link=key_link,total_rows=total_rows}
getExtAcctMaintenanceViewDetailsLIST_page.OutputType=java.util.ArrayList
getExtAcctMaintenanceViewDetailsLIST.StmtType=PreparedStatement
getExtAcctMaintenanceViewDetailsLIST.PgnUniqueKeys=ACTIONDATE:datetime:ASC
getExtAcctMaintenanceViewDetailsLIST.SortKeys=ACTIONDATE:datetime:ASC
getExtAcctMaintenanceViewDetailsLIST.NullValCol=COMMENTS

getExtAcctRefDtls.Query=select cpyaccnum as extAcctNum,cpybankcode as extRoutingNum,life_user_id as lifeUserId,key_client,key_link from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#
getExtAcctRefDtls.TOColumnMap={extAcctNum=extAcctNum,extRoutingNum=extRoutingNum,lifeUserId=lifeUserId,key_client=key_client,key_link=key_link}
getExtAcctRefDtls.OutputType=com.tcs.ebw.payments.transferobject.ExtAcctDtlsOutTO
getExtAcctRefDtls.StmtType=PreparedStatement

#getExtAcctModifyRefNumber.Query=select versionnum,cpyaccnum,cpyacctype,cpybankcode,cpyboname1,'' as comments,life_user_id,cpystatus,cpypayeename1,52 as fa_id,23 as branch_id,key_client,key_link from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#
#getExtAcctModifyRefNumber.TOColumnMap={versionnum=versionnum,cpyaccnum=cpyaccnum,cpyacctype=cpyacctype,cpybankcode=cpybankcode,cpyboname1=cpyboname1,comments=comments,life_user_id=life_user_id,cpystatus=cpystatus,cpypayeename1=cpypayeename1,fa_id=fa_id,branch_id=branch_id,key_client=key_client,key_link=key_link}
#getExtAcctModifyRefNumber.Query=select dpr.versionnum,dpr.cpyaccnum,dpr.cpyacctype,dsdom.dmndomainvaldesc as cpyacctypedesc,dpr.cpybankcode,dpr.cpyboname1,dpr.life_user_id,dpr.cpystatus,dpr.cpypayeename1,dpr.key_client,dpr.key_link,dpr.sign_up_mode,dpr.account_owner,dpr.account_form,dpr.voided_check from ds_payee_ref dpr left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_NewExtAcctType' and dsdom.dmndomainval=dpr.cpyacctype where cpypayeeid=#cpypayeeid:varchar#
#getExtAcctModifyRefNumber.TOColumnMap={versionnum=versionnum,cpyaccnum=cpyaccnum,cpyacctype=cpyacctype,cpyacctypedesc=cpyacctypedesc,cpybankcode=cpybankcode,cpyboname1=cpyboname1,life_user_id=life_user_id,cpystatus=cpystatus,cpypayeename1=cpypayeename1,key_client=key_client,key_link=key_link,sign_up_mode=sign_up_mode,account_owner=account_owner,account_form=account_form,voided_check=voided_check}
#getExtAcctModifyRefNumber.Query=select versionnum,cpyaccnum,cpyacctype,cpybankcode,cpyboname1,life_user_id,cpystatus,cpypayeename1,key_client,key_link,sign_up_mode,account_owner,account_form,voided_check from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#

getExtAcctModifyRefNumber.Query=select dpr.versionnum,dpr.cpyaccnum,dpr.cpyacctype,dpr.cpybankcode,dsbnk.bnkdes as cpyboname1,dpr.life_user_id,dpr.cpystatus,dpr.cpypayeename1,dpr.key_client,dpr.key_link,dpr.sign_up_mode,dpr.account_owner,dpr.account_form,dpr.voided_check from ds_payee_ref dpr left outer join DS_BANK_REF dsbnk on dsbnk.bnkcode=dpr.CPYBANKCODE where dpr.cpypayeeid=#cpypayeeid:varchar#
getExtAcctModifyRefNumber.TOColumnMap={versionnum=versionnum,cpyaccnum=cpyaccnum,cpyacctype=cpyacctype,cpybankcode=cpybankcode,cpyboname1=cpyboname1,life_user_id=life_user_id,cpystatus=cpystatus,cpypayeename1=cpypayeename1,key_client=key_client,key_link=key_link,sign_up_mode=sign_up_mode,account_owner=account_owner,account_form=account_form,voided_check=voided_check}
getExtAcctModifyRefNumber.OutputType=com.tcs.ebw.payments.transferobject.ExtAcctModifyOutTO
getExtAcctModifyRefNumber.StmtType=PreparedStatement

getExtBankName.Query=select distinct BNKDES,BNKCODE from DS_BANK_REF where bnkcode=#bnkcode:varchar# and deleteflag='N'
getExtBankName.TOColumnMap={bnkdes=bnkdes,bnkcode=bnkcode}
getExtBankName.OutputType=com.tcs.ebw.payments.transferobject.DsBankRefTO[]
getExtBankName.StmtType=PreparedStatement

#checkPayAcctNum.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('31','32','36','34','35') and life_user_id=#life_user_id:varchar#
#checkPayAcctNum.TOColumnMap={count=count}
#checkPayAcctNum.OutputType=java.util.ArrayList

#checkPayExDelAcctNum.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('33','37') and life_user_id=#life_user_id:varchar#
#checkPayExDelAcctNum.TOColumnMap={count=count}
#checkPayExDelAcctNum.OutputType=java.util.ArrayList

#checkBypassAcctNum.Query=select count(*) as count from ds_bypass where accnum=#accnum:varchar# and routingnum=#routingnum:varchar# and cpystatus='32' and life_user_id=#life_user_id:varchar#
#checkBypassAcctNum.TOColumnMap={count=count}
#checkBypassAcctNum.OutputType=java.util.ArrayList

#UpdateBypassAcctNum.Query=update ds_bypass set CPYSTATUS='39' where accnum=#accnum:varchar# and  routingnum=#routingnum:varchar# and CPYSTATUS='32' and life_user_id=#life_user_id:varchar#
#UpdateBypassAcctNum.StmtType=Statement

## Newly added for Modify, because the way for Add account is changed

#checkPayAcctNumModify.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('31','32','36','34','35') and key_client=#key_client:varchar# and key_link=#key_link:varchar#
#checkPayAcctNumModify.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('31','32','36','34','35') and key_client in (#keyClientId:varchar#)

checkPayAcctNumModify.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('31','32','36','34','35') and key_client=#key_client:varchar#
checkPayAcctNumModify.TOColumnMap={count=count}
checkPayAcctNumModify.OutputType=java.util.ArrayList
checkPayAcctNumModify.StmtType=PreparedStatement

#checkPayExDelAcctNumModify.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('33','37') and key_client=#key_client:varchar# and key_link=#key_link:varchar#
#checkPayExDelAcctNumModify.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('33','37') and key_client in (#keyClientId:varchar#)

checkPayExDelAcctNumModify.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#cpyaccnum:varchar# and cpybankcode=#cpybankcode:varchar# and cpystatus in ('33','37') and key_client=#key_client:varchar#
checkPayExDelAcctNumModify.TOColumnMap={count=count}
checkPayExDelAcctNumModify.OutputType=java.util.ArrayList
checkPayExDelAcctNumModify.StmtType=PreparedStatement

#checkBypassAcctNumModify.Query=select count(*) as count from ds_bypass where accnum=#accnum:varchar# and routingnum=#routingnum:varchar# and cpystatus='32' and key_client=#key_client:varchar# and key_link=#key_link:varchar#
#checkBypassAcctNumModify.Query=select count(*) as count from ds_bypass where accnum=#accnum:varchar# and routingnum=#routingnum:varchar# and cpystatus='32' and key_client in (#keyClientId:varchar#)

checkBypassAcctNumModify.Query=select count(*) as count from ds_bypass where accnum=#accnum:varchar# and routingnum=#routingnum:varchar# and cpystatus='32' and key_client=#key_client:varchar#
checkBypassAcctNumModify.TOColumnMap={count=count}
checkBypassAcctNumModify.OutputType=java.util.ArrayList
checkBypassAcctNumModify.StmtType=PreparedStatement

#UpdateBypassAcctNumModify.Query=update ds_bypass set CPYSTATUS='39' where accnum=#accnum:varchar# and  routingnum=#routingnum:varchar# and CPYSTATUS='32' and key_client=#key_client:varchar# and key_link=#key_link:varchar#
#UpdateBypassAcctNumModify.Query=update ds_bypass set CPYSTATUS='39' where accnum=#accnum:varchar# and  routingnum=#routingnum:varchar# and CPYSTATUS='32' and key_client in (#keyClientId:varchar#)

UpdateBypassAcctNumModify.Query=update ds_bypass set CPYSTATUS='39' where accnum=#accnum:varchar# and  routingnum=#routingnum:varchar# and CPYSTATUS='32' and key_client=#key_client:varchar#
UpdateBypassAcctNumModify.StmtType=PreparedStatement

#updateExtAcctMaintDetails.Query=update ds_payee_ref set versionnum=versionnum+1,cpyaccnum=#cpyaccnum:varchar#,cpyacctype=#cpyacctype:varchar#,cpybankcode=#cpybankcode:varchar#,cpyboname1=#cpyboname1:varchar# where cpypayeeid=#cpypayeeid:varchar# and life_user_id=#life_user_id:varchar#
#updateExtAcctMaintDetails.Query=update ds_payee_ref set versionnum=versionnum+1,cpyaccnum=#cpyaccnum:varchar#,cpyacctype=#cpyacctype:varchar#,cpybankcode=#cpybankcode:varchar#,cpyboname1=#cpyboname1:varchar# where cpypayeeid=#cpypayeeid:varchar# and key_client=#key_client:varchar# and key_link=#key_link:varchar#

updateExtAcctMaintDetails.Query=update ds_payee_ref set versionnum=versionnum+1,cpyaccnum=#cpyaccnum:varchar#,cpyacctype=#cpyacctype:varchar#,cpybankcode=#cpybankcode:varchar#,cpyboname1=(select distinct bnkref.BNKDES from DS_BANK_REF bnkref where bnkref.BNKCODE=#cpybankcode:varchar#) where cpypayeeid=#cpypayeeid:varchar# and key_client=#key_client:varchar#
updateExtAcctMaintDetails.StmtType=PreparedStatement

#setExtAcctViewModLogDetails.Query=insert into ds_payee_ref_log(cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,key_client,key_link,ver_trials,cpystatus,deleteflag,usercomments,life_user_id) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,54,27,CURRENT_TIMESTAMP,#created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#key_client:varchar#,#key_link:varchar#,(select versionnum from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#cpystatus:varchar#,'N',#usercomments:varchar#,#life_user_id:varchar#)
#setExtAcctViewModLogDetails.Query=insert into ds_payee_ref_log (cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag,sign_up_mode,key_client,key_link,account_owner,account_form,voided_check,usercomments) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,(select distinct bnkref.BNKDES from DS_BANK_REF bnkref where bnkref.BNKCODE=#cpybankcode:varchar#),#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,#fa_id:numeric#,#branch_id:numeric#,CURRENT_TIMESTAMP,#created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,(select versionnum from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#cpystatus:varchar#,#deleteflag:varchar#,(select sign_up_mode from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#key_client:varchar#,#key_link:varchar#,(select account_owner from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),(select account_form from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),(select voided_check from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#usercomments:varchar#)

setExtAcctViewModLogDetails.Query=insert into ds_payee_ref_log (cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag,sign_up_mode,key_client,key_link,account_owner,account_form,voided_check,usercomments) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,(select distinct bnkref.BNKDES from DS_BANK_REF bnkref where bnkref.BNKCODE=#cpybankcode:varchar#),#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,#fa_id:numeric#,#branch_id:numeric#,CURRENT_TIMESTAMP,#created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,(select versionnum from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#cpystatus:varchar#,#deleteflag:varchar#,#sign_up_mode:varchar#,#key_client:varchar#,#key_link:varchar#,#account_owner:varchar#,#account_form:varchar#,#voided_check:varchar#,#usercomments:varchar#)
setExtAcctViewModLogDetails.StmtType=PreparedStatement

#updateExtAcctDsPayTxnsDetail.Query=update ds_pay_txns set versionnum=versionnum+1,paypayeename1=#nickName:varchar# where PAYPAYEEACCNUM=#cpypayeeid:varchar# and life_user_id=#lifeuserid:varchar#
#updateExtAcctDsPayTxnsDetail.Query=update ds_pay_txns set versionnum=versionnum+1,paypayeename1=#nickName:varchar# where PAYPAYEEACCNUM=#cpypayeeid:varchar# and key_client=#key_client:varchar# and key_link=#key_link:varchar#

updateExtAcctDsPayTxnsDetail.Query=update ds_pay_txns set versionnum=versionnum+1,paypayeename1=#nickName:varchar# where PAYPAYEEACCNUM=#cpypayeeid:varchar#
updateExtAcctDsPayTxnsDetail.StmtType=PreparedStatement

#suspendExtAccBatch.Query=update ds_batch set batversionnum=batversionnum+1,BATSTATUS='46' where batbatchref in (select paybatchref from ds_pay_txns where paypayref=#paypayref:varchar#)

suspendExtAccBatch.Query=update ds_batch set batversionnum=batversionnum+1,BATSTATUS='46' where batbatchref =#paybatchref:varchar#
suspendExtAccBatch.StmtType=PreparedStatement

#suspendExtAccDsPayTxns.Query=update ds_pay_txns set versionnum=versionnum+1,PAYCCSSTATUSCODE='46' where paypayref=#paypayref:varchar# and life_user_id=#life_user_id:varchar#
#suspendExtAccDsPayTxns.Query=update ds_pay_txns set versionnum=versionnum+1,PAYCCSSTATUSCODE='46' where paypayref=#paypayref:varchar#

suspendExtAccDsPayTxns.Query=update ds_pay_txns set versionnum=versionnum+1,payccsstatuscode='46',next_approver_role=#next_approver_role:varchar#,paytxneprydate=#paytxneprydate:timestamp# where paypayref=#paypayref:varchar#
suspendExtAccDsPayTxns.StmtType=PreparedStatement

#suspendExtAccDsPayeeRef.Query=update ds_payee_ref set versionnum=versionnum+1,CPYSTATUS='36' where cpypayeeid=#cpypayeeid:varchar# and life_user_id=#life_user_id:varchar#

suspendExtAccDsPayeeRef.Query=update ds_payee_ref set versionnum=versionnum+1,CPYSTATUS='36' where cpypayeeid=#cpypayeeid:varchar#
suspendExtAccDsPayeeRef.StmtType=PreparedStatement

# Added newly for suspend RTA

#getExtAccDsPayTxnsDetails.Query=select frombr_acct_no_fa,tobr_acct_no_fa,txn_type,acct_user_id,paypymtdate,requested_exe_dt,paydebitamt,paypayref,paybatchref,fromfa_id,frombranch_id,tofa_id,tobranch_id,createdby_name,paydebitaccnum,paypayeeaccnum,keyaccountnumber_from,created_by_role,payccsstatuscode,payrecurring,life_user_id,current_owner_role,par_txn_no,rta_booked_in_flag from ds_pay_txns where paypayeeaccnum=#cpypayeeid:varchar# and payccsstatuscode in('2','6') and trial_depo='N'

getExtAccDsPayTxnsDetails.Query=select frombr_acct_no_fa,tobr_acct_no_fa,txn_type,acct_user_id,paypymtdate,requested_exe_dt,paydebitamt,paypayref,paybatchref,fromfa_id,frombranch_id,tofa_id,tobranch_id,createdby_name,paydebitaccnum,paypayeeaccnum,keyaccountnumber_from,created_by_role,payccsstatuscode,payrecurring,life_user_id,current_owner_role,par_txn_no,rta_booked_in_flag,paytxneprydate,next_approver_role from ds_pay_txns where paypayeeaccnum=#cpypayeeid:varchar# and payccsstatuscode in('2','6','80') and trial_depo='N'
getExtAccDsPayTxnsDetails.TOColumnMap={frombr_acct_no_fa=frombr_acct_no_fa,tobr_acct_no_fa=tobr_acct_no_fa,txn_type=txn_type,acct_user_id=acct_user_id,paypymtdate=paypymtdate,requested_exe_dt=requested_exe_dt,paydebitamt=paydebitamt,paypayref=paypayref,paybatchref=paybatchref,fromfa_id=fromfa_id,frombranch_id=frombranch_id,tofa_id=tofa_id,tobranch_id=tobranch_id,createdby_name=createdby_name,paydebitaccnum=paydebitaccnum,paypayeeaccnum=paypayeeaccnum,keyaccountnumber_from=keyaccountnumber_from,created_by_role=created_by_role,payccsstatuscode=payccsstatuscode,payrecurring=payrecurring,life_user_id=life_user_id,current_owner_role=current_owner_role,par_txn_no=par_txn_no,rta_booked_in_flag=rta_booked_in_flag,paytxneprydate=paytxneprydate,next_approver_role=next_approver_role}
getExtAccDsPayTxnsDetails.OutputType=com.tcs.ebw.payments.transferobject.ExtAcctMaintenanceSusGetConfirmOutTO[]
getExtAccDsPayTxnsDetails.StmtType=PreparedStatement

getExtAccDsPayTxnsUnqDetails.Query=select frombr_acct_no_fa,tobr_acct_no_fa,txn_type,acct_user_id,paypymtdate,requested_exe_dt,paydebitamt,paypayref from ds_pay_txns where paypayref=#paypayref:varchar#
getExtAccDsPayTxnsUnqDetails.TOColumnMap={frombr_acct_no_fa=frombr_acct_no_fa,tobr_acct_no_fa=tobr_acct_no_fa,txn_type=txn_type,acct_user_id=acct_user_id,paypymtdate=paypymtdate,requested_exe_dt=requested_exe_dt,paydebitamt=paydebitamt,paypayref=paypayref}
getExtAccDsPayTxnsUnqDetails.OutputType=com.tcs.ebw.payments.transferobject.ExtAcctMaintSusGetRefConfirmOutTO
getExtAccDsPayTxnsUnqDetails.StmtType=PreparedStatement

setExtAcctSusDsPayTxnsLogDetails.Query=insert into ds_pay_txns_log (trx_log_key,created_modified_by_name,paygroupid,paybatchref,paypayref,debit_acct_no,credit_act_no,fromfa_id,frombranch_id,tofa_id,tobranch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,life_user_id,created_modified_by_comments,last_action,amount,request_date,trial_depo,txn_status) values (next value for dspaytxnslog_seq,#created_modified_by_name:varchar#,#paygroupid:varchar#,#paybatchref:varchar#,#paypayref:varchar#,(select val from configurable_parameter_view  where PRMTR_ID = 852 and BRANCH_CODE = 4) ,#credit_act_no:varchar#,#fromfa_id:numeric#,#frombranch_id:numeric#,#tofa_id:numeric#,#tobranch_id:numeric#,CURRENT_TIMESTAMP,#created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#life_user_id:varchar#,#created_modified_by_comments:varchar#,#last_action:varchar#,#amount:numeric#,CURRENT_TIMESTAMP,#trial_depo:varchar#,'46')
setExtAcctSusDsPayTxnsLogDetails.StmtType=PreparedStatement

getExtAcctLogSusResUnlDetails.Query=select created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,life_user_id,deleteflag from ds_payee_ref_log where created_modified_date= (select max(created_modified_date) from ds_payee_ref_log  where cpypayeeid=#cpypayeeid:varchar#)
getExtAcctLogSusResUnlDetails.TOColumnMap={created_modified_by_id=created_modified_by_id,created_modified_by_emp_id=created_modified_by_emp_id,created_modified_by_role=created_modified_by_role,life_user_id=life_user_id,deleteflag=deleteflag}
getExtAcctLogSusResUnlDetails.OutputType=com.tcs.ebw.payments.transferobject.ExtAcctMaintenanceConfirmOutTO[]
getExtAcctLogSusResUnlDetails.StmtType=PreparedStatement

#setExtAcctSuspendLogDetails.Query=insert into ds_payee_ref_log(cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag,usercomments) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,52,23,CURRENT_TIMESTAMP, #created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,(select versionnum from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),'36','N',#usercomments:varchar#)
#setExtAcctSuspendLogDetails.Query=insert into ds_payee_ref_log(cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,key_client,key_link,ver_trials,cpystatus,deleteflag,usercomments,life_user_id) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,52,23,CURRENT_TIMESTAMP, #created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#key_client:varchar#,#key_link:varchar#,(select versionnum from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),'36','N',#usercomments:varchar#,#life_user_id:varchar#)

#setExtAcctSuspendLogDetails.Query=insert into ds_payee_ref_log (cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag,sign_up_mode,key_client,key_link,account_owner,account_form,voided_check,usercomments) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,#fa_id:numeric#,#branch_id:numeric#,CURRENT_TIMESTAMP,#created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,(select versionnum from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#cpystatus:varchar#,#deleteflag:varchar#,(select sign_up_mode from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#key_client:varchar#,#key_link:varchar#,(select account_owner from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),(select account_form from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),(select voided_check from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#usercomments:varchar#)

setExtAcctSuspendLogDetails.Query=insert into ds_payee_ref_log (cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag,sign_up_mode,key_client,key_link,account_owner,account_form,voided_check,usercomments) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,#fa_id:numeric#,#branch_id:numeric#,CURRENT_TIMESTAMP,#created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,(select versionnum from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#cpystatus:varchar#,#deleteflag:varchar#,#sign_up_mode:varchar#,#key_client:varchar#,#key_link:varchar#,#account_owner:varchar#,#account_form:varchar#,#voided_check:varchar#,#usercomments:varchar#)
setExtAcctSuspendLogDetails.StmtType=PreparedStatement

#getExtAcctSusResUnlValues.Query=select versionnum,cpyboname1,cpyacctype,cpypayeename1,cpybranchscode,cpyaccnum,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as cpyaccnum1,cpybankcode,life_user_id,cpystatus,key_client,key_link from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#
#getExtAcctSusResUnlValues.TOColumnMap={versionnum=versionnum,cpyboname1=cpyboname1,cpyacctype=cpyacctype,cpypayeename1=cpypayeename1,cpybranchscode=cpybranchscode,cpyaccnum=cpyaccnum,cpyaccnum1=cpyaccnum1,cpybankcode=cpybankcode,life_user_id=life_user_id,cpystatus=cpystatus,key_client=key_client,key_link=key_link}
#getExtAcctSusResUnlValues.Query=select versionnum,cpyboname1,cpyacctype,cpypayeename1,cpybranchscode,cpyaccnum,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as cpyaccnum1,cpybankcode,life_user_id,cpystatus,key_client,key_link,sign_up_mode,account_owner,account_form,voided_check from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#

#getExtAcctSusResUnlValues.Query=select dpr.versionnum,dsbnk.bnkdes as cpyboname1,dpr.cpyacctype,dpr.cpypayeename1,dpr.cpybranchscode,dpr.cpyaccnum,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as cpyaccnum1,dpr.cpybankcode,dpr.life_user_id,dpr.cpystatus,dpr.key_client,dpr.key_link,dpr.sign_up_mode,dpr.account_owner,dpr.account_form,dpr.voided_check from ds_payee_ref dpr left outer join DS_BANK_REF dsbnk on dsbnk.bnkcode=dpr.CPYBANKCODE where dpr.cpypayeeid=#cpypayeeid:varchar#
#getExtAcctSusResUnlValues.TOColumnMap={versionnum=versionnum,cpyboname1=cpyboname1,cpyacctype=cpyacctype,cpypayeename1=cpypayeename1,cpybranchscode=cpybranchscode,cpyaccnum=cpyaccnum,cpyaccnum1=cpyaccnum1,cpybankcode=cpybankcode,life_user_id=life_user_id,cpystatus=cpystatus,key_client=key_client,key_link=key_link,sign_up_mode=sign_up_mode,account_owner=account_owner,account_form=account_form,voided_check=voided_check}
#Modified for 3rd Party Resume by nikita
#Modified for FA alert by Malli/Nikita 

#getExtAcctSusResUnlValues.Query=select dpr.versionnum,dsbnk.bnkdes as cpyboname1,dpr.cpyacctype,dpr.cpypayeename1,dpr.cpybranchscode,dpr.cpyaccnum,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as cpyaccnum1,dpr.cpybankcode,dpr.life_user_id,dpr.cpystatus,dpr.key_client,dpr.key_link,dpr.sign_up_mode,dpr.account_owner,dpr.account_form,dpr.voided_check,dpr.third_party_ind,dpr.migrate_ind,dpr.primary_int_acct from ds_payee_ref dpr left outer join DS_BANK_REF dsbnk on dsbnk.bnkcode=dpr.CPYBANKCODE  where dpr.cpypayeeid=#cpypayeeid:varchar# 
#Modified for Resume by Malli/Nikita 
getExtAcctSusResUnlValues.Query=select dpr.versionnum,dsbnk.bnkdes as cpyboname1,dpr.cpyacctype,dpr.cpypayeename1,dpr.cpybranchscode,dpr.cpyaccnum,'XX'||'-'||COALESCE(RIGHT(CPYACCNUM,4), RIGHT(CPYACCNUM,3), RIGHT(CPYACCNUM,2)) as cpyaccnum1,dpr.cpybankcode,dpr.life_user_id,dpr.cpystatus,dpr.key_client,dpr.key_link,dpr.sign_up_mode,dpr.account_owner,dpr.account_form,dpr.voided_check,dpr.third_party_ind,dpr.migrate_ind,dpr.primary_int_acct,actownrdtls.first_name as third_party_name from ds_payee_ref dpr left outer join DS_BANK_REF dsbnk on dsbnk.bnkcode=dpr.CPYBANKCODE left outer join EXT_ACCT_OWNER_DTLS actownrdtls on actownrdtls.CPYPAYEEID=dpr.CPYPAYEEID where dpr.cpypayeeid=#cpypayeeid:varchar# 
getExtAcctSusResUnlValues.TOColumnMap={versionnum=versionnum,cpyboname1=cpyboname1,cpyacctype=cpyacctype,cpypayeename1=cpypayeename1,cpybranchscode=cpybranchscode,cpyaccnum=cpyaccnum,cpyaccnum1=cpyaccnum1,cpybankcode=cpybankcode,life_user_id=life_user_id,cpystatus=cpystatus,key_client=key_client,key_link=key_link,sign_up_mode=sign_up_mode,account_owner=account_owner,account_form=account_form,voided_check=voided_check,third_party_ind=third_party_ind,migrate_ind=migrate_ind,primary_int_acct=primary_int_acct,third_party_name=third_party_name}
getExtAcctSusResUnlValues.OutputType=com.tcs.ebw.payments.transferobject.ExtAcctSusResUnlOutTO
getExtAcctSusResUnlValues.StmtType=PreparedStatement

##Resume Queries

#resumeExtAccDsPayeeRef.Query=update ds_payee_ref set versionnum=versionnum+1,CPYSTATUS='32' where cpypayeeid=#cpypayeeid:varchar# and life_user_id=#life_user_id:varchar# and CPYSTATUS='36'
#resumeExtAccDsPayeeRef.Query=update ds_payee_ref set versionnum=versionnum+1,CPYSTATUS='32' where cpypayeeid=#cpypayeeid:varchar# and CPYSTATUS='36'

#Modified for 3rs Party Resume by nikita
#Modified for Defect Id:34553 by Nikita
resumeExtAccDsPayeeRef.Query=update ds_payee_ref set versionnum=versionnum+1,CPYSTATUS=#statusCode:varchar#,approval_date=#approval_date:timestamp# where cpypayeeid=#cpypayeeid:varchar# and CPYSTATUS='36'
resumeExtAccDsPayeeRef.StmtType=PreparedStatement

getExtAccResDsPayTxnsDetails.Query=select frombr_acct_no_fa,tobr_acct_no_fa,txn_type,acct_user_id,paypymtdate,requested_exe_dt,paydebitamt,paypayref,paybatchref,fromfa_id,frombranch_id,tofa_id,tobranch_id,createdby_name,paydebitaccnum,paypayeeaccnum,keyaccountnumber_from,created_by_role,payccsstatuscode,payrecurring,createddate,next_approver_role,current_owner_role,life_user_id from ds_pay_txns where paypayeeaccnum=#cpypayeeid:varchar# and payccsstatuscode in('46') and (REQUESTED_EXE_DT > CURRENT_TIMESTAMP)
getExtAccResDsPayTxnsDetails.TOColumnMap={frombr_acct_no_fa=frombr_acct_no_fa,tobr_acct_no_fa=tobr_acct_no_fa,txn_type=txn_type,acct_user_id=acct_user_id,paypymtdate=paypymtdate,requested_exe_dt=requested_exe_dt,paydebitamt=paydebitamt,paypayref=paypayref,paybatchref=paybatchref,fromfa_id=fromfa_id,frombranch_id=frombranch_id,tofa_id=tofa_id,tobranch_id=tobranch_id,createdby_name=createdby_name,paydebitaccnum=paydebitaccnum,paypayeeaccnum=paypayeeaccnum,keyaccountnumber_from=keyaccountnumber_from,created_by_role=created_by_role,payccsstatuscode=payccsstatuscode,payrecurring=payrecurring,createddate=createddate,next_approver_role=next_approver_role,current_owner_role=current_owner_role,life_user_id=life_user_id}
getExtAccResDsPayTxnsDetails.OutputType=com.tcs.ebw.payments.transferobject.ExtAcctMaintenanceResGetConfirmOutTO[]
getExtAccResDsPayTxnsDetails.StmtType=PreparedStatement

#resumeExtAccDsPayTxns.Query=update ds_pay_txns set versionnum=versionnum+1,PAYCCSSTATUSCODE='6' where paypayref=#paypayref:varchar# and life_user_id=#life_user_id:varchar# and (REQUESTED_EXE_DT > CURRENT_TIMESTAMP)
#resumeExtAccDsPayTxns.Query=update ds_pay_txns set versionnum=versionnum+1,PAYCCSSTATUSCODE='6' where paypayref=#paypayref:varchar# and (REQUESTED_EXE_DT > CURRENT_TIMESTAMP)

resumeExtAccDsPayTxns.Query=update ds_pay_txns set versionnum=versionnum+1,payccsstatuscode=#statusCode:varchar# where paypayref=#paypayref:varchar# and (REQUESTED_EXE_DT > CURRENT_TIMESTAMP)
resumeExtAccDsPayTxns.StmtType=PreparedStatement

#resumeExtAccBatch.Query=update ds_batch set batversionnum=batversionnum+1,BATSTATUS='6' where batbatchref in (select paybatchref from ds_pay_txns where PAYCCSSTATUSCODE in ('46') and paypayref=#paypayref:varchar# and (REQUESTED_EXE_DT > CURRENT_TIMESTAMP))
#resumeExtAccBatch.Query=update ds_batch set batversionnum=batversionnum+1,batstatus=#statusCode:varchar# where batbatchref in (select paybatchref from ds_pay_txns where PAYCCSSTATUSCODE in ('46') and paypayref=#paypayref:varchar# and (REQUESTED_EXE_DT > CURRENT_TIMESTAMP))

resumeExtAccBatch.Query=update ds_batch set batversionnum=batversionnum+1,batstatus=#statusCode:varchar# where batbatchref =#paybatchref:varchar#
resumeExtAccBatch.StmtType=PreparedStatement

setExtAcctResDsPayTxnsLogDetails.Query=insert into ds_pay_txns_log (trx_log_key,created_modified_by_name,paygroupid,paybatchref,paypayref,debit_acct_no,credit_act_no,fromfa_id,frombranch_id,tofa_id,tobranch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,life_user_id,created_modified_by_comments,last_action,amount,request_date,trial_depo,txn_status) values (next value for dspaytxnslog_seq,#created_modified_by_name:varchar#,#paygroupid:varchar#,#paybatchref:varchar#,#paypayref:varchar#,(select val from configurable_parameter_view  where PRMTR_ID = 852 and BRANCH_CODE = 4) ,#credit_act_no:varchar#,#fromfa_id:numeric#,#frombranch_id:numeric#,#tofa_id:numeric#,#tobranch_id:numeric#,CURRENT_TIMESTAMP,#created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#life_user_id:varchar#,#created_modified_by_comments:varchar#,#last_action:varchar#,#amount:BigDecimal#,CURRENT_TIMESTAMP,#trial_depo:varchar#,#txn_status:varchar#)
setExtAcctResDsPayTxnsLogDetails.StmtType=PreparedStatement

#setExtAcctResDsPayeeRefLogDetails.Query=insert into ds_payee_ref_log(cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag,usercomments) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,52,23,CURRENT_TIMESTAMP, #created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,(select versionnum from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),'32','N',#usercomments:varchar#)
#setExtAcctResDsPayeeRefLogDetails.Query=insert into ds_payee_ref_log(cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,key_client,key_link,ver_trials,cpystatus,deleteflag,usercomments,life_user_id) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,52,23,CURRENT_TIMESTAMP, #created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#key_client:varchar#,#key_link:varchar#,(select versionnum from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),'32','N',#usercomments:varchar#,#life_user_id:varchar#)
#setExtAcctResDsPayeeRefLogDetails.Query=insert into ds_payee_ref_log (cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag,sign_up_mode,key_client,key_link,account_owner,account_form,voided_check,usercomments) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,#fa_id:numeric#,#branch_id:numeric#,CURRENT_TIMESTAMP,#created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,(select versionnum from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#cpystatus:varchar#,#deleteflag:varchar#,(select sign_up_mode from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#key_client:varchar#,#key_link:varchar#,(select account_owner from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),(select account_form from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),(select voided_check from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#usercomments:varchar#)

#Modified for Defect Id:34553 by Nikita
setExtAcctResDsPayeeRefLogDetails.Query=insert into ds_payee_ref_log (cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag,sign_up_mode,key_client,key_link,account_owner,account_form,voided_check,usercomments,approval_date) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,#fa_id:numeric#,#branch_id:numeric#,CURRENT_TIMESTAMP,#created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,(select versionnum from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#cpystatus:varchar#,#deleteflag:varchar#,#sign_up_mode:varchar#,#key_client:varchar#,#key_link:varchar#,#account_owner:varchar#,#account_form:varchar#,#voided_check:varchar#,#usercomments:varchar#,#approval_date:timestamp#)
setExtAcctResDsPayeeRefLogDetails.StmtType=PreparedStatement

#Unlock Queries.

getExtAcctMaxAttmpsPrmtr.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=710
getExtAcctMaxAttmpsPrmtr.TOColumnMap={VAL=VAL}
getExtAcctMaxAttmpsPrmtr.OutputType=java.util.ArrayList
getExtAcctMaxAttmpsPrmtr.StmtType=PreparedStatement

#getExtAcctCombCount.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#extAcctNum:varchar# and cpybankcode=#extRoutingNum:varchar# and life_user_id=#lifeUserId:varchar#
#getExtAcctCombCount.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#extAcctNum:varchar# and cpybankcode=#extRoutingNum:varchar# and key_client=#key_client:varchar# and key_link=#key_link:varchar#
#getExtAcctCombCount.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#extAcctNum:varchar# and cpybankcode=#extRoutingNum:varchar# and key_client in (#keyClientId:varchar#)

getExtAcctCombCount.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#extAcctNum:varchar# and cpybankcode=#extRoutingNum:varchar# and key_client=#key_client:varchar#
getExtAcctCombCount.TOColumnMap={count=count}
getExtAcctCombCount.OutputType=java.util.ArrayList
getExtAcctCombCount.StmtType=PreparedStatement

#checkCOEBypassAcctNum.Query=select count(*) as count from ds_bypass where accnum=#extAcctNum:varchar# and routingnum=#extRoutingNum:varchar# and cpystatus='32' and life_user_id=#lifeUserId:varchar#
#checkCOEBypassAcctNum.Query=select count(*) as count from ds_bypass where accnum=#extAcctNum:varchar# and routingnum=#extRoutingNum:varchar# and cpystatus='32' and key_client=#key_client:varchar# and key_link=#key_link:varchar#
#checkCOEBypassAcctNum.Query=select count(*) as count from ds_bypass where accnum=#extAcctNum:varchar# and routingnum=#extRoutingNum:varchar# and cpystatus='32' and key_client in (#keyClientId:varchar#)

checkCOEBypassAcctNum.Query=select count(*) as count from ds_bypass where accnum=#extAcctNum:varchar# and routingnum=#extRoutingNum:varchar# and cpystatus='32' and key_client=#key_client:varchar#
checkCOEBypassAcctNum.TOColumnMap={count=count}
checkCOEBypassAcctNum.OutputType=java.util.ArrayList
checkCOEBypassAcctNum.StmtType=PreparedStatement

#checkCOEPayeeRefAcctNum.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#extAcctNum:varchar# and cpybankcode=#extRoutingNum:varchar# and cpystatus in ('31','32','36','34','35') and life_user_id=#lifeUserId:varchar#
#checkCOEPayeeRefAcctNum.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#extAcctNum:varchar# and cpybankcode=#extRoutingNum:varchar# and cpystatus in ('31','32','36','34','35') and key_client=#key_client:varchar# and key_link=#key_link:varchar#
#checkCOEPayeeRefAcctNum.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#extAcctNum:varchar# and cpybankcode=#extRoutingNum:varchar# and cpystatus in ('31','32','36','34','35') and key_client in (#keyClientId:varchar#)

checkCOEPayeeRefAcctNum.Query=select count(*) as count from ds_payee_ref where cpyaccnum=#extAcctNum:varchar# and cpybankcode=#extRoutingNum:varchar# and cpystatus in ('31','32','36','34','35') and key_client=#key_client:varchar#
checkCOEPayeeRefAcctNum.TOColumnMap={count=count}
checkCOEPayeeRefAcctNum.OutputType=java.util.ArrayList
checkCOEPayeeRefAcctNum.StmtType=PreparedStatement

setUnlockDsBypass.Query=Insert into ds_bypass(routingnum,accnum,key_client,key_link,refid,cpystatus,life_user_id) values (#routingnum:varchar#,#accnum:varchar#,#key_client:varchar#,#key_link:varchar#,#refid:varchar#,#cpystatus:varchar#,#life_user_id:varchar#)
setUnlockDsBypass.StmtType=PreparedStatement

checkExtAcctBypassCount.Query=select count(*) as count from ds_bypass where routingnum=#routingnum:varchar# and accnum=#accnum:varchar# and key_client=#key_client:varchar# and cpystatus='39'
checkExtAcctBypassCount.TOColumnMap={count=count}
checkExtAcctBypassCount.OutputType=java.util.ArrayList
checkExtAcctBypassCount.StmtType=PreparedStatement

updateBypassActvStat.Query=update ds_bypass set CPYSTATUS='32' where accnum=#accnum:varchar# and  routingnum=#routingnum:varchar# and CPYSTATUS='39' and key_client=#key_client:varchar#
updateBypassActvStat.StmtType=PreparedStatement

#setExtAcctUnlockDsPayeeRefLogDetails.Query=insert into ds_payee_ref_log(cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,key_client,key_link,ver_trials,cpystatus,deleteflag,usercomments,life_user_id) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,52,23,CURRENT_TIMESTAMP, #created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#key_client:varchar#,#key_link:varchar#,#ver_trials:numeric#,#cpystatus:varchar#,'N',#usercomments:varchar#,#life_user_id:varchar#)
#setExtAcctUnlockDsPayeeRefLogDetails.StmtType=PreparedStatement

setExtAcctUnlockLogDetails.Query=insert into ds_payee_ref_log (cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag,sign_up_mode,key_client,key_link,account_owner,account_form,voided_check,usercomments) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,#cpyboname1:varchar#,#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,#fa_id:numeric#,#branch_id:numeric#,CURRENT_TIMESTAMP,#created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,(select versionnum from ds_payee_ref where cpypayeeid=#cpypayeeid:varchar#),#cpystatus:varchar#,#deleteflag:varchar#,#sign_up_mode:varchar#,#key_client:varchar#,#key_link:varchar#,#account_owner:varchar#,#account_form:varchar#,#voided_check:varchar#,#usercomments:varchar#)
setExtAcctUnlockLogDetails.StmtType=PreparedStatement

## External Acct Maintenance Ends

#********** TRAIL DEPOSIT ******************

#getTrialDepositLIST_page.Query= select versionnum,PAYPAYREF,CREATEDBY,ACCT_TO_TYPE,PAYPYMTDATE,PAYDEBITACCNUM,PAYPAYEEID,status,ACTION,count(*) over() total_rows from (select versionnum,CAST(PAYPAYREF as  BIGINT) as PAYPAYREF,CREATEDBY_NAME as CREATEDBY,'Trial Deposit' as ACCT_TO_TYPE,date(PAYPYMTDATE) as PAYPYMTDATE,COALESCE(FROMBR_ACCT_NO_FA,PAYPAYEEID) as PAYDEBITACCNUM,COALESCE(TOBR_ACCT_NO_FA,PAYPAYEEID) as PAYPAYEEID,(select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status,'View' as ACTION from DS_PAY_TXNS DPT where DATE(PAYPYMTDATE) = #businessDate:date# and payccsstatuscode in ('4','48','31') and acct_to_type='ACH-OUT' and trial_depo='Y'  #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with UR

#Modified for defect id:37242 by 350036
getTrialDepositLIST_page.Query= select versionnum,PAYPAYREF,CREATEDBY,ACCT_TO_TYPE,PAYPYMTDATE,PAYDEBITACCNUM,PAYPAYEEID,status,ACTION,count(*) over() total_rows from (select versionnum,CAST(PAYPAYREF as  BIGINT) as PAYPAYREF,CREATEDBY_NAME as CREATEDBY,'Trial Deposits' as ACCT_TO_TYPE,date(PAYPYMTDATE) as PAYPYMTDATE,COALESCE(FROMBR_ACCT_NO_FA,PAYPAYEEID) as PAYDEBITACCNUM,COALESCE(TOBR_ACCT_NO_FA,PAYPAYEEID) as PAYPAYEEID,dsdom.dmndomainvaldesc as status,'View' as ACTION from DS_PAY_TXNS DPT left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.payccsstatuscode where DATE(PAYPYMTDATE) = #businessDate:date# and payccsstatuscode in ('4','48','31') and acct_to_type='ACH-OUT' and trial_depo='Y'  #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with UR
getTrialDepositLIST_page.TOColumnMap={versionnum=versionnum,PAYPAYREF=PAYPAYREF,CREATEDBY=CREATEDBY,ACCT_TO_TYPE=ACCT_TO_TYPE,PAYPYMTDATE=PAYPYMTDATE,PAYDEBITACCNUM=PAYDEBITACCNUM,PAYPAYEEID=PAYPAYEEID,STATUS=STATUS,ACTION=ACTION,total_rows=total_rows}
getTrialDepositLIST_page.OutputType=java.util.ArrayList
getTrialDepositLIST.StmtType=PreparedStatement
getTrialDepositLIST.PgnUniqueKeys=PAYPYMTDATE:date:ASC#PAYPAYREF:numeric:ASC
getTrialDepositLIST.SortKeys=PAYPYMTDATE:date:ASC#PAYPAYREF:numeric:ASC

#getTrialDepositSearchLIST_page.Query= select versionnum,PAYPAYREF,CREATEDBY,ACCT_TO_TYPE,PAYPYMTDATE,PAYDEBITACCNUM,PAYPAYEEID,status,ACTION,count(*) over() total_rows from (select versionnum,CAST(PAYPAYREF as  BIGINT) as PAYPAYREF,CREATEDBY_NAME CREATEDBY,'Trial Deposit' as ACCT_TO_TYPE,date(PAYPYMTDATE) as PAYPYMTDATE,COALESCE(FROMBR_ACCT_NO_FA,PAYPAYEEID) as PAYDEBITACCNUM,COALESCE(TOBR_ACCT_NO_FA,PAYPAYEEID) as PAYPAYEEID,(select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_StatusCode' and dmndomainval=payccsstatuscode) as status,'View' as ACTION from  DS_PAY_TXNS DPT where DATE(PAYPYMTDATE) BETWEEN (#startDate:date#) and (#endDate:date#) and PAYPAYREF like #confirmationNo:varchar# and paypayeeid like #extAccount:varchar# and payccsstatuscode like #status:varchar# and payccsstatuscode in ('4','48','31') and UPPER(CREATEDBY_NAME) like #initiatorName:varchar# and ACCT_TO_TYPE like #acct_to_type:varchar# and acct_to_type='ACH-OUT' and trial_depo='Y' #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with UR

#Modified for defect id:37242 by 350036
getTrialDepositSearchLIST_page.Query= select versionnum,PAYPAYREF,CREATEDBY,ACCT_TO_TYPE,PAYPYMTDATE,PAYDEBITACCNUM,PAYPAYEEID,status,ACTION,count(*) over() total_rows from (select versionnum,CAST(PAYPAYREF as  BIGINT) as PAYPAYREF,CREATEDBY_NAME CREATEDBY,'Trial Deposits' as ACCT_TO_TYPE,date(PAYPYMTDATE) as PAYPYMTDATE,COALESCE(FROMBR_ACCT_NO_FA,PAYPAYEEID) as PAYDEBITACCNUM,COALESCE(TOBR_ACCT_NO_FA,PAYPAYEEID) as PAYPAYEEID,dsdom.dmndomainvaldesc as status,'View' as ACTION from  DS_PAY_TXNS DPT left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.payccsstatuscode where DATE(PAYPYMTDATE) BETWEEN (#startDate:date#) and (#endDate:date#) and PAYPAYREF like #confirmationNo:varchar# and paypayeeid like #extAccount:varchar# and payccsstatuscode like #status:varchar# and payccsstatuscode in ('4','48','31') and UPPER(CREATEDBY_NAME) like #initiatorName:varchar# and ACCT_TO_TYPE like #acct_to_type:varchar# and acct_to_type='ACH-OUT' and trial_depo='Y' #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with UR
getTrialDepositSearchLIST_page.TOColumnMap={versionnum=versionnum,PAYPAYREF=PAYPAYREF,CREATEDBY=CREATEDBY,ACCT_TO_TYPE=ACCT_TO_TYPE,PAYPYMTDATE=PAYPYMTDATE,PAYDEBITACCNUM=PAYDEBITACCNUM,PAYPAYEEID=PAYPAYEEID,STATUS=STATUS,ACTION=ACTION,total_rows=total_rows}
getTrialDepositSearchLIST_page.OutputType=java.util.ArrayList
getTrialDepositSearchLIST.StmtType=PreparedStatement
getTrialDepositSearchLIST.PgnUniqueKeys=PAYPYMTDATE:Date:ASC#PAYPAYREF:numeric:ASC
getTrialDepositSearchLIST.SortKeys=PAYPYMTDATE:Date:ASC#PAYPAYREF:numeric:ASC

getTrialDepositStatusValues.Query=select dmndomainval,dmndomainvaldesc from  ds_domains where dmndomain='D_COEStatusCode' and dmndomainval in ('4','48','31')
getTrialDepositStatusValues.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getTrialDepositStatusValues.OutputType=java.util.Vector
getTrialDepositStatusValues.StmtType=PreparedStatement

# TrialDetails Starts

#getTrialPayTxnsDetails.Query=select PAYPAYREF as confirmationNo,(SELECT dmndomainvaldesc FROM DS_DOMAINS where dmndomain='D_TxnType' and dmndomainval=DPT.TXN_TYPE) as trxnType ,PAYDEBITAMT as trxnAmount,CASE WHEN (SELECT dmndomainvaldesc FROM DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=DPT.PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc FROM DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=DPT.PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc FROM DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=DPT.PAYFREQUENCY),'') || ')' END AS frequencyType,PAYDEBITACCNUM as accNoFromAcc, PAYPAYEEACCNUM as accNoToAcc, FROMFA_ID as faIdFromAcc,TOFA_ID as faIdToAcc,KEYACCOUNTNUMBER_FROM as keyAccNoFromAcc,KEYACCOUNTNUMBER_TO as keyAccNoToAcc, COALESCE(FROMBR_ACCT_NO_FA,PAYPAYEEID) as  officeAccNoFromAcc, COALESCE(TOBR_ACCT_NO_FA,PAYPAYEEID) as officeAccNoToAcc, ACCT_FROM_TYPE as accTypeFromAcc, ACCT_TO_TYPE as accTypeToAcc,FROMACCT_TIER as accTierFromAcc,TOACCT_TIER as accTierToAcc, (select CPYBONAME1 FROM ds_payee_ref where CPYPAYEEID = DPT.PAYPAYEEACCNUM ) as accHeldAtToAcc, (select CPYBANKCODE FROM ds_payee_ref where CPYPAYEEID = DPT.PAYPAYEEACCNUM ) as routingNoToAcc,(select dmndomainvaldesc FROM  DS_DOMAINS where dmndomain='D_COEStatusCode' and dmndomainval=DPT.payccsstatuscode) as status from  DS_PAY_TXNS DPT where paypayref like #paypayref:varchar#

getTrialPayTxnsDetails.Query=select PAYPAYREF as confirmationNo,'' as trxnType,PAYDEBITAMT as trxnAmount,CASE WHEN (SELECT dmndomainvaldesc FROM DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=DPT.PAYRECURRING)='OneTime' THEN 'One Time' ELSE (select dmndomainvaldesc FROM DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=DPT.PAYRECURRING)|| ' (' || COALESCE((select dmndomainvaldesc FROM DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=DPT.PAYFREQUENCY),'') || ')' END AS frequencyType,PAYDEBITACCNUM as accNoFromAcc, PAYPAYEEACCNUM as accNoToAcc, FROMFA_ID as faIdFromAcc,TOFA_ID as faIdToAcc,KEYACCOUNTNUMBER_FROM as keyAccNoFromAcc,KEYACCOUNTNUMBER_TO as keyAccNoToAcc, COALESCE(FROMBR_ACCT_NO_FA,PAYPAYEEID) as  officeAccNoFromAcc, COALESCE(TOBR_ACCT_NO_FA,PAYPAYEEID) as officeAccNoToAcc, ACCT_FROM_TYPE as accTypeFromAcc, ACCT_TO_TYPE as accTypeToAcc,FROMACCT_TIER as accTierFromAcc,TOACCT_TIER as accTierToAcc,payref.CPYBONAME1 as accHeldAtToAcc, payref.CPYBANKCODE as routingNoToAcc,dsdom.dmndomainvaldesc as status from  DS_PAY_TXNS DPT left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_COEStatusCode' and dsdom.dmndomainval=DPT.payccsstatuscode left outer join DS_PAYEE_REF payref on CPYPAYEEID = DPT.PAYPAYEEACCNUM where paypayref like #paypayref:varchar# and 1=1 with UR
getTrialPayTxnsDetails.TOColumnMap={confirmationNo=confirmationNo,trxnType=trxnType,trxnAmount=trxnAmount,frequencyType=frequencyType,accNoFromAcc=accNoFromAcc, accNoToAcc=accNoToAcc, faIdFromAcc=faIdFromAcc, faIdToAcc=faIdToAcc, keyAccNoFromAcc=keyAccNoFromAcc, keyAccNoToAcc=keyAccNoToAcc, officeAccNoFromAcc=officeAccNoFromAcc, officeAccNoToAcc=officeAccNoToAcc,accTypeFromAcc=accTypeFromAcc,accTypeToAcc=accTypeToAcc, accTierFromAcc=accTierFromAcc,accTierToAcc=accTierToAcc,accHeldAtToAcc=accHeldAtToAcc, routingNoToAcc=routingNoToAcc,status=status}
getTrialPayTxnsDetails.StmtType=PreparedStatement
getTrialPayTxnsDetails.OutputType=com.tcs.ebw.payments.transferobject.TrialDetailsOutputTO

getTrialReasonCodeDetails.Query=select DATE(DATE_OF_INSERTION) as REASONCODEDATE,REPLACE(CHAR(TIME(DATE_OF_INSERTION)),'.',':') as REASONCODETIME,ERRORMSG as REASONCODEDESC from BR_VALIDATION_LOG where BO_KEY='No'  order by REASONCODEDATE desc, REASONCODETIME desc
getTrialReasonCodeDetails.TOColumnMap={REASONCODEDATE=REASONCODEDATE,REASONCODETIME=REASONCODETIME,REASONCODEDESC=REASONCODEDESC}
getTrialReasonCodeDetails.OutputType=java.util.ArrayList
getTrialReasonCodeDetails.SortKeys=REASONCODEDATE:Date:DESC#REASONCODETIME:varchar:DESC
getTrialReasonCodeDetails.StmtType=PreparedStatement

getTrialActionTableDetails.Query=select CREATED_MODIFIED_BY_ROLE as DEPT,LAST_ACTION as ACTION,CREATED_MODIFIED_BY_ID as LOGINID,CREATED_MODIFIED_BY_NAME as USERNAME, CREATED_MODIFIED_DATE as ACTIONDATE,CREATED_MODIFIED_BY_COMMENTS as COMMENTS from  ds_pay_txns_log where paypayref like #paypayref:varchar# and 1=1 order by ACTIONDATE with UR
getTrialActionTableDetails.TOColumnMap={DEPT=DEPT,ACTION=ACTION,LOGINID=LOGINID,USERNAME=USERNAME,ACTIONDATE=ACTIONDATE,COMMENTS=COMMENTS}
getTrialActionTableDetails.OutputType=java.util.ArrayList
getTrialActionTableDetails.StmtType=PreparedStatement

# TrialDetails Ends

#********** Chase Reject Starts ******************

#15Apr2010#getChaseRejectsLIST_page.Query=select RJCT_SQNC_NUM,FILE_CREATION_DATE,CO_NAME,DESCR,RECORDTYPE,DESCR_DATE,ENTRY_TRACE_NUM,CUSTOMER_NAME,ORGNL_TXN_NUM,TXN_CODE,ORGNL_TXN_AMT,ABA_NUM,CK,EXT_ACC_NUM,ADDENDA_TRACE_NUM,ORGNL_TXN_DT,UPPLOAD_DATE,RSN_CODE,INFO,RECORD_STAT,CONFIRMATION_NUM,ACTION,count(*) over() total_rows FROM (select RJCT_SQNC_NUM,FILE_CREATION_DATE,CO_NAME,DESCR,REJ_NOC_INDICATOR as RECORDTYPE,DESCR_DATE,ENTRY_TRACE_NUM,CUSTOMER_NAME,VARCHAR(LTRIM(ORGNL_TXN_NUM),9) as ORGNL_TXN_NUM,TXN_CODE,ORGNL_TXN_AMT,ABA_NUM,ABA_NUM as CK,EXT_ACC_NUM,ORGNL_TXN_NUM as ADDENDA_TRACE_NUM,ORGNL_TXN_DT, UPPLOAD_DATE, RSN_CODE,INFO,RECORD_STAT,CONFIRMATION_NUM,' ' as ACTION FROM PFT_INCOMING_REJECT_FILE PIRF where DATE(FILE_CREATION_DATE) = #businessDate:date# #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only

#getChaseRejectsLIST_page.Query=select RJCT_SQNC_NUM,FILE_CREATION_DATE,CO_NAME,DESCR,RECORDTYPE,DESCR_DATE,ENTRY_TRACE_NUM,CUSTOMER_NAME,ORGNL_TXN_NUM,TXN_CODE,ORGNL_TXN_AMT,ABA_NUM,CK,EXT_ACC_NUM,ADDENDA_TRACE_NUM,ORGNL_TXN_DT,UPPLOAD_DATE,RSN_CODE,INFO,RECORD_STAT,CONFIRMATION_NUM,ACTION,count(*) over() total_rows FROM (select RJCT_SQNC_NUM,FILE_CREATION_DATE,CO_NAME,DESCR,REJ_NOC_INDICATOR as RECORDTYPE,DATE(DESCR_DATE) AS DESCR_DATE,ENTRY_TRACE_NUM,CUSTOMER_NAME,VARCHAR(LTRIM(ORGNL_TXN_NUM),9) as ORGNL_TXN_NUM,TXN_CODE,ORGNL_TXN_AMT,ABA_NUM,ABA_NUM as CK,EXT_ACC_NUM,ORGNL_TXN_NUM as ADDENDA_TRACE_NUM,DATE(ORGNL_TXN_DT) AS ORGNL_TXN_DT, DATE(FILE_CREATION_DATE) AS UPPLOAD_DATE, RSN_CODE,INFO,RECORD_STAT,CONFIRMATION_NUM,' ' as ACTION FROM PFT_INCOMING_REJECT_FILE PIRF where DATE(FILE_CREATION_DATE) = #businessDate:date# #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only

getChaseRejectsLIST_page.Query=select RJCT_SQNC_NUM,FILE_CREATION_DATE,CO_NAME,DESCR,RECORDTYPE,DESCR_DATE,ENTRY_TRACE_NUM,CUSTOMER_NAME,ORGNL_TXN_NUM,TXN_CODE,ORGNL_TXN_AMT,ABA_NUM,CK,EXT_ACC_NUM,ADDENDA_TRACE_NUM,ORGNL_TXN_DT,UPPLOAD_DATE,RSN_CODE,INFO,RECORD_STAT,CONFIRMATION_NUM,ACTION,count(*) over() total_rows FROM (select RJCT_SQNC_NUM,FILE_CREATION_DATE,CO_NAME,DESCR,REJ_NOC_INDICATOR as RECORDTYPE,DATE(DESCR_DATE) AS DESCR_DATE,ENTRY_TRACE_NUM,CUSTOMER_NAME,VARCHAR(LTRIM(ORGNL_TXN_NUM),9) as ORGNL_TXN_NUM,TXN_CODE,CASE when ORGNL_TXN_AMT < 0.000001 then 0.000001 else ORGNL_TXN_AMT end as ORGNL_TXN_AMT,ABA_NUM,ABA_NUM as CK,EXT_ACC_NUM,ORGNL_TXN_NUM as ADDENDA_TRACE_NUM,DATE(ORGNL_TXN_DT) AS ORGNL_TXN_DT, DATE(FILE_CREATION_DATE) AS UPPLOAD_DATE, RSN_CODE,INFO,RECORD_STAT,CONFIRMATION_NUM,' ' as ACTION FROM PFT_INCOMING_REJECT_FILE PIRF where DATE(FILE_CREATION_DATE) = #businessDate:date# #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only
getChaseRejectsLIST_page.TOColumnMap={RJCT_SQNC_NUM=RJCT_SQNC_NUM,FILE_CREATION_DATE=FILE_CREATION_DATE,CO_NAME=CO_NAME,DESCR=DESCR,RECORDTYPE=RECORDTYPE,DESCR_DATE=DESCR_DATE,ENTRY_TRACE_NUM=ENTRY_TRACE_NUM,CUSTOMER_NAME=CUSTOMER_NAME,ORGNL_TXN_NUM=ORGNL_TXN_NUM,TXN_CODE=TXN_CODE,ORGNL_TXN_AMT=ORGNL_TXN_AMT,ABA_NUM=ABA_NUM,CK=CK,EXT_ACC_NUM=EXT_ACC_NUM,ADDENDA_TRACE_NUM=ADDENDA_TRACE_NUM,ORGNL_TXN_DT=ORGNL_TXN_DT,UPPLOAD_DATE=UPPLOAD_DATE,RSN_CODE=RSN_CODE,INFO=INFO,RECORD_STAT=RECORD_STAT,CONFIRMATION_NUM=CONFIRMATION_NUM,ACTION=ACTION,total_rows=total_rows}
getChaseRejectsLIST_page.OutputType=java.util.ArrayList
getChaseRejectsLIST.StmtType=Statement
getChaseRejectsLIST.PgnUniqueKeys=RJCT_SQNC_NUM:numeric:ASC
getChaseRejectsLIST.SortKeys=RJCT_SQNC_NUM:numeric:ASC
getChaseRejectsLIST.NullValCol=ORGNL_TXN_DT#UPPLOAD_DATE#CONFIRMATION_NUM#CK

#15Apr2010#getChaseRejectsSearchLIST_page.Query=select RJCT_SQNC_NUM,FILE_CREATION_DATE,CO_NAME,DESCR,RECORDTYPE,DESCR_DATE,ENTRY_TRACE_NUM,CUSTOMER_NAME,ORGNL_TXN_NUM,TXN_CODE,ORGNL_TXN_AMT,ABA_NUM,CK,EXT_ACC_NUM,ADDENDA_TRACE_NUM,ORGNL_TXN_DT,UPPLOAD_DATE,RSN_CODE,INFO,RECORD_STAT,CONFIRMATION_NUM,ACTION,count(*) over() total_rows FROM (select RJCT_SQNC_NUM,FILE_CREATION_DATE,CO_NAME,DESCR,REJ_NOC_INDICATOR as RECORDTYPE,DESCR_DATE,CAST(ENTRY_TRACE_NUM AS BIGINT) as ENTRY_TRACE_NUM,CUSTOMER_NAME,VARCHAR(LTRIM(ORGNL_TXN_NUM),9) as ORGNL_TXN_NUM,TXN_CODE,ORGNL_TXN_AMT,CAST(ABA_NUM AS BIGINT) as ABA_NUM,CAST(ABA_NUM AS BIGINT) as CK, CAST(EXT_ACC_NUM AS BIGINT) as EXT_ACC_NUM, ORGNL_TXN_NUM as ADDENDA_TRACE_NUM, ORGNL_TXN_DT,FILE_CREATION_DATE as UPPLOAD_DATE, CAST(RSN_CODE AS BIGINT) as RSN_CODE, INFO, RECORD_STAT, CONFIRMATION_NUM,' ' as ACTION FROM PFT_INCOMING_REJECT_FILE PIRF where rsn_code = #returnCode:numeric# and rej_noc_indicator = #recordTypeRC:varchar# and rej_noc_indicator = #recordType:varchar# and record_stat = #status:numeric# and confirmation_num like #origTxnConfNo:varchar# and UPPER(customer_name) like #customerName:varchar# and orgnl_txn_amt = #trxnAmount:numeric# and entry_trace_num = #chaseTraceNo:numeric# and varchar(ltrim(ORGNL_TXN_NUM),9) = #customerId:varchar# and ORGNL_TXN_NUM = #origTraceNo:varchar# and date(orgnl_txn_dt)=#origTxnExeDate:date# and date(FILE_CREATION_DATE)=#effEntryDate:date# and UPPER(info) like #returnReason:varchar# #sortlogic:varchar#) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
######getChaseRejectsSearchLIST_page.Query=select RJCT_SQNC_NUM,FILE_CREATION_DATE,CO_NAME,DESCR,RECORDTYPE,DESCR_DATE,ENTRY_TRACE_NUM,CUSTOMER_NAME,ORGNL_TXN_NUM,TXN_CODE,ORGNL_TXN_AMT,ABA_NUM,CK,EXT_ACC_NUM,ADDENDA_TRACE_NUM,ORGNL_TXN_DT,UPPLOAD_DATE,RSN_CODE,INFO,RECORD_STAT,CONFIRMATION_NUM,ACTION,count(*) over() total_rows FROM (select RJCT_SQNC_NUM,FILE_CREATION_DATE,CO_NAME,DESCR,REJ_NOC_INDICATOR as RECORDTYPE,DATE(DESCR_DATE) AS DESCR_DATE,CAST(ENTRY_TRACE_NUM AS BIGINT) as ENTRY_TRACE_NUM,CUSTOMER_NAME,VARCHAR(LTRIM(ORGNL_TXN_NUM),9) as ORGNL_TXN_NUM,TXN_CODE,ORGNL_TXN_AMT,CAST(ABA_NUM AS BIGINT) as ABA_NUM,CAST(ABA_NUM AS BIGINT) as CK, CAST(EXT_ACC_NUM AS BIGINT) as EXT_ACC_NUM, ORGNL_TXN_NUM as ADDENDA_TRACE_NUM, DATE(ORGNL_TXN_DT) AS ORGNL_TXN_DT,DATE(FILE_CREATION_DATE) AS UPPLOAD_DATE, CAST(RSN_CODE AS BIGINT) as RSN_CODE, INFO, RECORD_STAT, CONFIRMATION_NUM,' ' as ACTION FROM PFT_INCOMING_REJECT_FILE PIRF where rsn_code = #returnCode:numeric# and rej_noc_indicator = #recordTypeRC:varchar# and rej_noc_indicator = #recordType:varchar# and record_stat = #status:numeric# and confirmation_num like #origTxnConfNo:varchar# and UPPER(customer_name) like #customerName:varchar# and orgnl_txn_amt = #trxnAmount:numeric# and entry_trace_num = #chaseTraceNo:numeric# and varchar(ltrim(ORGNL_TXN_NUM),9) = #customerId:varchar# and ORGNL_TXN_NUM = #origTraceNo:varchar# and date(orgnl_txn_dt)=#origTxnExeDate:date# and date(FILE_CREATION_DATE)=#effEntryDate:date# and UPPER(info) like #returnReason:varchar# #sortlogic:varchar#) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
#getChaseRejectsSearchLIST_page.Query=select RJCT_SQNC_NUM,FILE_CREATION_DATE,CO_NAME,DESCR,RECORDTYPE,DESCR_DATE,ENTRY_TRACE_NUM,CUSTOMER_NAME,ORGNL_TXN_NUM,TXN_CODE,ORGNL_TXN_AMT,ABA_NUM,CK,EXT_ACC_NUM,ADDENDA_TRACE_NUM,ORGNL_TXN_DT,UPPLOAD_DATE,RSN_CODE,INFO,RECORD_STAT,CONFIRMATION_NUM,ACTION,count(*) over() total_rows FROM (select RJCT_SQNC_NUM,FILE_CREATION_DATE,CO_NAME,DESCR,REJ_NOC_INDICATOR as RECORDTYPE,DATE(DESCR_DATE) AS DESCR_DATE,ENTRY_TRACE_NUM as ENTRY_TRACE_NUM,CUSTOMER_NAME,VARCHAR(LTRIM(ORGNL_TXN_NUM),9) as ORGNL_TXN_NUM,TXN_CODE,ORGNL_TXN_AMT,ABA_NUM as ABA_NUM,ABA_NUM as CK, EXT_ACC_NUM as EXT_ACC_NUM, ORGNL_TXN_NUM as ADDENDA_TRACE_NUM, DATE(ORGNL_TXN_DT) AS ORGNL_TXN_DT,DATE(FILE_CREATION_DATE) AS UPPLOAD_DATE, RSN_CODE as RSN_CODE, INFO, RECORD_STAT, CONFIRMATION_NUM,' ' as ACTION FROM PFT_INCOMING_REJECT_FILE PIRF where rsn_code = #returnCode:numeric# and rej_noc_indicator = #recordTypeRC:varchar# and rej_noc_indicator = #recordType:varchar# and record_stat = #status:numeric# and confirmation_num like #origTxnConfNo:varchar# and UPPER(customer_name) like #customerName:varchar# and orgnl_txn_amt = #trxnAmount:numeric# and entry_trace_num = #chaseTraceNo:numeric# and varchar(ltrim(ORGNL_TXN_NUM),9) = #customerId:varchar# and ORGNL_TXN_NUM = #origTraceNo:varchar# and date(orgnl_txn_dt)=#origTxnExeDate:date# and date(FILE_CREATION_DATE)=#effEntryDate:date# and UPPER(info) like #returnReason:varchar# #sortlogic:varchar#) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only

getChaseRejectsSearchLIST_page.Query=select RJCT_SQNC_NUM,FILE_CREATION_DATE,CO_NAME,DESCR,RECORDTYPE,DESCR_DATE,ENTRY_TRACE_NUM,CUSTOMER_NAME,ORGNL_TXN_NUM,TXN_CODE,ORGNL_TXN_AMT,ABA_NUM,CK,EXT_ACC_NUM,ADDENDA_TRACE_NUM,ORGNL_TXN_DT,UPPLOAD_DATE,RSN_CODE,INFO,RECORD_STAT,CONFIRMATION_NUM,ACTION,count(*) over() total_rows FROM (select RJCT_SQNC_NUM,FILE_CREATION_DATE,CO_NAME,DESCR,REJ_NOC_INDICATOR as RECORDTYPE,DATE(DESCR_DATE) AS DESCR_DATE,ENTRY_TRACE_NUM as ENTRY_TRACE_NUM,CUSTOMER_NAME,VARCHAR(LTRIM(ORGNL_TXN_NUM),9) as ORGNL_TXN_NUM,TXN_CODE,CASE when ORGNL_TXN_AMT < 0.000001 then 0.000001 else ORGNL_TXN_AMT end as ORGNL_TXN_AMT,ABA_NUM as ABA_NUM,ABA_NUM as CK, EXT_ACC_NUM as EXT_ACC_NUM, ORGNL_TXN_NUM as ADDENDA_TRACE_NUM, DATE(ORGNL_TXN_DT) AS ORGNL_TXN_DT,DATE(FILE_CREATION_DATE) AS UPPLOAD_DATE, RSN_CODE as RSN_CODE, INFO, RECORD_STAT, CONFIRMATION_NUM,' ' as ACTION FROM PFT_INCOMING_REJECT_FILE PIRF where rsn_code = #returnCode:numeric# and rej_noc_indicator = #recordTypeRC:varchar# and rej_noc_indicator = #recordType:varchar# and record_stat = #status:numeric# and confirmation_num like #origTxnConfNo:varchar# and UPPER(customer_name) like #customerName:varchar# and orgnl_txn_amt = #trxnAmount:numeric# and entry_trace_num = #chaseTraceNo:numeric# and varchar(ltrim(ORGNL_TXN_NUM),9) = #customerId:varchar# and ORGNL_TXN_NUM = #origTraceNo:varchar# and date(orgnl_txn_dt)=#origTxnExeDate:date# and date(FILE_CREATION_DATE)=#effEntryDate:date# and UPPER(info) like #returnReason:varchar# #sortlogic:varchar#) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only
getChaseRejectsSearchLIST_page.TOColumnMap={RJCT_SQNC_NUM=RJCT_SQNC_NUM,FILE_CREATION_DATE=FILE_CREATION_DATE,CO_NAME=CO_NAME,DESCR=DESCR,RECORDTYPE=RECORDTYPE,DESCR_DATE=DESCR_DATE,ENTRY_TRACE_NUM=ENTRY_TRACE_NUM,CUSTOMER_NAME=CUSTOMER_NAME,ORGNL_TXN_NUM=ORGNL_TXN_NUM,TXN_CODE=TXN_CODE,ORGNL_TXN_AMT=ORGNL_TXN_AMT,ABA_NUM=ABA_NUM,CK=CK,EXT_ACC_NUM=EXT_ACC_NUM,ADDENDA_TRACE_NUM=ADDENDA_TRACE_NUM,ORGNL_TXN_DT=ORGNL_TXN_DT,UPPLOAD_DATE=UPPLOAD_DATE,RSN_CODE=RSN_CODE,INFO=INFO,RECORD_STAT=RECORD_STAT,CONFIRMATION_NUM=CONFIRMATION_NUM,ACTION=ACTION,total_rows=total_rows}
getChaseRejectsSearchLIST_page.OutputType=java.util.ArrayList
getChaseRejectsSearchLIST.StmtType=Statement
getChaseRejectsSearchLIST.PgnUniqueKeys=RJCT_SQNC_NUM:numeric:ASC
getChaseRejectsSearchLIST.SortKeys=RJCT_SQNC_NUM:numeric:ASC
getChaseRejectsSearchLIST.NullValCol=ORGNL_TXN_DT#UPPLOAD_DATE#CONFIRMATION_NUM#CK

getChaseRejectStatusValues.Query=select distinct dmndomainval,dmndomainvaldesc from  ds_domains where dmndomain='D_ChaseRejectStatusCode'
getChaseRejectStatusValues.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getChaseRejectStatusValues.OutputType=java.util.Vector

getChaseRejectRecordTypes.Query=select distinct dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_ChaseRejectRecordCode' 
getChaseRejectRecordTypes.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getChaseRejectRecordTypes.OutputType=java.util.Vector

getPaymentDate.Query=select versionnum,paytrxkey,paypymtdate,paypayref,txn_type,payccsstatuscode from ds_pay_txns where paypayref=#origTxnConfNo:varchar# and payccsstatuscode='4' and txn_type in ('ACH-IN','ACH-OUT')
getPaymentDate.TOColumnMap={versionnum=versionnum,paytrxkey=paytrxkey,paypymtdate=paypymtdate,paypayref=paypayref,txn_type=txn_type,payccsstatuscode=payccsstatuscode}
getPaymentDate.OutputType=java.util.ArrayList
getPaymentDate.StmtType=PreparedStatement

getMPRecords.Query=select versionnum,payccsstatuscode,paypayref from ds_pay_txns where paypayref=#origTxnConfNo:varchar# and payccsstatuscode='4'
getMPRecords.TOColumnMap={versionnum=versionnum,payccsstatuscode=payccsstatuscode,paypayref=paypayref}
getMPRecords.OutputType=java.util.ArrayList
getMPRecords.StmtType=PreparedStatement

getCancelChaseReject.Query=UPDATE PFT_INCOMING_REJECT_FILE SET RECORD_STAT = 3 where RJCT_SQNC_NUM = #hiddenSeqNo:numeric#
getCancelChaseReject.StmtType=PreparedStatement


#********** Chase Reject Ends ******************

cancelRecTransfer.Query=update TXN_PARENT set txn_parent_ver=txn_parent_ver+1,next_txn_id=#next_txn_id:varchar#,status=#status:varchar# where par_txn_no=#par_txn_no:numeric#
cancelRecTransfer.StmtType=PreparedStatement


############ For updating the Inhouse Account Number ##########################
getActualHouseAccountNumber.Query=select BSPL_CODE_ID from BSPL_CODE where BSPL_ID=(select cast(BSPL_CD as VARCHAR(25)) as BSPL_CD from ACCOUNT where POS_ID=(select cast(VAL as smallint) as VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=852)  and POS_TYPE =24) and OU_ID ='GMSBKUSNYC'
getActualHouseAccountNumber.TOColumnMap={BSPL_CODE_ID=BSPL_CODE_ID}
getActualHouseAccountNumber.OutputType=java.util.ArrayList
getActualHouseAccountNumber.StmtType=Statement



#Reason Code Starts
getChaseRejectActionCodes.Query=select distinct dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_ChaseRejectActionCode' order by dmndomainval asc 
getChaseRejectActionCodes.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getChaseRejectActionCodes.OutputType=java.util.Vector

getNOCActionCodes.Query=select distinct dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_ChaseRejectActionCode' and dmndomainval in ('2','3','4','5','6','7') order by dmndomainval asc
getNOCActionCodes.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getNOCActionCodes.OutputType=java.util.Vector


getRejectActionCodes.Query=select distinct dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_ChaseRejectActionCode' and dmndomainval in ('1')
getRejectActionCodes.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getRejectActionCodes.OutputType=java.util.Vector

#####################  REASON CODES ##########################################
######  ADD REASON CODE
setReasonCode.Query=Insert into reason_codes (rsn_code,msg_typ,action,descr,type,app_flg,date1,dm_lstupddt,rsn_ou_id,reason_codes_ver) values (#rsn_code:varchar#,5101,#rsn_actn:numeric#,#descr:varchar#,#rsn_type:varchar#,1,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP,'GMSBKUSNYC',1)
setReasonCode.StmtType=Statement


######  EDIT REASON CODE
updateReasonCode.Query = update reason_codes set action=#rsn_actn:numeric#,type=#rsn_type:varchar#,descr=#descr:varchar#,rsn_code=#new_rsn_code:varchar# where RSN_CODE=#rsn_code:varchar# and DEL_SEQ_NUM=1
updateReasonCode.StmtType=Statement


####### VIEW REASON CODE
getReasonCodeData.Query=select RSN_CODE,ACTION,TYPE,DESCR  from REASON_CODES where RSN_CODE=#rsn_code:varchar# and DEL_SEQ_NUM=1
getReasonCodeData.TOColumnMap={rsn_code=rsn_code,action=action,type=type,descr=descr}
getReasonCodeData.StmtType=Statement
getReasonCodeData.OutputType=com.tcs.ebw.payments.transferobject.ReasonCodeOutNDBTO

####### DELETE REASON CODE
deleteReasonCodeData.Query=update REASON_CODES set STATUS=3,DEL_SEQ_NUM=next value for reasons_del_seq where RSN_CODE=#rsn_code:varchar# and DEL_SEQ_NUM=1
deleteReasonCodeData.StmtType=Statement

#########  Reason CODE MAINTENANCE
#ReasonCodeMaintenance Starts
##getReasonCodeSearchList_page.Query=select TYPE,RSN_CODE,DESCR,ACTION,ACTIONCOL,count(*) over() total_rows from (select TYPE,RSN_CODE,DESCR,ACTION,'View,Edit,Delete' as ACTIONCOL from REASON_CODES where TYPE=#rsn_type:varchar# and RSN_CODE=#rsn_code:varchar# and ACTION=#rsn_actn:varchar# and (STATUS IS null OR STATUS !=3) #sortlogic:varchar#) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only
# QA_47279 by 312822 on 08/06/2011
getReasonCodeSearchList_page.Query=select TYPE,RSN_CODE,DESCR,ACTION,ACTIONCOL,count(*) over() total_rows from (select CASE when TYPE='R' Then 'Reject' when type='C' then 'NOC' else null END as TYPE,RSN_CODE,DESCR,coalesce(dmndomainvaldesc,'') as ACTION,'View,Edit,Delete' as ACTIONCOL from REASON_CODES left outer join DS_DOMAINS on ACTION = cast (dmndomainval as int) and dmndomain='D_ChaseRejectActionCode' where TYPE=#rsn_type:varchar# and RSN_CODE=#rsn_code:varchar# and ACTION=#rsn_actn:varchar# and (STATUS IS null OR STATUS !=3) #sortlogic:varchar#) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only

getReasonCodeSearchList_page.TOColumnMap={TYPE=TYPE,RSN_CODE=RSN_CODE,DESCR=DESCR,ACTION=ACTION,ACTIONCOL=ACTIONCOL,total_rows=total_rows}
getReasonCodeSearchList_page.OutputType=java.util.ArrayList
getReasonCodeSearchList.StmtType=PreparedStatement
getReasonCodeSearchList.PgnUniqueKeys=RSN_CODE:Varchar:ASC
getReasonCodeSearchList.SortKeys=TYPE:Varchar:DESC#RSN_CODE:Varchar:ASC

# QA_47279 by 312822 on 08/06/2011
getReasonCodeList_page.Query=select TYPE,RSN_CODE,DESCR,ACTION,ACTIONCOL,count(*) over() total_rows from (select CASE when TYPE='R' Then 'Reject' when type='C' then 'NOC' else null END as TYPE,RSN_CODE,DESCR,coalesce(dmndomainvaldesc,'') as ACTION,'View,Edit,Delete' as ACTIONCOL from REASON_CODES left outer join DS_DOMAINS on ACTION = cast (dmndomainval as int) and dmndomain='D_ChaseRejectActionCode' where STATUS IS null OR STATUS !=3 #sortlogic:varchar#) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only
getReasonCodeList_page.TOColumnMap={TYPE=TYPE,RSN_CODE=RSN_CODE,DESCR=DESCR,ACTION=ACTION,ACTIONCOL=ACTIONCOL,total_rows=total_rows}
getReasonCodeList_page.OutputType=java.util.ArrayList
getReasonCodeList.StmtType=PreparedStatement
getReasonCodeList.PgnUniqueKeys=RSN_CODE:Varchar:ASC
getReasonCodeList.SortKeys=TYPE:Varchar:DESC#RSN_CODE:Varchar:ASC
#ReasonCodeMaintenance ends

###########Branch Print Manager##############################

getBranchPrntDefaultLst_page.Query=select REQUESTED_EXE_DT,PAYTXNEPRYDATE,FROMBR_ACCT_NO_FA,PRINTING_BRANCH,PAYEE_NAME,PAYDEBITAMT,PAYPAYREF,ACTUAL_EXE_DT,STATUS,PAYCCSSTATUSCODE,ACTION,TXN_TYPE,PAYBATCHREF,count(*) over() total_rows from (select CTD.EST_PICKUP_TIME AS REQUESTED_EXE_DT,DATE(DPT.PAYTXNEPRYDATE) AS PAYTXNEPRYDATE,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6)  || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),PAYPAYEEID) as FROMBR_ACCT_NO_FA,CTD.PRINTING_BRANCH as PRINTING_BRANCH,CTD.PAYEE_NAME as PAYEE_NAME,DPT.PAYDEBITAMT,DPT.PAYPAYREF,DATE(CPD.ISSUE_DT) AS ACTUAL_EXE_DT,(select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_COEStatusCode' and dmndomainval=DPT.PAYCCSSTATUSCODE) as STATUS,DPT.PAYCCSSTATUSCODE,'View' as ACTION,DPT.TXN_TYPE,DPT.PAYBATCHREF from  DS_PAY_TXNS DPT,CHECK_TXN_DTLS CTD LEFT OUTER JOIN CHECK_PRINT_DTLS CPD ON CPD.CONFIRMATION_NO=CTD.CONFIRMATION_NO AND CPD.CHECK_NO=CTD.CHECK_NO where DPT.txn_type in ('CHK-LOC') AND DPT.PAYPAYREF=CTD.CONFIRMATION_NO AND DPT.PAYCCSSTATUSCODE in ('110','103','102') AND DATE(CTD.EST_PICKUP_TIME) BETWEEN (#startDate:date#) AND (#endDate:date#) AND CTD.PRINTING_BRANCH in (#branchId:varchar#) #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with UR
getBranchPrntDefaultLst_page.TOColumnMap={REQUESTED_EXE_DT=REQUESTED_EXE_DT,PAYTXNEPRYDATE=PAYTXNEPRYDATE,FROMBR_ACCT_NO_FA=FROMBR_ACCT_NO_FA,PRINTING_BRANCH=PRINTING_BRANCH,PAYEE_NAME=PAYEE_NAME,PAYDEBITAMT=PAYDEBITAMT,PAYPAYREF=PAYPAYREF,ACTUAL_EXE_DT=ACTUAL_EXE_DT,STATUS=STATUS,PAYCCSSTATUSCODE=PAYCCSSTATUSCODE,ACTION=ACTION,TXN_TYPE=TXN_TYPE,PAYBATCHREF=PAYBATCHREF,total_rows=total_rows}
getBranchPrntDefaultLst_page.OutputType=java.util.ArrayList
getBranchPrntDefaultLst.StmtType=PreparedStatement
getBranchPrntDefaultLst.PgnUniqueKeys=PAYPAYREF:Varchar:ASC
getBranchPrntDefaultLst.SortKeys=REQUESTED_EXE_DT:Varchar:ASC


getBranchPrntDefaultLstSB_page.Query=select REQUESTED_EXE_DT,PAYTXNEPRYDATE,FROMBR_ACCT_NO_FA,PRINTING_BRANCH,PAYEE_NAME,PAYDEBITAMT,PAYPAYREF,ACTUAL_EXE_DT,STATUS,PAYCCSSTATUSCODE,ACTION,TXN_TYPE,PAYBATCHREF,count(*) over() total_rows from (select CTD.EST_PICKUP_TIME AS REQUESTED_EXE_DT,DATE(DPT.PAYTXNEPRYDATE) AS PAYTXNEPRYDATE,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6)  || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),PAYPAYEEID) as FROMBR_ACCT_NO_FA,CTD.PRINTING_BRANCH as PRINTING_BRANCH,CTD.PAYEE_NAME as PAYEE_NAME,DPT.PAYDEBITAMT,DPT.PAYPAYREF,DATE(CPD.ISSUE_DT) AS ACTUAL_EXE_DT,(select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_COEStatusCode' and dmndomainval=DPT.PAYCCSSTATUSCODE) as STATUS,DPT.PAYCCSSTATUSCODE,'View' as ACTION,DPT.TXN_TYPE,DPT.PAYBATCHREF from  DS_PAY_TXNS DPT,CHECK_TXN_DTLS CTD LEFT OUTER JOIN CHECK_PRINT_DTLS CPD ON CPD.CONFIRMATION_NO=CTD.CONFIRMATION_NO AND CPD.CHECK_NO=CTD.CHECK_NO where DPT.txn_type in ('CHK-LOC') AND DPT.PAYPAYREF=CTD.CONFIRMATION_NO AND DPT.PAYCCSSTATUSCODE in ('110','103','102') AND  DATE(CTD.EST_PICKUP_TIME) BETWEEN (#startDate:date#) AND (#endDate:date#) AND CTD.PRINTING_BRANCH like #superBranch:varchar# #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with UR
getBranchPrntDefaultLstSB_page.TOColumnMap={REQUESTED_EXE_DT=REQUESTED_EXE_DT,PAYTXNEPRYDATE=PAYTXNEPRYDATE,FROMBR_ACCT_NO_FA=FROMBR_ACCT_NO_FA,PRINTING_BRANCH=PRINTING_BRANCH,PAYEE_NAME=PAYEE_NAME,PAYDEBITAMT=PAYDEBITAMT,PAYPAYREF=PAYPAYREF,ACTUAL_EXE_DT=ACTUAL_EXE_DT,STATUS=STATUS,PAYCCSSTATUSCODE=PAYCCSSTATUSCODE,ACTION=ACTION,TXN_TYPE=TXN_TYPE,PAYBATCHREF=PAYBATCHREF,total_rows=total_rows}
getBranchPrntDefaultLstSB_page.OutputType=java.util.ArrayList
getBranchPrntDefaultLstSB.StmtType=PreparedStatement
getBranchPrntDefaultLstSB.PgnUniqueKeys=PAYPAYREF:Varchar:ASC
getBranchPrntDefaultLstSB.SortKeys=REQUESTED_EXE_DT:Varchar:ASC


#Branch Print Manager Search List

getBranchPrntSearchLst_page.Query=select REQUESTED_EXE_DT,PAYTXNEPRYDATE,FROMBR_ACCT_NO_FA,PRINTING_BRANCH,PAYEE_NAME,PAYDEBITAMT,PAYPAYREF,ACTUAL_EXE_DT,STATUS,PAYCCSSTATUSCODE,ACTION,TXN_TYPE,PAYBATCHREF,count(*) over() total_rows from (select CTD.EST_PICKUP_TIME AS REQUESTED_EXE_DT,DATE(DPT.PAYTXNEPRYDATE) AS PAYTXNEPRYDATE,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6)  || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),PAYPAYEEID) as FROMBR_ACCT_NO_FA,CTD.PRINTING_BRANCH as PRINTING_BRANCH,CTD.PAYEE_NAME as PAYEE_NAME,DPT.PAYDEBITAMT,DPT.PAYPAYREF,DATE(CPD.ISSUE_DT) AS ACTUAL_EXE_DT,(select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_COEStatusCode' and dmndomainval=DPT.PAYCCSSTATUSCODE) as STATUS,DPT.PAYCCSSTATUSCODE,'View' as ACTION,DPT.TXN_TYPE,DPT.PAYBATCHREF from DS_PAY_TXNS DPT,CHECK_TXN_DTLS CTD LEFT OUTER JOIN CHECK_PRINT_DTLS CPD ON CPD.CONFIRMATION_NO=CTD.CONFIRMATION_NO AND CPD.CHECK_NO=CTD.CHECK_NO where DPT.txn_type in ('CHK-LOC') AND DPT.PAYPAYREF=CTD.CONFIRMATION_NO AND DPT.PAYPAYREF like #confNo:varchar# AND DPT.PAYCCSSTATUSCODE in (#status:varchar#) AND SUBSTR(DPT.FROMBR_ACCT_NO_FA,1,3) like #branchNo:varchar# AND SUBSTR(DPT.FROMBR_ACCT_NO_FA,4,6) like #accNo:varchar# AND SUBSTR(FROMBR_ACCT_NO_FA,10,3) like #faNo:varchar# AND CTD.PRINTING_BRANCH in (#branchId:varchar#) AND DATE(CTD.EST_PICKUP_TIME) BETWEEN (#startDate:date#) AND (#endDate:date#) AND DPT.paydebitamt BETWEEN (#trxnMinAmount:numeric#) AND (#trxnMaxAmount:numeric#) #sortlogic:varchar# ) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with UR
getBranchPrntSearchLst_page.TOColumnMap={REQUESTED_EXE_DT=REQUESTED_EXE_DT,PAYTXNEPRYDATE=PAYTXNEPRYDATE,FROMBR_ACCT_NO_FA=FROMBR_ACCT_NO_FA,PRINTING_BRANCH=PRINTING_BRANCH,PAYEE_NAME=PAYEE_NAME,PAYDEBITAMT=PAYDEBITAMT,PAYPAYREF=PAYPAYREF,ACTUAL_EXE_DT=ACTUAL_EXE_DT,STATUS=STATUS,PAYCCSSTATUSCODE=PAYCCSSTATUSCODE,ACTION=ACTION,TXN_TYPE=TXN_TYPE,PAYBATCHREF=PAYBATCHREF,total_rows=total_rows}
getBranchPrntSearchLst_page.OutputType=java.util.ArrayList
getBranchPrntSearchLst.StmtType=PreparedStatement
getBranchPrntSearchLst.PgnUniqueKeys=PAYPAYREF:Varchar:ASC
getBranchPrntSearchLst.SortKeys=REQUESTED_EXE_DT:Varchar:ASC


getBranchPrntSearchConfLst_page.Query=select REQUESTED_EXE_DT,PAYTXNEPRYDATE,FROMBR_ACCT_NO_FA,PRINTING_BRANCH,PAYEE_NAME,PAYDEBITAMT,PAYPAYREF,ACTUAL_EXE_DT,STATUS,PAYCCSSTATUSCODE,ACTION,TXN_TYPE,PAYBATCHREF,count(*) over() total_rows from (select CTD.EST_PICKUP_TIME AS REQUESTED_EXE_DT,DATE(DPT.PAYTXNEPRYDATE) AS PAYTXNEPRYDATE,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6)  || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),PAYPAYEEID) as FROMBR_ACCT_NO_FA,CTD.PRINTING_BRANCH as PRINTING_BRANCH,CTD.PAYEE_NAME as PAYEE_NAME,DPT.PAYDEBITAMT,DPT.PAYPAYREF,DATE(CPD.ISSUE_DT) AS ACTUAL_EXE_DT,(select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_COEStatusCode' and dmndomainval=DPT.PAYCCSSTATUSCODE) as STATUS,DPT.PAYCCSSTATUSCODE,'View' as ACTION,DPT.TXN_TYPE,DPT.PAYBATCHREF from DS_PAY_TXNS DPT,CHECK_TXN_DTLS CTD LEFT OUTER JOIN CHECK_PRINT_DTLS CPD ON CPD.CONFIRMATION_NO=CTD.CONFIRMATION_NO AND CPD.CHECK_NO=CTD.CHECK_NO where DPT.txn_type in ('CHK-LOC') AND DPT.PAYPAYREF=CTD.CONFIRMATION_NO AND DPT.PAYCCSSTATUSCODE in ('110','103','102','101') AND CTD.PRINTING_BRANCH in (#branchId:varchar#) AND DPT.PAYPAYREF=#confNo:varchar# #sortlogic:varchar#) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only with UR
getBranchPrntSearchConfLst_page.TOColumnMap={REQUESTED_EXE_DT=REQUESTED_EXE_DT,PAYTXNEPRYDATE=PAYTXNEPRYDATE,FROMBR_ACCT_NO_FA=FROMBR_ACCT_NO_FA,PRINTING_BRANCH=PRINTING_BRANCH,PAYEE_NAME=PAYEE_NAME,PAYDEBITAMT=PAYDEBITAMT,PAYPAYREF=PAYPAYREF,ACTUAL_EXE_DT=ACTUAL_EXE_DT,STATUS=STATUS,PAYCCSSTATUSCODE=PAYCCSSTATUSCODE,ACTION=ACTION,TXN_TYPE=TXN_TYPE,PAYBATCHREF=PAYBATCHREF,total_rows=total_rows}
getBranchPrntSearchConfLst_page.OutputType=java.util.ArrayList
getBranchPrntSearchConfLst.StmtType=PreparedStatement
getBranchPrntSearchConfLst.PgnUniqueKeys=PAYPAYREF:Varchar:ASC
getBranchPrntSearchConfLst.SortKeys=REQUESTED_EXE_DT:Varchar:ASC


############Confirm Print Success##############################

#getConfirmPrintSuccessDetails.Query=select DPT.paypayref as confirmationNo,COALESCE(SUBSTR(DPT.FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(DPT.FROMBR_ACCT_NO_FA,4,6)  || '-' || SUBSTR(DPT.FROMBR_ACCT_NO_FA,10,3),DPT.PAYPAYEEID) as fromAccnt,CTD.payee_name as payee,DPT.SAME_NAME_FLAG as thirdparty,DELIVERY_ADDRESS_LINE1 as addrline1,DELIVERY_ADDRESS_LINE2 as addrline2,DELIVERY_ADDRESS_LINE3 as addrline3,DELIVERY_ADDRESS_LINE4 as addrline4,DPT.REQUESTED_EXE_DT as reqPrntDate,DPT.PAYDEBITAMT as amount,CTD.printing_branch as deliveryOption,CTD.certified_check_flag as certifiedChk,DPT.auth_mode as loa,CTD.check_no as checkNo,CTD.memo_line1 as memo1,CTD.memo_line2 as memo2,DPT.versionnum from Ds_Pay_Txns DPT,CHECK_TXN_DTLS CTD where DPT.PAYPAYREF=CTD.CONFIRMATION_NO AND DPT.PAYPAYREF like #confirmationNo:varchar#
#getConfirmPrintSuccessDetails.TOColumnMap={confirmationNo=confirmationNo,fromAccnt=fromAccnt,payee=payee,thirdparty=thirdparty,addrline1=addrline1,addrline2=addrline2,addrline3=addrline3,addrline4=addrline4,reqPrntDate=reqPrntDate,amount=amount,deliveryOption=deliveryOption,certifiedChk=certifiedChk,loa=loa,checkNo=checkNo,memo1=memo1,memo2=memo2,versionnum=versionnum}

getConfirmPrintSuccessDetails.Query=select DPT.paypayref as confirmationNo,DPT.paybatchref as txnBatchId,COALESCE(SUBSTR(DPT.FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(DPT.FROMBR_ACCT_NO_FA,4,6)  || '-' || SUBSTR(DPT.FROMBR_ACCT_NO_FA,10,3),DPT.PAYPAYEEID) as fromAccnt,CTD.payee_name as payee,DPT.SAME_NAME_FLAG as sameNameFlag,DELIVERY_ADDRESS_LINE1 as addrline1,DELIVERY_ADDRESS_LINE2 as addrline2,DELIVERY_ADDRESS_LINE3 as addrline3,DELIVERY_ADDRESS_LINE4 as addrline4,CTD.EST_PICKUP_TIME as reqPrntDate,DPT.PAYDEBITAMT as amount,CTD.printing_branch as printingBranch,CTD.pickup_option as pickUpOption,CTD.certified_check_flag as certifiedChk,DPT.auth_mode as loa,CTD.check_no as checkNo,CTD.memo_line1 as memo1,CTD.memo_line2 as memo2,CTD.print_memo_check_flag as printMemoCheckFlag,CTD.print_memo_stub_flag as printMemoStubFlag,DPT.versionnum,BAT.batversionnum,CTD.chktxnversionnum,DPT.PAYCCSSTATUSCODE as status_code from CHECK_TXN_DTLS CTD left outer join Ds_Pay_Txns DPT on DPT.PAYPAYREF=CTD.CONFIRMATION_NO left outer join DS_BATCH BAT on DPT.PAYBATCHREF=BAT.BATBATCHREF where CTD.CONFIRMATION_NO=#confirmationNo:varchar#
getConfirmPrintSuccessDetails.TOColumnMap={confirmationNo=confirmationNo,fromAccnt=fromAccnt,payee=payee,sameNameFlag=sameNameFlag,addrline1=addrline1,addrline2=addrline2,addrline3=addrline3,addrline4=addrline4,reqPrntDate=reqPrntDate,amount=amount,printingBranch=printingBranch,pickUpOption=pickUpOption,certifiedChk=certifiedChk,loa=loa,checkNo=checkNo,memo1=memo1,memo2=memo2,printMemoCheckFlag=printMemoCheckFlag,printMemoStubFlag=printMemoStubFlag,versionnum=versionnum,txnBatchId=txnBatchId,batversionnum=batversionnum,chktxnversionnum=chktxnversionnum,status_code=status_code}
getConfirmPrintSuccessDetails.OutputType=com.tcs.ebw.payments.transferobject.ConfirmPrintSuccessOutputTO
getConfirmPrintSuccessDetails.StmtType=PreparedStatement

getVoidFailReason.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_VoidFailReason' order by SORT_ORD asc
getVoidFailReason.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getVoidFailReason.OutputType=java.util.Vector

getVoidCancelReason.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_VoidCancelReason' order by SORT_ORD asc
getVoidCancelReason.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getVoidCancelReason.OutputType=java.util.Vector



updatePrintSuccess.Query=update ds_pay_txns set versionnum=versionnum+1,PAYCCSSTATUSCODE=#newStatus:varchar# where paypayref like #confirmationNo:varchar# 
updatePrintSuccess.TOColumnMap={newStatus=newStatus,confirmationNo=confirmationNo}
updatePrintSuccess.StmtType=PreparedStatement

updatePrintSuccessBatch.Query=update ds_batch set batversionnum=batversionnum+1,BATSTATUS=#newStatus:varchar# where BATBATCHREF like #BATBATCHREF:varchar# 
updatePrintSuccessBatch.TOColumnMap={newStatus=newStatus,BATBATCHREF=BATBATCHREF}
updatePrintSuccessBatch.StmtType=PreparedStatement


updateCheckPrintDtlsStatus.Query=update CHECK_PRINT_DTLS set CHECK_STATUS = 'V',VOID_REASON_CODE =#voidReason:numeric#,VOID_REASON_DESC=#voidReasonDesc:varchar# where CONFIRMATION_NO like #confirmationNo:varchar# and CHECK_NO like #checkNo:varchar#
updateCheckPrintDtlsStatus.TOColumnMap={voidReason=voidReason,voidReasonDesc=voidReasonDesc,confirmationNo=confirmationNo,checkNo=checkNo}
updateCheckPrintDtlsStatus.StmtType=PreparedStatement
#######################
#######################
# Initiate Check Request Starts Here

getCheckPickupOptions.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_PickupOptions' order by dmndomainval
getCheckPickupOptions.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getCheckPickupOptions.OutputType=java.util.Vector


getThirdPartyReasons.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_ThirdPartyReason'
getThirdPartyReasons.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getThirdPartyReasons.OutputType=java.util.Vector


getLocalCheckCutOffTime.Query=select val from configurable_parameter where prmtr_id =857
getLocalCheckCutOffTime.TOColumnMap={VAL=VAL}
getLocalCheckCutOffTime.OutputType=java.util.ArrayList
getLocalCheckCutOffTime.StmtType=Statement

getLocalCheckPrintCutOffTime.Query=select val from configurable_parameter where prmtr_id =857
getLocalCheckPrintCutOffTime.TOColumnMap={VAL=VAL}
getLocalCheckPrintCutOffTime.OutputType=java.util.ArrayList
getLocalCheckPrintCutOffTime.StmtType=Statement

getRegCheckCutOffTime.Query=select val from configurable_parameter where prmtr_id =856 
getRegCheckCutOffTime.TOColumnMap={VAL=VAL}
getRegCheckCutOffTime.OutputType=java.util.ArrayList
getRegCheckCutOffTime.StmtType=Statement

getRegCheckPrintCutOffTime.Query=select val from configurable_parameter where prmtr_id =856 
getRegCheckPrintCutOffTime.TOColumnMap={VAL=VAL}
getRegCheckPrintCutOffTime.OutputType=java.util.ArrayList
getRegCheckPrintCutOffTime.StmtType=Statement

insertChkTrxnDtls.Query=insert into check_txn_dtls (confirmation_no,payee_name,third_party_reason,certified_check_flag,pickup_option,printing_branch,default_address_flag,	foriegn_address_flag,delivery_address_line1,delivery_address_line2,delivery_address_line3,delivery_address_line4,print_address_flag,memo_line1,memo_line2,print_memo_check_flag,print_memo_stub_flag,fee_amount,charged_to,est_pickup_time, delivered_to_type,delivered_to_name,type_of_id,id_number,check_no,tracking_id,payee_type) values(#confirmationNo:varchar#,#payeeName:varchar#,#thirdPartyReason:numeric#,#certifiedFlag:varchar#,#pickUpOption:numeric#,#printingBranch:varchar#,#defaultAddressFlag:varchar#,#foreignAddressFlag:varchar#,#deliveryAddrLine1:varchar#,#deliveryAddrLine2:varchar#,#deliveryAddrLine3:varchar#,#deliveryAddrLine4:varchar#,#printAddressFlag:varchar#,#memoLine1:varchar#,#memoLine2:varchar#,#printMemoCheckFlag:varchar#,#printMemoStubFlag:varchar#,#fee:BigDecimal#,#chargedTo:varchar#,#estPickupTime:timestamp#,#deliveredToType:varchar#,#deliveredToName:varchar#,#typeOfId:numeric#,#idNumber:varchar#,#checkNo:varchar#,#trackingId:varchar#,#payeeType:numeric#)
insertChkTrxnDtls.StmtType=PreparedStatement


getEditCheckDetails.Query=select confirmation_no as confirmationNo,payee_name as payeeName,third_party_reason as thirdPartyReason,certified_check_flag as certifiedFlag,pickup_option as pickUpOption,printing_branch as printingBranch,default_address_flag as defaultAddressFlag,foriegn_address_flag as foreignAddressFlag,delivery_address_line1 as deliveryAddrLine1,delivery_address_line2 as deliveryAddrLine2,delivery_address_line3 as deliveryAddrLine3,delivery_address_line4 as deliveryAddrLine4 ,print_address_flag as printAddressFlag,memo_line1 as memoLine1,memo_line2 as memoLine2,print_memo_check_flag as printMemoCheckFlag,print_memo_stub_flag as printMemoStubFlag,fee_amount as fee,charged_to as chargedTo,est_pickup_time as estPickupTime,delivered_to_type as deliveredToType,delivered_to_name as deliveredToName,type_of_id as typeOfId,id_number as idNumber,check_no as checkNo,tracking_id as trackingId,payee_type as payeeType,chktxnversionnum from  check_txn_dtls where confirmation_no=#confirmationNo:varchar#

getEditCheckDetails.TOColumnMap={confirmationNo=confirmationNo,payeeName=payeeName,thirdPartyReason=thirdPartyReason,certifiedFlag=certifiedFlag,pickUpOption=pickUpOption,printingBranch=printingBranch,defaultAddressFlag=defaultAddressFlag,foreignAddressFlag=foreignAddressFlag,deliveryAddrLine1=deliveryAddrLine1,deliveryAddrLine2=deliveryAddrLine2,deliveryAddrLine3=deliveryAddrLine3,deliveryAddrLine4=deliveryAddrLine4,printAddressFlag=printAddressFlag,memoLine1=memoLine1,memoLine2=memoLine2,printMemoCheckFlag=printMemoCheckFlag,printMemoStubFlag=printMemoStubFlag,fee=fee,chargedTo=chargedTo,estPickupTime=estPickupTime,deliveredToType=deliveredToType,deliveredToName=deliveredToName,typeOfId=typeOfId,idNumber=idNumber,checkNo=checkNo,trackingId=trackingId,payeeType=payeeType,chktxnversionnum=chktxnversionnum}
getEditCheckDetails.OutputType=com.tcs.ebw.payments.transferobject.CheckRequestTO
getEditCheckDetails.StmtType=PreparedStatement

updateChkTrxnDtls.Query=update check_txn_dtls set chktxnversionnum=chktxnversionnum+1, payee_name=#payeeName:varchar#,third_party_reason=#thirdPartyReason:numeric#,certified_check_flag=#certifiedFlag:varchar#,pickup_option=#pickUpOption:numeric#,printing_branch=#printingBranch:varchar#,default_address_flag=#defaultAddressFlag:varchar#,foriegn_address_flag=#foreignAddressFlag:varchar#,delivery_address_line1=#deliveryAddrLine1:varchar#,delivery_address_line2=#deliveryAddrLine2:varchar#,delivery_address_line3=#deliveryAddrLine3:varchar#,delivery_address_line4=#deliveryAddrLine4:varchar#,print_address_flag=#printAddressFlag:varchar#,memo_line1=#memoLine1:varchar#,memo_line2=#memoLine2:varchar#,print_memo_check_flag=#printMemoCheckFlag:varchar#,print_memo_stub_flag=#printMemoStubFlag:varchar#,fee_amount=#fee:BigDecimal#,charged_to=#chargedTo:varchar#,est_pickup_time=#estPickupTime:timestamp#,payee_type=#payeeType:numeric# where confirmation_no=#confirmationNo:varchar#

updateChkTrxnDtls.StmtType=PreparedStatement

rerouteChkReq.Query=update check_txn_dtls set chktxnversionnum=chktxnversionnum+1,  pickup_option=#pickUpOption:numeric#,printing_branch=#printingBranch:varchar# where confirmation_no=#confirmationNo:varchar#

rerouteChkReq.StmtType=PreparedStatement


getCheckMinAmount.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=886
getCheckMinAmount.TOColumnMap={VAL=VAL}
getCheckMinAmount.OutputType=java.util.ArrayList
getCheckMinAmount.StmtType=Statement

getCheckMaxAmount.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=887
getCheckMaxAmount.TOColumnMap={VAL=VAL}
getCheckMaxAmount.OutputType=java.util.ArrayList
getCheckMaxAmount.StmtType=Statement

# Initiate Check Request Ends Here


# Confirm Print Starts Here

#220710#getConfirmPrintDetails.Query=select DPT.paypayref as confirmationNo,DPT.paybatchref as txnBatchId,COALESCE(SUBSTR(DPT.FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(DPT.FROMBR_ACCT_NO_FA,4,6)  || '-' || SUBSTR(DPT.FROMBR_ACCT_NO_FA,10,3),DPT.PAYPAYEEID) as fromAccnt,CTD.payee_name as payee,DPT.SAME_NAME_FLAG as sameNameFlag,DELIVERY_ADDRESS_LINE1 as addrline1,DELIVERY_ADDRESS_LINE2 as addrline2,DELIVERY_ADDRESS_LINE3 as addrline3,DELIVERY_ADDRESS_LINE4 as addrline4,DPT.REQUESTED_EXE_DT as reqPrntDate,DPT.PAYDEBITAMT as amount,CTD.printing_branch as printingBranch,CTD.pickup_option as pickUpOption,CTD.certified_check_flag as certifiedChk,DPT.auth_mode as loa,CTD.check_no as checkNo,CTD.memo_line1 as memo1,CTD.memo_line2 as memo2,CTD.print_memo_check_flag as printMemoCheckFlag,CTD.print_memo_stub_flag as printMemoStubFlag ,DPT.versionnum,BAT.batversionnum,CTD.chktxnversionnum from CHECK_TXN_DTLS CTD left outer join Ds_Pay_Txns DPT on DPT.PAYPAYREF=CTD.CONFIRMATION_NO left outer join DS_BATCH BAT on DPT.PAYBATCHREF=BAT.BATBATCHREF where CTD.CONFIRMATION_NO like #confirmationNo:varchar#

#220710#getConfirmPrintDetails.TOColumnMap={confirmationNo=confirmationNo,txnBatchId=txnBatchId,fromAccnt=fromAccnt,payee=payee,sameNameFlag=sameNameFlag,addrline1=addrline1,addrline2=addrline2,addrline3=addrline3,addrline4=addrline4,reqPrntDate=reqPrntDate,amount=amount,printingBranch=printingBranch,pickUpOption=pickUpOption,certifiedChk=certifiedChk,loa=loa,checkNo=checkNo,memo1=memo1,memo2=memo2,printMemoCheckFlag=printMemoCheckFlag,printMemoStubFlag=printMemoStubFlag,versionnum=versionnum,batversionnum=batversionnum,chktxnversionnum=chktxnversionnum}
#For CR132#
getConfirmPrintDetails.Query=select DPT.paypayref as confirmationNo,DPT.paybatchref as txnBatchId,COALESCE(SUBSTR(DPT.FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(DPT.FROMBR_ACCT_NO_FA,4,6)  || '-' || SUBSTR(DPT.FROMBR_ACCT_NO_FA,10,3),DPT.PAYPAYEEID) as fromAccnt,CTD.payee_name as payee,DPT.SAME_NAME_FLAG as sameNameFlag,DELIVERY_ADDRESS_LINE1 as addrline1,DELIVERY_ADDRESS_LINE2 as addrline2,DELIVERY_ADDRESS_LINE3 as addrline3,DELIVERY_ADDRESS_LINE4 as addrline4,CTD.EST_PICKUP_TIME as reqPrntDate,DPT.PAYDEBITAMT as amount,CTD.printing_branch as printingBranch,CTD.pickup_option as pickUpOption,CTD.certified_check_flag as certifiedChk,DPT.auth_mode as loa,CTD.check_no as checkNo,CTD.memo_line1 as memo1,CTD.memo_line2 as memo2,CTD.print_memo_check_flag as printMemoCheckFlag,CTD.print_memo_stub_flag as printMemoStubFlag ,DPT.versionnum,BAT.batversionnum,CTD.chktxnversionnum,CTD.delivered_to_type as delivertToType,CTD.delivered_to_name as delivertToName,CTD.type_of_id as typeOfId,CTD.id_number as idNumber from CHECK_TXN_DTLS CTD left outer join Ds_Pay_Txns DPT on DPT.PAYPAYREF=CTD.CONFIRMATION_NO left outer join DS_BATCH BAT on DPT.PAYBATCHREF=BAT.BATBATCHREF where CTD.CONFIRMATION_NO like #confirmationNo:varchar#
getConfirmPrintDetails.TOColumnMap={confirmationNo=confirmationNo,txnBatchId=txnBatchId,fromAccnt=fromAccnt,payee=payee,sameNameFlag=sameNameFlag,addrline1=addrline1,addrline2=addrline2,addrline3=addrline3,addrline4=addrline4,reqPrntDate=reqPrntDate,amount=amount,printingBranch=printingBranch,pickUpOption=pickUpOption,certifiedChk=certifiedChk,loa=loa,checkNo=checkNo,memo1=memo1,memo2=memo2,printMemoCheckFlag=printMemoCheckFlag,printMemoStubFlag=printMemoStubFlag,versionnum=versionnum,batversionnum=batversionnum,chktxnversionnum=chktxnversionnum,delivertToType=delivertToType,delivertToName=delivertToName,typeOfId=typeOfId,idNumber=idNumber}
getConfirmPrintDetails.OutputType=com.tcs.ebw.payments.transferobject.ConfirmPrintSuccessOutputTO
getConfirmPrintDetails.StmtType=PreparedStatement

getTypeOfIdForClient.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_TYPEOFID_CLIENT' order by dmndomainval
getTypeOfIdForClient.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getTypeOfIdForClient.OutputType=java.util.Vector

getTypeOfIdForThirdParty.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_TYPEOFID_THIRD_PARTY' order by dmndomainval
getTypeOfIdForThirdParty.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getTypeOfIdForThirdParty.OutputType=java.util.Vector

insertChkPrintDtls.Query=insert into check_print_dtls (confirmation_no,check_no,check_status,void_reason_code,issue_dt,print_ops_center,	print_ops_office,bank_alpha_code,gl_office,gl_base,gl_type,bank_no,ops_center) values(#confirmation_no:varchar#,#check_no:varchar#,#check_status:varchar#,#void_reason_code:numeric#,CURRENT_TIMESTAMP,#print_ops_center:varchar#,#print_ops_office:varchar#,#bank_alpha_code:varchar#,#gl_office:varchar#,#gl_base:varchar#,#gl_type:varchar#,#bank_no:varchar#,#ops_center:varchar#)
insertChkPrintDtls.StmtType=PreparedStatement

updateChkNo.Query=update check_txn_dtls set chktxnversionnum=chktxnversionnum+1, check_no=#checkNo:varchar#,delivered_to_type=#deliveredToType:varchar#,delivered_to_name=#deliveredToName:varchar#,type_of_id=#typeOfId:numeric#,id_number=#idNumber:varchar# where confirmation_no=#confirmationNo:varchar#
updateChkNo.StmtType=PreparedStatement

updateChkStatus.Query=update check_print_dtls set check_status=#check_status:varchar#,void_reason_desc=#primaryPrinterResponse:varchar#,void_reason_code=#void_reason_code:numeric# where confirmation_no=#confirmation_no:varchar# and check_no=#check_no:varchar#
updateChkStatus.StmtType=PreparedStatement

# Confirm Print Ends Here

# Reports

getMaxPastDatesReport.Query=select VAL from CONFIGURABLE_PARAMETER_VIEW where PRMTR_ID=903
getMaxPastDatesReport.TOColumnMap={VAL=VAL}
getMaxPastDatesReport.OutputType=java.util.ArrayList
getMaxPastDatesReport.StmtType=Statement

getReportTypes.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_OnlineReportType'
getReportTypes.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getReportTypes.OutputType=java.util.Vector



getEmpRelatedAccTrans.Query=select distinct DATE(DPT.CREATEDDATE) AS ENTRY_DATE,DATE(REQUESTED_EXE_DT) AS TRANS_DATE,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One-Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY) END AS FREQUENCY,CASE WHEN CURRENT_OWNER_ROLE='Client' THEN 'Client' WHEN CURRENT_OWNER_ROLE='INITBRAN' THEN 'Branch' WHEN CURRENT_OWNER_ROLE='INITNBOP' THEN 'NBO' ELSE 'Client' END AS OWNER,CASE WHEN TXN_TYPE='INT' THEN 'Internal' WHEN TXN_TYPE IN ('ACH-OUT','ACH-IN') THEN 'ACH' WHEN TXN_TYPE='CHK-REG' THEN  'Chk-Regional' WHEN TXN_TYPE='CHK-LOC' THEN 'Chk-Local'  END  AS TRANS_TYPE,COALESCE(SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6)  || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3),dr.CPYACCNUM )  as From,CASE WHEN (TE1.EMPLOYEE_IND ='1') THEN 'Yes' ELSE 'No' END as FROM_EMP_RELATED, CASE WHEN PAYTYPECODE='CHK' THEN CT.PAYEE_NAME ELSE (COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6)  || '-' || SUBSTR(TOBR_ACCT_NO_FA,10,3),dr.CPYACCNUM)) END as To,CASE WHEN (TE2.EMPLOYEE_IND ='1') THEN 'Yes' ELSE 'No' END as TO_EMP_RELATED,PAYDEBITAMT AS AMOUNT,DD1.dmndomainvaldesc  STATUS,PAYPAYREF AS CONF from DS_DOMAINS DD1,DS_DOMAINS DD2,DS_PAY_TXNS DPT left outer join ds_payee_ref dr on dr.cpypayeeid=dpt.paypayeeaccnum left outer join TRANSACTION_ENRICHMENT TE1 on DPT.PAYPAYREF=TE1.TXN_POS_NUM and TE1.ACCT_DRCRIND = 1 left outer join TRANSACTION_ENRICHMENT TE2 on DPT.PAYPAYREF=TE2.TXN_POS_NUM and TE2.ACCT_DRCRIND = 2 left outer join CHECK_TXN_DTLS CT on DPT.PAYPAYREF=CT.CONFIRMATION_NO WHERE DATE(DPT.CREATEDDATE)=#reportDate:date# AND DD1.dmndomain='D_COEStatusCode' and DD1.dmndomainval=DPT.payccsstatuscode AND (TE1.EMPLOYEE_IND = '1' or TE2.EMPLOYEE_IND='1') and  DD2.dmndomain='D_FrequencyValue' and DD2.dmndomainval=DPT.PAYRECURRING AND  (DPT.KEYACCOUNTNUMBER_FROM=TE1.KEYACCT or DPT.KEYACCOUNTNUMBER_TO=TE2.KEYACCT) and (DPT.PAYPAYREF=TE1. TXN_POS_NUM or DPT.PAYPAYREF=TE2. TXN_POS_NUM) and  ( (0 IN ( SELECT BRANCH_ID+FA_ID FROM USR_DAP_ACCESS where RACFID=#Racfid:varchar# ) )  OR  (FROMBRANCH_ID IN ( SELECT BRANCH_ID FROM USR_DAP_ACCESS WHERE RACFID=#Racfid:varchar# AND FA_ID=0 ) ) OR  (FROMBRANCH_id*10000+FROMFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID=#Racfid:varchar# AND FA_ID<>0 ) ) OR  (TOBRANCH_id IN ( SELECT BRANCH_ID from USR_DAP_ACCESS where RACFID=#Racfid:varchar# AND FA_ID=0 ) ) OR  (TOBRANCH_id*10000+ TOFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID=#Racfid:varchar# AND FA_ID<>0 ) ) ) ORDER BY PAYPAYREF ASC
getEmpRelatedAccTrans.TOColumnMap={ENTRY_DATE=ENTRY_DATE,TRANS_DATE=TRANS_DATE,FREQUENCY=FREQUENCY,OWNER=OWNER,TRANS_TYPE=TRANS_TYPE,FROM=FROM,FROM_EMP_RELATED=FROM_EMP_RELATED,TO=TO,TO_EMP_RELATED=TO_EMP_RELATED,AMOUNT=AMOUNT,STATUS=STATUS,CONF=CONF}
getEmpRelatedAccTrans.StmtType=Statement
getEmpRelatedAccTrans.OutputType=java.util.ArrayList


getPendingPayments.Query=select DATE(DPT.REQUESTED_EXE_DT) AS TRANS_DATE,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One-Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY) END AS FREQUENCY,CASE WHEN TXN_TYPE='INT' THEN 'Internal' WHEN TXN_TYPE IN ('ACH-OUT','ACH-IN') THEN 'ACH' WHEN TXN_TYPE='CHK-REG' THEN  'Chk-Regional' WHEN TXN_TYPE='CHK-LOC' THEN 'Chk-Local'  END  AS TRANS_TYPE,SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6)  || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3)  as From,CASE WHEN PAYTYPECODE='CHK' THEN CT.PAYEE_NAME ELSE (COALESCE(SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6)  || '-' || SUBSTR(TOBR_ACCT_NO_FA,10,3),dr.CPYACCNUM)) END as To,AMOUNT AS AMOUNT,(select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_COEStatusCode' and dmndomainval=payccsstatuscode) as STATUS,NATIONAL_BALANCE AS PROJECTED_SPENDING_POWER,NATIONAL_BALANCE-PEND_TXN_AMT AS DEFECIENT_AMOUNT,CONF_NUM AS CONF from Insufficient_Funds_Txn_Log IFT,DS_PAY_TXNS DPT left outer join CHECK_TXN_DTLS CT on DPT.PAYPAYREF=CT.CONFIRMATION_NO left outer join ds_payee_ref dr on dr.cpypayeeid=dpt.paypayeeaccnum WHERE DATE(IFT.DATE_OF_INSERTION)=#reportDate:date#  AND DPT.PAYPAYREF=IFT.CONF_NUM  AND ( (0 IN ( SELECT BRANCH_ID+FA_ID FROM USR_DAP_ACCESS where RACFID=#Racfid:varchar# ) )  OR  (FROMBRANCH_ID IN ( SELECT BRANCH_ID FROM USR_DAP_ACCESS WHERE RACFID=#Racfid:varchar# AND FA_ID=0 ) ) OR  (FROMBRANCH_id*10000+FROMFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID=#Racfid:varchar# AND FA_ID<>0 ) ) OR  (TOBRANCH_id IN ( SELECT BRANCH_ID from USR_DAP_ACCESS where RACFID=#Racfid:varchar# AND FA_ID=0 ) ) OR  (TOBRANCH_id*10000+ TOFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID=#Racfid:varchar# AND FA_ID<>0 ) ) ) ORDER BY TRANS_DATE,From,CONF ASC
getPendingPayments.TOColumnMap={TRANS_DATE=TRANS_DATE,FREQUENCY=FREQUENCY,TRANS_TYPE=TRANS_TYPE,FROM=FROM,TO=TO,AMOUNT=AMOUNT,STATUS=STATUS,PROJECTED_SPENDING_POWER=PROJECTED_SPENDING_POWER,DEFECIENT_AMOUNT=DEFECIENT_AMOUNT,CONF=CONF}
getPendingPayments.StmtType=Statement
getPendingPayments.OutputType=java.util.ArrayList

getCheckActivity.Query=select  DATE(DPT.CREATEDDATE) AS ENTRY_DATE,DATE(REQUESTED_EXE_DT) AS TRANS_DATE,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One-Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY) END AS FREQUENCY,CASE WHEN CURRENT_OWNER_ROLE='Client' THEN 'Client' WHEN CURRENT_OWNER_ROLE='INITBRAN' THEN 'Branch' WHEN CURRENT_OWNER_ROLE='INITNBOP' THEN 'NBO' ELSE 'Client' END AS OWNER,CASE WHEN TXN_TYPE='CHK-REG' THEN 'Chk-Regional' else 'Chk-Local'  END  AS TRANS_TYPE,SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6)  || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3)  as From,CT.PAYEE_NAME AS  PAYEE,PAYDEBITAMT AS AMOUNT,(select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_COEStatusCode' and dmndomainval=payccsstatuscode) as STATUS,CT.TRACKING_ID AS TRACKING,CASE WHEN CT.CERTIFIED_CHECK_FLAG='N' THEN 'No' else 'Yes' END AS CERTIFIED,CASE WHEN (CP.CHECK_STATUS='A' and CT.CHECK_NO <>'' ) THEN 'Active' WHEN (CP.CHECK_STATUS='V' and CT.CHECK_NO <>'' ) THEN 'Void' ELSE '' END AS CHECK_STATUS,CP.VOID_REASON_DESC AS VOID_REASON_CODE,(SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_PickupOptions' and dmndomainval=CHAR(PICKUP_OPTION)) AS DELIVERY_OPTIONS,CP.CHECK_NO AS CHECK,PAYPAYREF AS CONF,AUTH_MODE AS AUTH from DS_PAY_TXNS DPT,CHECK_TXN_DTLS CT,CHECK_PRINT_DTLS CP WHERE CT.CONFIRMATION_NO=CP.CONFIRMATION_NO AND DATE(CP.ISSUE_DT)=#reportDate:date# AND  DPT.TXN_TYPE IN ('CHK-REG','CHK-LOC')  AND DPT.PAYPAYREF=CT.CONFIRMATION_NO AND   ( (0 IN ( SELECT BRANCH_ID+FA_ID FROM USR_DAP_ACCESS where RACFID=#Racfid:varchar# ) )  OR  (FROMBRANCH_ID IN ( SELECT BRANCH_ID FROM USR_DAP_ACCESS WHERE RACFID=#Racfid:varchar# AND FA_ID=0 ) ) OR  (FROMBRANCH_id*10000+FROMFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID=#Racfid:varchar# AND FA_ID<>0 ) ) ) ORDER BY PAYPAYREF,CT.CHECK_NO ASC
getCheckActivity.TOColumnMap={ENTRY_DATE=ENTRY_DATE,TRANS_DATE=TRANS_DATE,FREQUENCY=FREQUENCY,OWNER=OWNER,TRANS_TYPE=TRANS_TYPE,FROM=FROM,PAYEE=PAYEE,AMOUNT=AMOUNT,STATUS=STATUS,TRACKING=TRACKING,CERTIFIED=CERTIFIED,CHECK_STATUS=CHECK_STATUS,VOID_REASON_CODE=VOID_REASON_CODE,DELIVERY_OPTIONS=DELIVERY_OPTIONS,CHECK=CHECK,CONF=CONF,AUTH=AUTH}
getCheckActivity.StmtType=Statement
getCheckActivity.OutputType=java.util.ArrayList

getOtherBranchTrans.Query=select distinct DATE(DPT.CREATEDDATE) AS ENTRY_DATE,DATE(REQUESTED_EXE_DT) AS TRANS_DATE,CASE WHEN (SELECT dmndomainvaldesc from DS_DOMAINS where dmndomain='D_FrequencyValue' and dmndomainval=PAYRECURRING)='OneTime' THEN 'One-Time' ELSE (select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_Duration' and dmndomainval=PAYFREQUENCY) END AS FREQUENCY,CASE WHEN CURRENT_OWNER_ROLE='Client' THEN 'Client' WHEN CURRENT_OWNER_ROLE='INITBRAN' THEN 'Branch' WHEN CURRENT_OWNER_ROLE='INITNBOP' THEN 'NBO' ELSE 'Client' END AS OWNER,CASE WHEN TXN_TYPE='INT' THEN 'Internal' END AS TRANS_TYPE,SUBSTR(FROMBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(FROMBR_ACCT_NO_FA,4,6)  || '-' || SUBSTR(FROMBR_ACCT_NO_FA,10,3)  as From,SUBSTR(TOBR_ACCT_NO_FA,1,3) || '-' || SUBSTR(TOBR_ACCT_NO_FA,4,6)  || '-' || SUBSTR(TOBR_ACCT_NO_FA,10,3)  as To,PAYDEBITAMT AS AMOUNT,(select dmndomainvaldesc from DS_DOMAINS where dmndomain='D_COEStatusCode' and dmndomainval=payccsstatuscode) as STATUS,PAYPAYREF AS CONF from DS_PAY_TXNS DPT WHERE TXN_TYPE='INT' AND DATE(DPT.CREATEDDATE)=#reportDate:timestamp#  AND   ( (FROMBRANCH_ID NOT IN ( SELECT BRANCH_ID FROM USR_DAP_ACCESS WHERE RACFID=#Racfid:varchar# AND FA_ID=0 ) ) AND  (FROMBRANCH_id*10000+FROMFA_id NOT IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID=#Racfid:varchar# AND FA_ID<>0 ) ) AND  ((TOBRANCH_id IN ( SELECT BRANCH_ID from USR_DAP_ACCESS where RACFID=#Racfid:varchar# AND FA_ID=0 ) ) OR  (TOBRANCH_id*10000+ TOFA_id IN ( SELECT BRANCH_ID*10000+FA_ID from USR_DAP_ACCESS where RACFID=#Racfid:varchar# AND FA_ID<>0 ) )) ) ORDER BY PAYPAYREF ASC
getOtherBranchTrans.TOColumnMap={ENTRY_DATE=ENTRY_DATE,TRANS_DATE=TRANS_DATE,FREQUENCY=FREQUENCY,OWNER=OWNER,TRANS_TYPE=TRANS_TYPE,FROM=FROM,TO=TO,AMOUNT=AMOUNT,STATUS=STATUS,CONF=CONF}
getOtherBranchTrans.StmtType=Statement
getOtherBranchTrans.OutputType=java.util.ArrayList

# Reports Ends Here


###########################################   LIMITS  ##################################


#Check Limit Starts
#getLimitTierValues.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain= 'D_Limit_Tier'
getLimitTierValues.Query=select MNMNC,DSCRPTN from system_codes where CODE_NAME= 'd_Limit_Tier'
#getLimitTierValues.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getLimitTierValues.TOColumnMap={MNMNC=MNMNC,DSCRPTN=DSCRPTN}
getLimitTierValues.OutputType=java.util.Vector


#Limit Maintenance Starts
getLevelValues.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain= 'D_Level'
getLevelValues.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getLevelValues.OutputType=java.util.Vector

getBypassValues.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain= 'D_Bypassflg'
getBypassValues.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getBypassValues.OutputType=java.util.Vector

######### ADD LIMIT
setLimitDetails.Query=Insert into limits_control_master(seq_num,txn_typ,LIMIT_LEVEL,bypass_flag,tier,app_flag,daily_limit,weekly_limit,monthly_limit,dly_txn_frq_lmt,wkly_txn_frq_lmt,mnthly_txn_frq_lmt,date1,limit_ou_id,limits_control_master_ver,dm_lstupddt,dm_btnumber,dm_btid,dm_userid,dm_wsid,status,account_no) values (next value for limitscontrolmaster_seq,'ACH-OUT',#level:varchar#,#bypass_flag:varchar#,#tier:varchar#,1,#daily_limit:BigDecimal#,#weekly_limit:BigDecimal#,#monthly_limit:BigDecimal#,#dly_txn_frq_lmt:numeric#,#wkly_txn_frq_lmt:numeric#,#mnthly_txn_frq_lmt:numeric#,CURRENT_TIMESTAMP,'GMSBKUSNYC',1,CURRENT_TIMESTAMP,1,1,1,1,1,#account_no:varchar#)
setLimitDetails.StmtType=Statement

#Added for defect  id:53841 by 350036
checkExistingAcct.Query=select count(*) as count from LIMITS_CONTROL_MASTER where TXN_TYP='ACH-OUT' and DEL_SEQ_NUM=1 and ((SUBSTR(ACCOUNT_NO,1,3)=#officeNo:varchar#) and (SUBSTR(ACCOUNT_NO,4,6)=#accNo:varchar#))
checkExistingAcct.TOColumnMap={count=count}
checkExistingAcct.OutputType=java.util.ArrayList
checkExistingAcct.StmtType=Statement

######### VIEW LIMIT
getLimitDetails.Query=select LIMIT_LEVEL,TIER,BYPASS_FLAG,DLY_TXN_FRQ_LMT,DAILY_LIMIT,WKLY_TXN_FRQ_LMT,WEEKLY_LIMIT,MNTHLY_TXN_FRQ_LMT,MONTHLY_LIMIT,SEQ_NUM,ACCOUNT_NO  from LIMITS_CONTROL_MASTER where SEQ_NUM=#seq_num:varchar# and TIER=#tier:varchar# and DEL_SEQ_NUM=1
getLimitDetails.TOColumnMap={LIMIT_LEVEL=level,tier=tier,bypass_flag=bypass_flag,dly_txn_frq_lmt=dly_txn_frq_lmt,daily_limit=daily_limit,wkly_txn_frq_lmt=wkly_txn_frq_lmt,weekly_limit=weekly_limit,mnthly_txn_frq_lmt=mnthly_txn_frq_lmt,monthly_limit=monthly_limit,seq_num=seq_num,account_no=account_no}
getLimitDetails.StmtType=PreparedStatement
getLimitDetails.OutputType=com.tcs.ebw.payments.transferobject.LimitOutNDBTO

########## DELETE LIMIT
deleteLimitDetails.Query=update LIMITS_CONTROL_MASTER set STATUS=3,DEL_SEQ_NUM=next value for limits_del_seq where SEQ_NUM=#seq_num:varchar# and TIER=#tier:varchar# and DEL_SEQ_NUM=1
deleteLimitDetails.StmtType=PreparedStatement





########## EDIT LIMIT

updateLimitDetails.Query=update limits_control_master set DAILY_LIMIT=#daily_limit:BigDecimal#,DLY_TXN_FRQ_LMT=#dly_txn_frq_lmt:numeric#,WEEKLY_LIMIT=#weekly_limit:BigDecimal#,WKLY_TXN_FRQ_LMT=#wkly_txn_frq_lmt:numeric#,MONTHLY_LIMIT=#monthly_limit:BigDecimal#,MNTHLY_TXN_FRQ_LMT=#mnthly_txn_frq_lmt:numeric# where seq_num=#seq_num:numeric# and tier=#tier:varchar# and DEL_SEQ_NUM=1

updateLimitDetails.StmtType=PreparedStatement


######### EDIT VIEW LIMIT DETAILS
getLimitEditDetails.Query=select LIMIT_LEVEL,TIER,DAILY_LIMIT,DLY_TXN_FRQ_LMT,WEEKLY_LIMIT,WKLY_TXN_FRQ_LMT,MONTHLY_LIMIT,MNTHLY_TXN_FRQ_LMT,case when LIMIT_LEVEL='Account' then ACCOUNT_NO ELSE  DSCRPTN END AS ACCOUNT_NO from limits_control_master left outer join system_codes on TIER = MNMNC and CODE_NAME='d_Limit_Tier' where seq_num=#seq_num:numeric# and tier = #tier:varchar# and DEL_SEQ_NUM=1
getLimitEditDetails.TOColumnMap={LIMIT_LEVEL=LIMIT_LEVEL,TIER=tier,DAILY_LIMIT=daily_limit,DLY_TXN_FRQ_LMT=dly_txn_frq_lmt,WEEKLY_LIMIT=weekly_limit,WKLY_TXN_FRQ_LMT=wkly_txn_frq_lmt,MONTHLY_LIMIT=monthly_limit,MNTHLY_TXN_FRQ_LMT=mnthly_txn_frq_lmt,ACCOUNT_NO=account_no}
getLimitEditDetails.OutputType=com.tcs.ebw.payments.transferobject.LimitEditOutNDBTO
getLimitEditDetails.StmtType=Statement

########## LIMIT MAINTANANCE

#Amount#getLimitList_page.Query=select LEVEL,TIER,ACCOUNT_NO,DLY_TXN_FRQ_LMT,DAILY_LIMIT,WKLY_TXN_FRQ_LMT,WEEKLY_LIMIT,MNTHLY_TXN_FRQ_LMT,MONTHLY_LIMIT ,ACTION,SEQ_NUM,ACTTIER,count(*) over() total_rows from (select LIMIT_LEVEL as LEVEL,TIER,case when LIMIT_LEVEL='Account' then SUBSTR(ACCOUNT_NO,1,3) || '-' || SUBSTR(ACCOUNT_NO,4,6) || '-' || SUBSTR(ACCOUNT_NO,10,3) ELSE  DSCRPTN END AS ACCOUNT_NO,DLY_TXN_FRQ_LMT,DAILY_LIMIT,WKLY_TXN_FRQ_LMT,WEEKLY_LIMIT,MNTHLY_TXN_FRQ_LMT,MONTHLY_LIMIT ,'View,Edit,Delete' as ACTION,SEQ_NUM,TIER as ACTTIER from LIMITS_CONTROL_MASTER left outer join system_codes on TIER = MNMNC and CODE_NAME='d_Limit_Tier' where STATUS IS null OR STATUS !=3 #sortlogic:varchar#) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only

getLimitList_page.Query=select LEVEL,TIER,ACCOUNT_NO,DLY_TXN_FRQ_LMT,DAILY_LIMIT,WKLY_TXN_FRQ_LMT,WEEKLY_LIMIT,MNTHLY_TXN_FRQ_LMT,MONTHLY_LIMIT ,ACTION,SEQ_NUM,ACTTIER,count(*) over() total_rows from (select LIMIT_LEVEL as LEVEL,TIER,case when LIMIT_LEVEL='Account' then SUBSTR(ACCOUNT_NO,1,3) || '-' || SUBSTR(ACCOUNT_NO,4,6) || '-' || SUBSTR(ACCOUNT_NO,10,3) ELSE  DSCRPTN END AS ACCOUNT_NO,DLY_TXN_FRQ_LMT,CASE when DAILY_LIMIT < 0.000001 then 0.000001 else DAILY_LIMIT end as DAILY_LIMIT,WKLY_TXN_FRQ_LMT,CASE when WEEKLY_LIMIT < 0.000001 then 0.000001 else WEEKLY_LIMIT end as WEEKLY_LIMIT,MNTHLY_TXN_FRQ_LMT,CASE when MONTHLY_LIMIT < 0.000001 then 0.000001 else MONTHLY_LIMIT end as MONTHLY_LIMIT,'View,Edit,Delete' as ACTION,SEQ_NUM,TIER as ACTTIER from LIMITS_CONTROL_MASTER left outer join system_codes on TIER = MNMNC and CODE_NAME='d_Limit_Tier' where STATUS IS null OR STATUS !=3 #sortlogic:varchar#) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only
getLimitList_page.TOColumnMap={LEVEL=LEVEL,TIER=TIER,ACCOUNT_NO=ACCOUNT_NO,DLY_TXN_FRQ_LMT=DLY_TXN_FRQ_LMT,DAILY_LIMIT=DAILY_LIMIT,WKLY_TXN_FRQ_LMT=WKLY_TXN_FRQ_LMT,WEEKLY_LIMIT=WEEKLY_LIMIT,MNTHLY_TXN_FRQ_LMT=MNTHLY_TXN_FRQ_LMT,MONTHLY_LIMIT=MONTHLY_LIMIT,ACTION=ACTION,SEQ_NUM=SEQ_NUM,ACTTIER=ACTTIER,total_rows=total_rows}
getLimitList_page.OutputType=java.util.ArrayList
getLimitList.StmtType=Statement
getLimitList.PgnUniqueKeys=SEQ_NUM:numeric:DESC
getLimitList.SortKeys=ACCOUNT_NO:Varchar:DESC#SEQ_NUM:numeric:DESC



#Amount#getSearchLimitList_page.Query=select LEVEL,TIER,ACCOUNT_NO,DLY_TXN_FRQ_LMT,DAILY_LIMIT,WKLY_TXN_FRQ_LMT,WEEKLY_LIMIT,MNTHLY_TXN_FRQ_LMT,MONTHLY_LIMIT ,ACTION,SEQ_NUM,ACTTIER,count(*) over() total_rows from (select LIMIT_LEVEL as LEVEL,TIER,case when LIMIT_LEVEL='Account' then SUBSTR(ACCOUNT_NO,1,3) || '-' || SUBSTR(ACCOUNT_NO,4,6) || '-' || SUBSTR(ACCOUNT_NO,10,3) ELSE  DSCRPTN END AS ACCOUNT_NO,DLY_TXN_FRQ_LMT,DAILY_LIMIT,WKLY_TXN_FRQ_LMT,WEEKLY_LIMIT,MNTHLY_TXN_FRQ_LMT,MONTHLY_LIMIT ,'View,Edit,Delete' as ACTION,SEQ_NUM,TIER as ACTTIER from LIMITS_CONTROL_MASTER left outer join system_codes on TIER = MNMNC and CODE_NAME='d_Limit_Tier' where LIMIT_LEVEL=#level:varchar# and TIER like #tier:varchar# and BYPASS_FLAG=#bypass_flag:varchar# and SUBSTR(ACCOUNT_NO,1,3) like #officeNo:varchar# and SUBSTR(ACCOUNT_NO,4,6) like #accNo:varchar# and SUBSTR(ACCOUNT_NO,10,3) like #faNo:varchar# and (STATUS IS null OR STATUS !=3) #sortlogic:varchar#) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only

getSearchLimitList_page.Query=select LEVEL,TIER,ACCOUNT_NO,DLY_TXN_FRQ_LMT,DAILY_LIMIT,WKLY_TXN_FRQ_LMT,WEEKLY_LIMIT,MNTHLY_TXN_FRQ_LMT,MONTHLY_LIMIT ,ACTION,SEQ_NUM,ACTTIER,count(*) over() total_rows from (select LIMIT_LEVEL as LEVEL,TIER,case when LIMIT_LEVEL='Account' then SUBSTR(ACCOUNT_NO,1,3) || '-' || SUBSTR(ACCOUNT_NO,4,6) || '-' || SUBSTR(ACCOUNT_NO,10,3) ELSE  DSCRPTN END AS ACCOUNT_NO,DLY_TXN_FRQ_LMT,CASE when DAILY_LIMIT < 0.000001 then 0.000001 else DAILY_LIMIT end as DAILY_LIMIT,WKLY_TXN_FRQ_LMT,CASE when WEEKLY_LIMIT < 0.000001 then 0.000001 else WEEKLY_LIMIT end as WEEKLY_LIMIT,MNTHLY_TXN_FRQ_LMT,CASE when MONTHLY_LIMIT < 0.000001 then 0.000001 else MONTHLY_LIMIT end as MONTHLY_LIMIT ,'View,Edit,Delete' as ACTION,SEQ_NUM,TIER as ACTTIER from LIMITS_CONTROL_MASTER left outer join system_codes on TIER = MNMNC and CODE_NAME='d_Limit_Tier' where LIMIT_LEVEL=#level:varchar# and TIER like #tier:varchar# and BYPASS_FLAG=#bypass_flag:varchar# and SUBSTR(ACCOUNT_NO,1,3) like #officeNo:varchar# and SUBSTR(ACCOUNT_NO,4,6) like #accNo:varchar# and SUBSTR(ACCOUNT_NO,10,3) like #faNo:varchar# and (STATUS IS null OR STATUS !=3) #sortlogic:varchar#) as x where #conditionlogic:varchar#  fetch first #rowsinapage:numeric# rows only
getSearchLimitList_page.TOColumnMap={LEVEL=LEVEL,TIER=TIER,ACCOUNT_NO=ACCOUNT_NO,DLY_TXN_FRQ_LMT=DLY_TXN_FRQ_LMT,DAILY_LIMIT=DAILY_LIMIT,WKLY_TXN_FRQ_LMT=WKLY_TXN_FRQ_LMT,WEEKLY_LIMIT=WEEKLY_LIMIT,MNTHLY_TXN_FRQ_LMT=MNTHLY_TXN_FRQ_LMT,MONTHLY_LIMIT=MONTHLY_LIMIT,ACTION=ACTION,SEQ_NUM=SEQ_NUM,ACTTIER=ACTTIER,total_rows=total_rows}
getSearchLimitList_page.OutputType=java.util.ArrayList
getSearchLimitList.StmtType=Statement
getSearchLimitList.PgnUniqueKeys=SEQ_NUM:numeric:DESC
getSearchLimitList.SortKeys=ACCOUNT_NO:Varchar:DESC#SEQ_NUM:numeric:DESC


#Limit Maintenance Ends

############################ LIMITS END  ###############################

#checking Reason Code

checkReasonCode.Query=select RSN_CODE,del_seq_num from REASON_CODES where RSN_CODE=#rsn_code:varchar# and del_seq_num=1
checkReasonCode.StmtType=Statement
checkReasonCode.TOColumnMap={RSN_CODE=RSN_CODE,del_seq_num=del_seq_num}
checkReasonCode.OutputType=java.util.ArrayList

#checking Limit

checkLimitTier.Query=select account_no,del_seq_num from limits_control_master where account_no=#account_no:varchar# and del_seq_num=1
checkLimitTier.StmtType=Statement
checkLimitTier.TOColumnMap={account_no=account_no,del_seq_num=del_seq_num}
checkLimitTier.OutputType=java.util.ArrayList



#ACH Accounts Approval Starts
#Modified for defect id:54915 by Shashi

getExtAccApprovalDefaultLIST_page.Query=select versionnum,CPYPAYEENAME1,THIRD_PARTY_IND,CPYBONAME1,CPYACCNUM,CPYSTATUS,ACCOUNT_OWNER,ACTION,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,CPYBOADDR3,createddate,key_client,key_link,statuscode,approval_date,total_rows from (select DPT.versionnum,DPT.CPYPAYEENAME1,DPT.THIRD_PARTY_IND,dsbnk.bnkdes as CPYBONAME1,DPT.CPYACCNUM,dsdom.dmndomainvaldesc as CPYSTATUS,COALESCE(DPT.ACCOUNT_OWNER,DPT.CREATEDBY) as ACCOUNT_OWNER,'View' as ACTION,DPT.CPYACCTYPE,DPT.CPYPAYEEID,DPT.CPYBRANCHSCODE,CPYACCNUM as CPYACCNUM1,DPT.LIFE_USER_ID,DPT.CPYBANKCODE,'' as CPYBOADDR3,date(DPT.createddate) as createddate,DPT.key_client,DPT.key_link,cpystatus as statuscode,DPT.approval_date,count(*) over() total_rows from  DS_PAYEE_REF DPT left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS left outer join DS_BANK_REF dsbnk on dsbnk.bnkcode=DPT.CPYBANKCODE where DPT.CPYSTATUS in ('40')  #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only with UR
getExtAccApprovalDefaultLIST_page.TOColumnMap={versionnum=versionnum,CPYPAYEENAME1=CPYPAYEENAME1,THIRD_PARTY_IND=THIRD_PARTY_IND,CPYBONAME1=CPYBONAME1,CPYACCNUM=CPYACCNUM,CPYSTATUS=CPYSTATUS,ACCOUNT_OWNER=ACCOUNT_OWNER,ACTION=ACTION,CPYACCTYPE=CPYACCTYPE,CPYPAYEEID=CPYPAYEEID,CPYBRANCHSCODE=CPYBRANCHSCODE,CPYACCNUM1=CPYACCNUM1,LIFE_USER_ID=LIFE_USER_ID,CPYBANKCODE=CPYBANKCODE,CPYBOADDR3=CPYBOADDR3,createddate=createddate,key_client=key_client,key_link=key_link,statuscode=statuscode,approval_date=approval_date,total_rows=total_rows}
getExtAccApprovalDefaultLIST_page.OutputType=java.util.ArrayList
getExtAccApprovalDefaultLIST.StmtType=PreparedStatement
getExtAccApprovalDefaultLIST.PgnUniqueKeys=approval_date:Date:ASC#CPYPAYEEID:varchar:ASC
getExtAccApprovalDefaultLIST.SortKeys=approval_date:Date:ASC#CPYPAYEEID:varchar:ASC



getExtAccApprovalSearchLIST_page.Query=select versionnum,CPYPAYEENAME1,THIRD_PARTY_IND,CPYBONAME1,CPYACCNUM,CPYSTATUS,ACCOUNT_OWNER,ACTION,CPYACCTYPE,CPYPAYEEID,CPYBRANCHSCODE,CPYACCNUM1,LIFE_USER_ID,CPYBANKCODE,CPYBOADDR3,createddate,key_client,key_link,statuscode,approval_date,total_rows from (select DPT.versionnum,DPT.CPYPAYEENAME1,DPT.THIRD_PARTY_IND,dsbnk.bnkdes as CPYBONAME1,DPT.CPYACCNUM,dsdom.dmndomainvaldesc as CPYSTATUS,COALESCE(DPT.ACCOUNT_OWNER,DPT.CREATEDBY) as ACCOUNT_OWNER,'View' as ACTION,DPT.CPYACCTYPE,DPT.CPYPAYEEID,DPT.CPYBRANCHSCODE,CPYACCNUM as CPYACCNUM1,DPT.LIFE_USER_ID,DPT.CPYBANKCODE,'' as CPYBOADDR3,date(DPT.createddate) as createddate,DPT.key_client,DPT.key_link,cpystatus as statuscode,DPT.approval_date,count(*) over() total_rows from  DS_PAYEE_REF DPT left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_StatusCode' and dsdom.dmndomainval=DPT.CPYSTATUS left outer join DS_BANK_REF dsbnk on dsbnk.bnkcode=DPT.CPYBANKCODE where  DPT.CPYSTATUS in ('40') and DPT.CPYBANKCODE like #extAccMainRoutingNum:varchar# and DPT.CPYACCNUM like #extAccMainAccNum:varchar# and UPPER(DPT.ACCOUNT_OWNER) like #accountOwnerMSSB:varchar#   #sortlogic:varchar# ) as x where #conditionlogic:varchar# fetch first #rowsinapage:numeric# rows only with UR
getExtAccApprovalSearchLIST_page.TOColumnMap={versionnum=versionnum,CPYPAYEENAME1=CPYPAYEENAME1,THIRD_PARTY_IND=THIRD_PARTY_IND,CPYBONAME1=CPYBONAME1,CPYACCNUM=CPYACCNUM,CPYSTATUS=CPYSTATUS,ACCOUNT_OWNER=ACCOUNT_OWNER,ACTION=ACTION,CPYACCTYPE=CPYACCTYPE,CPYPAYEEID=CPYPAYEEID,CPYBRANCHSCODE=CPYBRANCHSCODE,CPYACCNUM1=CPYACCNUM1,LIFE_USER_ID=LIFE_USER_ID,CPYBANKCODE=CPYBANKCODE,CPYBOADDR3=CPYBOADDR3,createddate=createddate,key_client=key_client,key_link=key_link,statuscode=statuscode,approval_date=approval_date,total_rows=total_rows}
getExtAccApprovalSearchLIST_page.OutputType=java.util.ArrayList
getExtAccApprovalSearchLIST.StmtType=PreparedStatement
getExtAccApprovalSearchLIST.PgnUniqueKeys=approval_date:Date:ASC#CPYPAYEEID:varchar:ASC
getExtAccApprovalSearchLIST.SortKeys=approval_date:Date:ASC#CPYPAYEEID:varchar:ASC

# Changed by : 188511 Date : 05/03/2011 RC3 Observation- Ends

# Changed by : 188511 Date : 05/12/2011 Bugzilla : 34407 - Starts
getExtAcctDtlsOnLoad.Query=select DPR.versionnum,DPR.third_party_ind as thirdPartyAcct,dsbnk.bnkdes as extBoName,dsdom.dmndomainvaldesc as accType,DPR.cpyaccnum as extAccNo,DPR.cpypayeename1 as nickName, COALESCE(DPR.account_owner,DPR.createdby) as accountOwnerMSSB,DPR.cpypayeeid,DPR.cpystatus,DPR.cpypayeerefno,eaod.first_name as extAcctName from  DS_PAYEE_REF DPR left outer join DS_DOMAINS dsdom on dsdom.dmndomain='D_NewExtAcctType' and dsdom.dmndomainval=dpr.cpyacctype left outer join DS_BANK_REF dsbnk on dsbnk.bnkcode=DPR.cpybankcode left outer join EXT_ACCT_OWNER_DTLS eaod on eaod.CPYPAYEEID=DPR.cpypayeeid where DPR.cpypayeeid like #cpypayeeid:varchar# and 1=1 with UR
getExtAcctDtlsOnLoad.TOColumnMap={versionnum=versionnum,thirdPartyAcct=thirdPartyAcct,extBoName=extBoName,accType=accType,extAccNo=extAccNo,nickName=nickName,accountOwnerMSSB=accountOwnerMSSB,cpypayeeid=cpypayeeid,cpystatus=cpystatus,cpypayeerefno=cpypayeerefno,extAcctName=extAcctName}
getExtAcctDtlsOnLoad.OutputType=com.tcs.ebw.payments.transferobject.DsPayeeRefNonDBTO
getExtAcctDtlsOnLoad.StmtType=Statement
# Changed by : 188511 Date : 05/12/2011 Bugzilla : 34407 - Ends


getExtAcctApprovalReason.Query=select dmndomainval,dmndomainvaldesc from ds_domains where dmndomain='D_ExtAcctApprReason' order by dmndomainval
getExtAcctApprovalReason.TOColumnMap={dmndomainval=dmndomainval,dmndomainvaldesc=dmndomainvaldesc}
getExtAcctApprovalReason.OutputType=java.util.Vector

# Changed by : 188511 Date : 06/01/2011 for Alerts and Notifications - Starts
getExtAcctLogDtls.Query=select dpr.versionnum as ver_trials,dpr.cpypayeeid,dsbnk.bnkdes as cpyboname1,dpr.cpyacctype,dpr.cpypayeename1,dpr.cpyaccnum, dpr.cpybankcode,dpr.cpystatus,dpr.life_user_id,dpr.key_client,dpr.key_link,dpr.sign_up_mode,dpr.account_owner,dpr.account_form,dpr.voided_check,dpr.primary_int_acct,dpr.approval_date from ds_payee_ref dpr left outer join DS_BANK_REF dsbnk on dsbnk.bnkcode=dpr.CPYBANKCODE where dpr.cpypayeeid=#cpypayeeid:varchar# and 1=1 with UR
getExtAcctLogDtls.TOColumnMap={ver_trials=ver_trials,cpypayeeid=cpypayeeid,cpyboname1=cpyboname1,cpyacctype=cpyacctype,cpypayeename1=cpypayeename1,cpyaccnum=cpyaccnum,cpybankcode=cpybankcode,cpystatus=cpystatus,life_user_id=life_user_id,key_client=key_client,key_link=key_link,sign_up_mode=sign_up_mode,account_owner=account_owner,account_form=account_form,voided_check=voided_check,primary_int_acct=primary_int_acct,approval_date=approval_date}
getExtAcctLogDtls.OutputType=com.tcs.ebw.payments.transferobject.DsPayeeRefLogTO
getExtAcctLogDtls.StmtType=PreparedStatement
# Changed by : 188511 Date : 06/01/2011 for Alerts and Notifications - Ends

# Changed by : 188511 Date : 07/08/2011 for CR 261 - Starts
updateApprovalDtls.Query=update ds_payee_ref set versionnum=versionnum+1,cpystatus=#cpystatus:varchar# where cpypayeeid=#cpypayeeid:varchar#
updateApprovalDtls.StmtType=PreparedStatement

# Changed by : 188511 Date : 06/01/2011 for Alerts and Notifications - Starts
setExtAcctApprovalLogDetails.Query=insert into ds_payee_ref_log (cpypayeeid,cpybankcode,cpyboname1,cpyacctype,cpyaccnum,cpypayeename1,fa_id,branch_id,created_modified_date,created_modified_by_id,created_modified_by_emp_id,created_modified_by_role,last_action,life_user_id,ver_trials,cpystatus,deleteflag,sign_up_mode,key_client,key_link,account_owner,account_form,voided_check,usercomments,primary_int_acct,approval_date) values (#cpypayeeid:varchar#,#cpybankcode:varchar#,(select distinct bnkref.BNKDES from DS_BANK_REF bnkref where bnkref.BNKCODE=#cpybankcode:varchar#),#cpyacctype:varchar#,#cpyaccnum:varchar#,#cpypayeename1:varchar#,#fa_id:numeric#,#branch_id:numeric#,CURRENT_TIMESTAMP, #created_modified_by_id:varchar#,#created_modified_by_emp_id:varchar#,#created_modified_by_role:varchar#,#last_action:varchar#,#life_user_id:varchar#,#ver_trials:numeric#,#cpystatus:varchar#,#deleteflag:varchar#,#sign_up_mode:varchar#,#key_client:varchar#,#key_link:varchar#,#account_owner:varchar#,#account_form:varchar#,#voided_check:varchar#,#usercomments:varchar#,#primary_int_acct:varchar#,#approval_date:timestamp#)
setExtAcctApprovalLogDetails.StmtType=PreparedStatement
# Changed by : 188511 Date : 06/01/2011 for Alerts and Notifications - Ends
# Changed by : 188511 Date : 07/08/2011 for CR 261 - Ends

getSuspendedFutureTrxns.Query=select frombr_acct_no_fa,tobr_acct_no_fa,txn_type,acct_user_id,paypymtdate,requested_exe_dt,paydebitamt,paypayref,paybatchref,fromfa_id,frombranch_id,tofa_id,tobranch_id,createdby_name,paydebitaccnum,paypayeeaccnum,keyaccountnumber_from,created_by_role,payccsstatuscode,payrecurring,life_user_id,current_owner_role,par_txn_no,rta_booked_in_flag,paytxneprydate,next_approver_role from ds_pay_txns where paypayeeaccnum=#cpypayeeid:varchar# and payccsstatuscode in('46') and (REQUESTED_EXE_DT > CURRENT_TIMESTAMP)
getSuspendedFutureTrxns.TOColumnMap={frombr_acct_no_fa=frombr_acct_no_fa,tobr_acct_no_fa=tobr_acct_no_fa,txn_type=txn_type,acct_user_id=acct_user_id,paypymtdate=paypymtdate,requested_exe_dt=requested_exe_dt,paydebitamt=paydebitamt,paypayref=paypayref,paybatchref=paybatchref,fromfa_id=fromfa_id,frombranch_id=frombranch_id,tofa_id=tofa_id,tobranch_id=tobranch_id,createdby_name=createdby_name,paydebitaccnum=paydebitaccnum,paypayeeaccnum=paypayeeaccnum,keyaccountnumber_from=keyaccountnumber_from,created_by_role=created_by_role,payccsstatuscode=payccsstatuscode,payrecurring=payrecurring,life_user_id=life_user_id,current_owner_role=current_owner_role,par_txn_no=par_txn_no,rta_booked_in_flag=rta_booked_in_flag,paytxneprydate=paytxneprydate,next_approver_role=next_approver_role}
getSuspendedFutureTrxns.OutputType=com.tcs.ebw.payments.transferobject.ExtAcctMaintenanceSusGetConfirmOutTO[]
getSuspendedFutureTrxns.StmtType=PreparedStatement

apprExtAccBatch.Query=update ds_batch set batversionnum=batversionnum+1,batstatus=#payccsstatuscode:varchar# where batbatchref =#paybatchref:varchar#
apprExtAccBatch.StmtType=PreparedStatement 

apprExtAccDsPayTxns.Query=update ds_pay_txns set versionnum=versionnum+1,payccsstatuscode=#payccsstatuscode:varchar# where paypayref=#paypayref:varchar#
apprExtAccDsPayTxns.StmtType=PreparedStatement

suspendExtAcct.Query=update ds_payee_ref set versionnum=versionnum+1,cpystatus=#cpystatus:varchar# where cpypayeeid=#cpypayeeid:varchar#
suspendExtAcct.StmtType=PreparedStatement
#ACH Accounts Approval Ends